{"version":3,"sources":["webpack:///src/app/service-center/service-center-routing.module.ts","webpack:///src/app/service-center/service-center.module.ts","webpack:///src/app/service-center/service/service.component.ts","webpack:///src/app/service-center/service/service.component.html"],"names":["routes","path","component","children","ServiceCenterRoutingModule","forChild","imports","exports","ServiceCenterModule","declarations","ServiceComponent","callService","confirm","configurationId","parseInt","localStorage","getItem","deleteAll","toPromise","console","error","message","deleteCallAll","selector","templateUrl","styleUrls"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AACYC,eAAS,EAAE,sHADvB;AACiDC,cAAQ,EAAE,CACvD;AACEF,YAAI,EAAE,EADR;AACYC,iBAAS,EAAE;AADvB,OADuD;AAD3D,KADqB,CAAvB;;QAcaE,0B;;;;;YAAAA;;;;yBAAAA,0B;AAA0B,O;AAAA,gBAH5B,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CAG4B,EAF3B,4DAE2B;;;;0HAA1BI,0B,EAA0B;AAAA;AAAA,kBAF3B,4DAE2B;AAAA,O;AAFf,K;;;;;sEAEXA,0B,EAA0B;cAJtC,sDAIsC;eAJ7B;AACRE,iBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERO,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAI6B,Q;;;;;;;;;;;;;;;;;;ACpBvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAgBaC,mB;;;;;YAAAA;;;;yBAAAA,mB;AAAmB,O;AAAA,gBANrB,CACP,4DADO,EAEP,yFAFO,EAGP,iEAHO,CAMqB;;;;0HAAnBA,mB,EAAmB;AAAA,uBAPf,2EAOe;AAPC,kBAE7B,4DAF6B,EAG7B,yFAH6B,EAI7B,iEAJ6B;AAOD,O;AAHd,K;;;;;sEAGLA,mB,EAAmB;cAR/B,sDAQ+B;eARtB;AACRC,sBAAY,EAAE,CAAC,2EAAD,CADN;AAERH,iBAAO,EAAE,CACP,4DADO,EAEP,yFAFO,EAGP,iEAHO;AAFD,S;AAQsB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCNnBI,gB;AAEX,gCAAoBC,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAA6B;;;;mCAEtC,CACV;;;wCAEqB;;;;;;;;;yBAEbC,OAAO,CAAC,mEAAD,C;;;;;AACHC,mC,GAAkBC,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAD,C;;AAChC,2BAAM,KAAKL,WAAL,CAAiBM,SAAjB,CAA2BJ,eAA3B,EAA4CK,SAA5C,EAAN;;;AACA,gFAAO,6BAAP;;;;;;;;;AAGAC,2BAAO,CAACC,KAAR;AACA,gFAAO,YAAIC,OAAX,EAAoB,OAApB;;;;;;;;;AAEN;;;;;;;uBAlBUX,gB,EAAgB,wI;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,c;AAAA,a;AAAA,8L;AAAA;AAAA;ACV7B;;AAGW;AAAA,mBAAS,IAAAY,aAAA,EAAT;AAAwB,WAAxB;;AACX;;;;;;;;;sEDMaZ,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTa,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKkB,Q","file":"service-center-service-center-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {OperatorsLayoutComponent} from '../operators-center/operators-layout/operators-layout.component';\nimport {ServiceComponent} from './service/service.component';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: OperatorsLayoutComponent, children: [\n      {\n        path: '', component: ServiceComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ServiceCenterRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ServiceCenterRoutingModule } from './service-center-routing.module';\nimport { ServiceComponent } from './service/service.component';\nimport {DxButtonModule} from 'devextreme-angular';\n\n\n@NgModule({\n  declarations: [ServiceComponent],\n  imports: [\n    CommonModule,\n    ServiceCenterRoutingModule,\n    DxButtonModule\n  ]\n})\nexport class ServiceCenterModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {CallService} from '../../@core/services/call.service';\nimport notify from 'devextreme/ui/notify';\nimport {ConfigurationService} from '../../@core/services/configuration.service';\n\n@Component({\n  selector: 'app-service',\n  templateUrl: './service.component.html',\n  styleUrls: ['./service.component.scss']\n})\nexport class ServiceComponent implements OnInit {\n\n  constructor(private callService: CallService) { }\n\n  ngOnInit() {\n  }\n\n  async deleteCallAll() {\n     try {\n       if (confirm('Вы действительно хотите удалить все звонки, события и переменные?')) {\n         const configurationId = parseInt(localStorage.getItem('organization'));\n         await this.callService.deleteAll(configurationId).toPromise();\n         notify('Операция успешна выполнена!');\n       }\n     } catch (err) {\n         console.error(err);\n         notify(err.message, 'error');\n     }\n  }\n}\n","<dx-button stylingMode=\"contained\"\n           type=\"success\"\n           text=\"Очистить хранилище\"\n           (click)=\"deleteCallAll()\">\n</dx-button>\n"]}