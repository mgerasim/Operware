{"version":3,"sources":["webpack:///src/app/@core/models/configurationVariable.model.ts","webpack:///src/app/@core/services/configurationVariable.service.ts","webpack:///src/app/configuration-center/configuration-callback/configuration-callback.component.ts","webpack:///src/app/configuration-center/configuration-callback/configuration-callback.component.html","webpack:///src/app/configuration-center/configuration-center-routing.module.ts","webpack:///src/app/configuration-center/configuration-center.module.ts","webpack:///src/app/configuration-center/configuration-event-binding/configuration-event-binding.component.ts","webpack:///src/app/configuration-center/configuration-event-binding/configuration-event-binding.component.html","webpack:///src/app/configuration-center/configuration-layout/configuration-layout.component.ts","webpack:///src/app/configuration-center/configuration-layout/configuration-layout.component.html","webpack:///src/app/configuration-center/configuration-variable/configuration-variable-form/configuration-variable-form.component.ts","webpack:///src/app/configuration-center/configuration-variable/configuration-variable-form/configuration-variable-form.component.html","webpack:///src/app/configuration-center/configuration-variable/configuration-variable.component.ts","webpack:///src/app/configuration-center/configuration-variable/configuration-variable.component.html","webpack:///src/app/configuration-center/configuration/configuration.component.html","webpack:///src/app/configuration-center/configuration/configuration.component.ts"],"names":["ConfigurationVariable","id","undefined","ConfigurationVariableService","httpClient","defaultHeaders","configurationId","observe","reportProgress","headers","httpHeaderAccepts","consumes","get","configurationVariable","post","responseType","put","providedIn","ConfigurationCallbackComponent","configurationService","subscribe","configurations","configuration","save","res","error","console","messsage","selector","templateUrl","styleUrls","routes","path","canActivate","component","children","ConfigurationCenterRoutingModule","forChild","imports","exports","ConfigurationCenterModule","declarations","ConfigurationEventBindingComponent","titleEvents","titleFields","loadingVisible","message","Error","ConfigurationLayoutComponent","ConfigurationVariableFormComponent","configurationVariableService","apply","parseInt","localStorage","getItem","log","update","emit","err","add","ConfigurationVariableComponent","popupVisible","configurationVariables","$event","location","reload","data","ConfigurationComponent","getById","toPromise","setItem"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAAaA,qB,GAcX,iCAAc;AAAA;;AACZ,WAAKC,EAAL,GAAUC,SAAV;AACD,K;;;;;;;;;;;;;;;;;AChBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,4B;AAIX,4CAAoBC,UAApB,EAA4C;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA;AAFb,aAAAC,cAAA,GAAiB,IAAI,gEAAJ,EAAjB;AAEwC;;;;4BAKpCC,e,EAA+E;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAExF,cAAMC,OAAO,GAAG,KAAKJ,cAArB,CAFwF,CAIxF;;AACA,cAAMK,iBAAiB,GAAa,CAClC,kBADkC,EAElC,WAFkC,EAGlC,iBAHkC,EAIlC,UAJkC,CAApC,CALwF,CAYxF;;AACA,cAAMC,QAAQ,GAAa,EAA3B;AAEA,iBAAO,KAAKP,UAAL,CAAgBQ,GAAhB,8BAAmEN,eAAnE,iBACL;AACEG,mBAAO,EAAEA,OADX;AAEEF,mBAAO,EAAEA,OAFX;AAGEC,0BAAc,EAAEA;AAHlB,WADK,CAAP;AAOD;;;4BAEUK,qB,EAA4C;AAErD,cAAMJ,OAAO,GAAG,KAAKJ,cAArB;AAEA,iBAAO,KAAKD,UAAL,CAAgBU,IAAhB,iCAA4ED,qBAA5E,EACL;AACEN,mBAAO,EAAE,MADX;AAEEQ,wBAAY,EAAE;AAFhB,WADK,CAAP;AAMD;;;+BAEaF,qB,EAA4C;AAExD,cAAMJ,OAAO,GAAG,KAAKJ,cAArB;AAEA,iBAAO,KAAKD,UAAL,CAAgBY,GAAhB,iCAA2EH,qBAA3E,EACL;AACEN,mBAAO,EAAE,MADX;AAEEQ,wBAAY,EAAE;AAFhB,WADK,CAAP;AAMD;;;;;;;uBAvDUZ,4B,EAA4B,uH;AAAA,K;;;aAA5BA,4B;AAA4B,eAA5BA,4BAA4B,K;AAAA,kBAF3B;;;;;sEAEDA,4B,EAA4B;cAHxC,wDAGwC;eAH7B;AACVc,oBAAU,EAAE;AADF,S;AAG6B,Q;;;;;;;;;;;;;;;;;;;;;;ACRzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaC,8B;AAGX,8CAAoBC,oBAApB,EAAgE;AAAA;;AAA5C,aAAAA,oBAAA,GAAAA,oBAAA;AAA+C;;;;mCAExD;AAAA;;AACT,eAAKA,oBAAL,CAA0BP,GAA1B,GAAgCQ,SAAhC,CAA0C,UAAAC,cAAc,EAAI;AAC1D,gBAAIA,cAAc,KAAK,IAAvB,EAA6B;AAC3B;AACD;;AACD,iBAAI,CAACC,aAAL,GAAqBD,cAAc,CAAC,CAAD,CAAnC;AACD,WALD;AAMD;;;+BAEM;AACL,eAAKF,oBAAL,CAA0BI,IAA1B,CAA+B,KAAKD,aAApC,EAAmDF,SAAnD,CAA6D,UAAAI,GAAG,EAAI;AAClE,wEAAO,iCAAP;AACD,WAFD,EAEG,UAAAC,KAAK,EAAI;AACVC,mBAAO,CAACD,KAAR,CAAcA,KAAd;AACA,wEAAOA,KAAK,CAACE,QAAb,EAAuB,OAAvB;AACD,WALD;AAMD;;;;;;;uBArBUT,8B,EAA8B,0J;AAAA,K;;;YAA9BA,8B;AAA8B,iD;AAAA,c;AAAA,a;AAAA,mb;AAAA;AAAA;ACV3C;;AACE;;AACE;;AAEE;;AACE;;AACF;;AAEA;;AACE;;AACF;;AAEF;;AAEF;;AACA;;AACE;;AAGW;AAAA,mBAAS,IAAAK,IAAA,EAAT;AAAe,WAAf;;AACX;;AACF;;AACF;;;;AApBa;;AAAA;;;;;;;;;sEDQAL,8B,EAA8B;cAL1C,uDAK0C;eALhC;AACTU,kBAAQ,EAAE,4BADD;AAETC,qBAAW,EAAE,yCAFJ;AAGTC,mBAAS,EAAE,CAAC,yCAAD;AAHF,S;AAKgC,Q;;;;;;;;;;;;;;;;;;;;;;AEV3C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAWA,QAAMC,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AACYC,iBAAW,EAAE,CAAC,iEAAD,CADzB;AACsCC,eAAS,EAAE,mGADjD;AACsEC,cAAQ,EAAE,CAC5E;AACEH,YAAI,EAAE,EADR;AACYE,iBAAS,EAAE;AADvB,OAD4E,EAI5E;AACEF,YAAI,EAAE,WADR;AACqBE,iBAAS,EAAE;AADhC,OAJ4E,EAO5E;AACEF,YAAI,EAAE,UADR;AACoBE,iBAAS,EAAE;AAD/B,OAP4E,EAU5E;AACEF,YAAI,EAAE,eADR;AACyBE,iBAAS,EAAE;AADpC,OAV4E;AADhF,KADqB,CAAvB;;QAuBaE,gC;;;;;YAAAA;;;;yBAAAA,gC;AAAgC,O;AAAA,gBAHlC,CAAC,6DAAaC,QAAb,CAAsBN,MAAtB,CAAD,CAGkC,EAFjC,4DAEiC;;;;0HAAhCK,gC,EAAgC;AAAA;AAAA,kBAFjC,4DAEiC;AAAA,O;AAFrB,K;;;;;sEAEXA,gC,EAAgC;cAJ5C,sDAI4C;eAJnC;AACRE,iBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBN,MAAtB,CAAD,CADD;AAERQ,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImC,Q;;;;;;;;;;;;;;;;;;AClC7C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA4BaC,yB;;;;;YAAAA;;;;yBAAAA,yB;AAAyB,O;AAAA,gBAZ3B,CACP,4DADO,EAEP,qGAFO,EAGP,+DAHO,EAIP,iEAJO,EAKP,oEALO,EAMP,mEANO,EAOP,2DAPO,EAQP,gEARO,EASP,qEATO,CAY2B;;;;0HAAzBA,yB,EAAyB;AAAA,uBAbrB,6FAaqB,EAbG,iHAaH,EAbiC,uHAajC,EAbiE,4JAajE,EAbqG,uHAarG,EAbqI,sIAarI;AAbuK,kBAEzM,4DAFyM,EAGzM,qGAHyM,EAIzM,+DAJyM,EAKzM,iEALyM,EAMzM,oEANyM,EAOzM,mEAPyM,EAQzM,2DARyM,EASzM,gEATyM,EAUzM,qEAVyM;AAavK,O;AAHhB,K;;;;;sEAGTA,yB,EAAyB;cAdrC,sDAcqC;eAd5B;AACRC,sBAAY,EAAE,CAAC,6FAAD,EAAyB,iHAAzB,EAAuD,uHAAvD,EAAuF,4JAAvF,EAA2H,uHAA3H,EAA2J,sIAA3J,CADN;AAERH,iBAAO,EAAE,CACP,4DADO,EAEP,qGAFO,EAGP,+DAHO,EAIP,iEAJO,EAKP,oEALO,EAMP,mEANO,EAOP,2DAPO,EAQP,gEARO,EASP,qEATO;AAFD,S;AAc4B,Q;;;;;;;;;;;;;;;;;;AC5BtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACAA;;AACE;;AACE;;AACE;;AAEE;;AACE;;AAQA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AAEF;;AAGA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AAGF;;AAEA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AAEF;;AAEF;;AAGF;;AACF;;AACF;;AAEA;;AAEE;AAAA;;AAAA;;AAAA;AAAA;;AACF;;AACF;;;;;;AA5FW;;AAAA;;AACqB;;AAAA;;AAKpB;;AAAA,0EAAQ,IAAR,EAAQ,CAAR,EAAQ,IAAR,EAAQ,CAAR,EAAQ,IAAR,EAAQ,CAAR;;AAQsE;;AAAA;;AAGA;;AAAA;;AAQG;;AAAA;;AAYD;;AAAA;;AAGD;;AAAA;;AAQG;;AAAA;;AAYN;;AAAA;;AAGA;;AAAA;;AAQG;;AAAA;;;;QD9DtEI,kC;AA8BX,kDAAoBvB,oBAApB,EAAgE;AAAA;;AAA5C,aAAAA,oBAAA,GAAAA,oBAAA;AA7BpB,aAAAwB,WAAA,GAAwB,CACtB,QADsB,EAEtB,UAFsB,EAGtB,MAHsB,EAItB,UAJsB,EAKtB,aALsB,EAMtB,YANsB,CAAxB;AAQA,aAAAC,WAAA,GAAwB,CACtB,OADsB,EAEtB,WAFsB,EAGtB,SAHsB,EAItB,cAJsB,EAKtB,kBALsB,EAMtB,aANsB,EAOtB,cAPsB,EAQtB,kBARsB,EAStB,mBATsB,EAUtB,UAVsB,EAWtB,aAXsB,EAYtB,SAZsB,EAatB,OAbsB,EActB,UAdsB,EAetB,UAfsB,EAgBtB,UAhBsB,EAiBtB,OAjBsB,CAAxB;AAoBA,aAAAC,cAAA,GAAiB,KAAjB;AACmE;;;;mCAExD;AAAA;;AACT,eAAK1B,oBAAL,CAA0BP,GAA1B,GAAgCQ,SAAhC,CAA0C,UAAAC,cAAc,EAAI;AAC1D,gBAAIA,cAAc,KAAK,IAAvB,EAA6B;AAC3B;AACD;;AACD,kBAAI,CAACC,aAAL,GAAqBD,cAAc,CAAC,CAAD,CAAnC;AACD,WALD;AAMD;;;+BAEM;AAAA;;AACL,eAAKwB,cAAL,GAAsB,IAAtB;AACA,eAAK1B,oBAAL,CAA0BI,IAA1B,CAA+B,KAAKD,aAApC,EAAmDF,SAAnD,CAA6D,UAAAI,GAAG,EAAI;AAClE,wEAAO,gCAAP;AACA,kBAAI,CAACqB,cAAL,GAAsB,KAAtB;AACD,WAHD,EAGG,UAAApB,KAAK,EAAI;AACV,kBAAI,CAACoB,cAAL,GAAsB,KAAtB;AACA,wEAAOpB,KAAK,CAACqB,OAAb,EAAsB,OAAtB;AACA,kBAAM,IAAIC,KAAJ,CAAUtB,KAAV,CAAN;AACD,WAPD;AAQD;;;;;;;uBAnDUiB,kC,EAAkC,0J;AAAA,K;;;YAAlCA,kC;AAAkC,sD;AAAA,e;AAAA,a;AAAA,+uE;AAAA;AAAA;ACV/C;;AA+FA;;AAAI;;AAAkC;;AACtC;;AACE;;AAAM;;AAAU;;AAAQ;;AAAoB;;AAC5C;;AAAM;;AAAQ;;AAAQ;;AAA4B;;AAClD;;AAAM;;AAAS;;AAAQ;;AAAiB;;AACxC;;AAAM;;AAAa;;AAAQ;;AAAsB;;AACnD;;AACA;;AACE;;AAA6F;;AAAM;;AAAa;;AAClH;;AAEA;;;;AA1Gc;;AA0GC;;AAAA;;;;;;;;;sEDhGFA,kC,EAAkC;cAL9C,uDAK8C;eALpC;AACTd,kBAAQ,EAAE,iCADD;AAETC,qBAAW,EAAE,8CAFJ;AAGTC,mBAAS,EAAE,CAAC,8CAAD;AAHF,S;AAKoC,Q;;;;;;;;;;;;;;;;;;;;;;AEV/C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOakB,4B;AAEX,8CAAc;AAAA;AAAG;;;;mCAEN,CACV;;;;;;;uBALUA,4B;AAA4B,K;;;YAA5BA,4B;AAA4B,+C;AAAA,c;AAAA,a;AAAA;AAAA;ACPzC;;;;;;;;;sEDOaA,4B,EAA4B;cALxC,uDAKwC;eAL9B;AACTpB,kBAAQ,EAAE,0BADD;AAETC,qBAAW,EAAE,uCAFJ;AAGTC,mBAAS,EAAE,CAAC,uCAAD;AAHF,S;AAK8B,Q;;;;;;;;;;;;;;;;;;;;AEPzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;QASamB,kC;AAGX,kDAAoBC,4BAApB,EAAgF;AAAA;;AAA5D,aAAAA,4BAAA,GAAAA,4BAAA;AADV,aAAAC,KAAA,GAAQ,IAAI,0DAAJ,EAAR;AACyE;;;;mCAExE;AACT,cAAI,CAAC,KAAKtC,qBAAV,EAAiC;AAC/B,iBAAKA,qBAAL,GAA6B,IAAI,8FAAJ,EAA7B;AACA,iBAAKA,qBAAL,CAA2BP,eAA3B,GAA6C8C,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAD,CAArD;AACD;AAEF;;;+BAEM;AAAA;;AACH5B,iBAAO,CAAC6B,GAAR,CAAY,KAAK1C,qBAAjB;;AACA,cAAI,KAAKA,qBAAL,CAA2BZ,EAA3B,GAAgC,CAApC,EAAuC;AACrC,iBAAKiD,4BAAL,CAAkCM,MAAlC,CAAyC,KAAK3C,qBAA9C,EAAqEO,SAArE,CAA+E,UAAAI,GAAG,EAAI;AACpF,oBAAI,CAAC2B,KAAL,CAAWM,IAAX,CAAgB,MAAI,CAAC5C,qBAArB;AACD,aAFD,EAEG,UAAA6C,GAAG,EAAI;AACRhC,qBAAO,CAACD,KAAR,CAAciC,GAAd;AACD,aAJD;AAKD,WAND,MAMO;AACL,iBAAKR,4BAAL,CAAkCS,GAAlC,CAAsC,KAAK9C,qBAA3C,EAAkEO,SAAlE,CAA4E,UAAAI,GAAG,EAAI;AACjFE,qBAAO,CAAC6B,GAAR,CAAY/B,GAAZ;;AACA,oBAAI,CAAC2B,KAAL,CAAWM,IAAX,CAAgB,MAAI,CAAC5C,qBAArB;AACD,aAHD,EAGG,UAAA6C,GAAG,EAAI;AACRhC,qBAAO,CAACD,KAAR,CAAciC,GAAd;AACD,aALD;AAMD;AACJ;;;;;;;uBA7BUT,kC,EAAkC,0K;AAAA,K;;;YAAlCA,kC;AAAkC,sD;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,yzC;AAAA;AAAA;ACT/C;;AACE;;AACE;;AAEE;;AAEE;;AACE;;AACF;;AAEA;;AACE;;AACF;;AAEA;;AACE;;AACF;;AAEF;;AAEA;;AAEE;;AACE;;AACF;;AAEA;;AACE;;AACF;;AAEA;;AACE;;AACF;;AAEA;;AACE;;AACF;;AAEA;;AACE;;AACF;;AAEF;;AAGF;;AAEF;;AACA;;AACE;;AAGW;AAAA,mBAAS,IAAA1B,IAAA,EAAT;AAAe,WAAf;;AACX;;AACF;;AACF;;;;AArDa;;AAAA;;AAYqD;;AAAA;;;;;;;;;sEDLrD0B,kC,EAAkC;cAL9C,uDAK8C;eALpC;AACTrB,kBAAQ,EAAE,iCADD;AAETC,qBAAW,EAAE,8CAFJ;AAGTC,mBAAS,EAAE,CAAC,8CAAD;AAHF,S;AAKoC,Q;;;;;;gBAC5C;;;gBACA;;;;;;;;;;;;;;;;;;;;AEXH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACkBM;;AACE;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAClE;;;;;;;;AAgBJ;;AACE;;AACE;;AACE;AAAA;;AAAA;;AAAA;AAAA;;AAEF;;AACF;;AACF;;;;;;AALqC;;AAAA;;;;;;;;QD5B1B8B,8B;AAIX,8CAAoBV,4BAApB,EAAgF;AAAA;;AAA5D,aAAAA,4BAAA,GAAAA,4BAAA;AAFpB,aAAAW,YAAA,GAAe,KAAf;AAEmF;;;;mCAExE;AAAA;;AACT,cAAM5D,EAAE,GAAGoD,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX;;AACA,cAAI,+DAAkBrD,EAAlB,CAAJ,EAA2B;AACzB,kBAAM,IAAI8C,KAAJ,CAAU,oCAAV,CAAN;AACD;;AACD,eAAKG,4BAAL,CAAkCtC,GAAlC,CAAsCwC,QAAQ,CAACnD,EAAD,CAA9C,EAAoDmB,SAApD,CAA8D,UAAA0C,sBAAsB,EAAI;AACtF,gBAAIA,sBAAsB,KAAK,IAA/B,EAAqC;AACnC;AACD;;AACDpC,mBAAO,CAAC6B,GAAR,CAAYO,sBAAZ;AACA,kBAAI,CAACA,sBAAL,GAA8BA,sBAA9B;AACD,WAND;AAOD;;;8BAEK;AACJ,eAAKD,YAAL,GAAoB,IAApB;AACD;;;6BAEIE,M,EAA+B;AAClCrC,iBAAO,CAAC6B,GAAR,CAAYQ,MAAZ;AACA,eAAKF,YAAL,GAAoB,KAApB;AACAG,kBAAQ,CAACC,MAAT;AACD;;;6BAEIC,I,EAAW;AACdxC,iBAAO,CAAC6B,GAAR,CAAYW,IAAZ;AACA,eAAKrD,qBAAL,GAA6BqD,IAA7B;AACA,eAAKL,YAAL,GAAoB,IAApB;AACD;;;;;;;uBAlCUD,8B,EAA8B,0K;AAAA,K;;;YAA9BA,8B;AAA8B,iD;AAAA,e;AAAA,c;AAAA,wpB;AAAA;AAAA;ACV3C;;AACE;;AACE;;AAIE;;AACA;;AACA;;AAMA;;AACA;;AACA;;AAEA;;AAIF;;AACF;;AACA;;AACE;;AAGW;AAAA,mBAAS,IAAAD,GAAA,EAAT;AAAc,WAAd;;AACX;;AACF;;AACF;;AAGA;;AACU;AAAA;AAAA;;AACR;;AAQF;;;;AAxCM;;AAAA,6GAAqC,aAArC,EAAqC,IAArC;;AAEY;;AAAA;;AACM;;AAAA;;AAEhB;;AAAA,iGAA6B,kBAA7B,EAA6B,sEAA7B,EAA6B,UAA7B,EAA6B,IAA7B;;AASG;;AAAA;;AAiBD;;AAAA;;AACH;;AAAA;;;;;;;;;sED1BMC,8B,EAA8B;cAL1C,uDAK0C;eALhC;AACThC,kBAAQ,EAAE,4BADD;AAETC,qBAAW,EAAE,yCAFJ;AAGTC,mBAAS,EAAE,CAAC,yCAAD;AAHF,S;AAKgC,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEV3C;;AACE;;AACE;;AACE;;AACE;;AACE;;AAEE;;AACE;;AACF;;AAEA;;AACE;;AACF;;AAEA;;AAEE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AACE;;AACF;;AAEF;;AAEA;;AAEE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AAEA;;AAEE;;AACE;;AACF;;AACF;;AAEF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAEE;AAAA;;AAAA;;AAAA;AAAA;;AACF;;AACF;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AACF;;AACF;;AACF;;AACF;;AACF;;AAGF;;;;;;AA9Ee;;AAAA;;AACqB;;AAAA;;AAGC;;AAAA;;AAuB6B;;AAAA;;;;QCnBrDqC,sB;AAGX,sCAAsBhD,oBAAtB,EAAkE;AAAA;;AAA5C,aAAAA,oBAAA,GAAAA,oBAAA;AADtB,aAAA0B,cAAA,GAAiB,KAAjB;AACqE;;;;mCAE1D;AAAA;;AACT,cAAM5C,EAAE,GAAGoD,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX;;AACA,cAAI,+DAAkBrD,EAAlB,CAAJ,EAA2B;AACzB,kBAAM,IAAI8C,KAAJ,CAAU,uCAAV,CAAN;AACD;;AACD,eAAK5B,oBAAL,CAA0BiD,OAA1B,CAAkChB,QAAQ,CAACnD,EAAD,CAA1C,EAAgDmB,SAAhD,CAA0D,UAAAE,aAAa,EAAI;AACzEI,mBAAO,CAAC6B,GAAR,CAAYjC,aAAZ;AACA,kBAAI,CAACA,aAAL,GAAqBA,aAArB;AACD,WAHD;AAID;;;+BAEM;AAAA;;AACH,eAAKuB,cAAL,GAAsB,IAAtB;AACA,eAAK1B,oBAAL,CAA0BI,IAA1B,CAA+B,KAAKD,aAApC,EAAmDF,SAAnD,CAA6D,UAAAI,GAAG,EAAI;AAClE,wEAAO,gCAAP;AACA,kBAAI,CAACqB,cAAL,GAAsB,KAAtB;AACAmB,oBAAQ,CAACC,MAAT;AACD,WAJD,EAIG,UAAAxC,KAAK,EAAI;AACV,kBAAI,CAACoB,cAAL,GAAsB,KAAtB;AACA,wEAAOpB,KAAK,CAACqB,OAAb,EAAsB,OAAtB;AACA,kBAAM,IAAIC,KAAJ,CAAUtB,KAAV,CAAN;AACD,WARD;AASH;;;kCAEc;;;;;;;AAEXC,2BAAO,CAAC6B,GAAR,CAAY,KAAKjC,aAAL,CAAmBrB,EAA/B;;AACA,2BAAM,KAAKkB,oBAAL,WAAiC,KAAKG,aAAL,CAAmBrB,EAApD,EAAwDoE,SAAxD,EAAN;;;AACA,gFAAO,8BAAP;AACAhB,gCAAY,CAACiB,OAAb,CAAqB,cAArB,EAAqC,IAArC;AACAN,4BAAQ,CAACC,MAAT;;;;;;;AAEAvC,2BAAO,CAACD,KAAR,CAAc,YAAEqB,OAAhB;;;;;;;;;AAGH;;;;;;;uBAxCUqB,sB,EAAsB,0J;AAAA,K;;;YAAtBA,sB;AAAsB,wC;AAAA,c;AAAA,a;AAAA,izE;AAAA;AAAA;ADXnC;;AAmFA;;;;AAnFc;;AAmFC;;AAAA;;;;;;;;;sECxEFA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACTvC,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKwB,Q","file":"configuration-center-configuration-center-module-es5.js","sourcesContent":["export class ConfigurationVariable {\n  id: number | undefined\n  createdAt: Date;\n  updatedAt: Date;\n  title: string;\n  requestUrl: string;\n  requestBody: string;\n  response: number;\n  sourceFieldName: string;\n  sourceFieldValue: string;\n  sourceFieldName2: string;\n  sourceFieldValue2: string;\n  sourceField: string;\n  configurationId: number;\n  constructor() {\n    this.id = undefined;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {ConfigurationVariable} from '../models/configurationVariable.model';\nimport {Observable} from 'rxjs';\nimport {HttpClient, HttpEvent, HttpHeaders, HttpResponse} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigurationVariableService {\n\n  public defaultHeaders = new HttpHeaders();\n\n  constructor(private httpClient: HttpClient) { }\n\n  public get(configurationId: number, observe?: 'body', reportProgress?: boolean): Observable<ConfigurationVariable[]>;\n  public get(configurationId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<ConfigurationVariable[]>>;\n  public get(configurationId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<ConfigurationVariable[]>>;\n  public get(configurationId: number, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n    const headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'application/json',\n      'text/json',\n      'application/xml',\n      'text/xml'\n    ];\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<ConfigurationVariable[]>(`/api/configuration/${configurationId}/variables`,\n      {\n        headers: headers,\n        observe: observe,\n        reportProgress: reportProgress\n      }\n    );\n  }\n\n  public add(configurationVariable: ConfigurationVariable): Observable<ConfigurationVariable> {\n\n    const headers = this.defaultHeaders;\n\n    return this.httpClient.post<ConfigurationVariable>(`/api/configuration/variables`, configurationVariable,\n      {\n        observe: 'body',\n        responseType: 'json'\n      }\n    );\n  }\n\n  public update(configurationVariable: ConfigurationVariable): Observable<ConfigurationVariable> {\n\n    const headers = this.defaultHeaders;\n\n    return this.httpClient.put<ConfigurationVariable>(`/api/configuration/variables`, configurationVariable,\n      {\n        observe: 'body',\n        responseType: 'json'\n      }\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Configuration} from '../../@core/models/configuration.model';\nimport {ConfigurationService} from '../../@core/services/configuration.service';\nimport notify from 'devextreme/ui/notify';\n\n@Component({\n  selector: 'app-configuration-callback',\n  templateUrl: './configuration-callback.component.html',\n  styleUrls: ['./configuration-callback.component.scss']\n})\nexport class ConfigurationCallbackComponent implements OnInit {\n  configuration: Configuration;\n\n  constructor(private configurationService: ConfigurationService) { }\n\n  ngOnInit() {\n    this.configurationService.get().subscribe(configurations => {\n      if (configurations === null) {\n        return;\n      }\n      this.configuration = configurations[0];\n    });\n  }\n\n  save() {\n    this.configurationService.save(this.configuration).subscribe(res => {\n      notify('Конфигурация успешна обновллена');\n    }, error => {\n      console.error(error);\n      notify(error.messsage, 'error');\n    });\n  }\n}\n","<nb-card>\n  <nb-card-body>\n    <dx-form [formData]=\"configuration\" colCount=\"1\">\n\n      <dxi-item dataField=\"callbackTimeout\">\n        <dxo-label text=\"Время ожидания звонка\"></dxo-label>\n      </dxi-item>\n\n      <dxi-item dataField=\"callbackContext\">\n        <dxo-label text=\"Контекст\"></dxo-label>\n      </dxi-item>\n\n    </dx-form>\n\n  </nb-card-body>\n  <nb-card-footer>\n    <dx-button stylingMode=\"contained\"\n               type=\"success\"\n               text=\"Сохранить\"\n               (click)=\"save()\">\n    </dx-button>\n  </nb-card-footer>\n</nb-card>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ConfigurationLayoutComponent} from './configuration-layout/configuration-layout.component';\nimport {ConfigurationComponent} from './configuration/configuration.component';\nimport {ConfigurationVariableComponent} from './configuration-variable/configuration-variable.component';\nimport {ConfigurationCallbackComponent} from './configuration-callback/configuration-callback.component';\nimport {ConfigurationEventBindingComponent} from './configuration-event-binding/configuration-event-binding.component';\nimport {AuthGuard} from '../@core/guards/auth.guard';\nimport {MainLayoutComponent} from '../@core/layouts/main-layout/main-layout.component';\n\n\nconst routes: Routes = [\n  {\n    path: '', canActivate: [AuthGuard], component: MainLayoutComponent, children: [\n      {\n        path: '', component: ConfigurationComponent\n      },\n      {\n        path: 'variables', component: ConfigurationVariableComponent\n      },\n      {\n        path: 'callback', component: ConfigurationCallbackComponent\n      },\n      {\n        path: 'event-binding', component: ConfigurationEventBindingComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConfigurationCenterRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ConfigurationCenterRoutingModule } from './configuration-center-routing.module';\nimport { ConfigurationComponent } from './configuration/configuration.component';\nimport { ConfigurationLayoutComponent } from './configuration-layout/configuration-layout.component';\nimport {DxButtonModule, DxDataGridModule, DxFormModule, DxLoadPanelModule, DxPopupModule, DxScrollViewModule} from 'devextreme-angular';\nimport { ConfigurationVariableComponent } from './configuration-variable/configuration-variable.component';\nimport {NbCardModule} from '@nebular/theme';\nimport { ConfigurationVariableFormComponent } from './configuration-variable/configuration-variable-form/configuration-variable-form.component';\nimport { ConfigurationCallbackComponent } from './configuration-callback/configuration-callback.component';\nimport { ConfigurationEventBindingComponent } from './configuration-event-binding/configuration-event-binding.component';\n\n\n@NgModule({\n  declarations: [ConfigurationComponent, ConfigurationLayoutComponent, ConfigurationVariableComponent, ConfigurationVariableFormComponent, ConfigurationCallbackComponent, ConfigurationEventBindingComponent],\n  imports: [\n    CommonModule,\n    ConfigurationCenterRoutingModule,\n    DxFormModule,\n    DxButtonModule,\n    DxLoadPanelModule,\n    DxDataGridModule,\n    NbCardModule,\n    DxPopupModule,\n    DxScrollViewModule\n  ]\n})\nexport class ConfigurationCenterModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {Configuration} from '../../@core/models/configuration.model';\nimport {ConfigurationService} from '../../@core/services/configuration.service';\nimport notify from 'devextreme/ui/notify';\n\n@Component({\n  selector: 'app-configuration-event-binding',\n  templateUrl: './configuration-event-binding.component.html',\n  styleUrls: ['./configuration-event-binding.component.scss']\n})\nexport class ConfigurationEventBindingComponent implements OnInit {\n  titleEvents: string[] = [\n    'Hangup',\n    'Newstate',\n    'Dial',\n    'Newexten',\n    'NewCallerid',\n    'Newchannel'\n  ];\n  titleFields: string[] = [\n    'Event',\n    'Privilege',\n    'Channel',\n    'ChannelState',\n    'ChannelStateDesc',\n    'CallerIDNum',\n    'CallerIDName',\n    'ConnectedLineNum',\n    'ConnectedLineName',\n    'Language',\n    'AccountCode',\n    'Context',\n    'Exten',\n    'Priority',\n    'Uniqueid',\n    'Linkedid',\n    'Cause'\n  ];\n  configuration: Configuration;\n  loadingVisible = false;\n  constructor(private configurationService: ConfigurationService) { }\n\n  ngOnInit() {\n    this.configurationService.get().subscribe(configurations => {\n      if (configurations === null) {\n        return;\n      }\n      this.configuration = configurations[0];\n    });\n  }\n\n  save() {\n    this.loadingVisible = true;\n    this.configurationService.save(this.configuration).subscribe(res => {\n      notify('Конфигурация успешно обновлена');\n      this.loadingVisible = false;\n    }, error => {\n      this.loadingVisible = false;\n      notify(error.message, 'error');\n      throw new Error(error);\n    });\n  }\n\n}\n","<ng-container *ngIf=\"configuration\">\n  <dx-form [formData]=\"configuration\">\n    <dxi-item itemType=\"tabbed\" [tabPanelOptions]=\"{ deferRendering: false }\">\n      <dxi-tab title=\"Привязка событий\">\n\n        <dxi-item itemType=\"group\">\n          <dxo-col-count-by-screen\n            [xs]=\"1\"\n            [sm]=\"2\"\n            [md]='3'\n            [lg]='3'>\n          </dxo-col-count-by-screen>\n\n\n          <dxi-item itemType=\"group\"  caption=\"Событие поступления звонка\">\n            <dxi-item dataField=\"incomingStartCallEvent\" editorType=\"dxSelectBox\" [editorOptions]=\"{ dataSource: titleEvents }\">\n              <dxo-label text=\"Событие\"></dxo-label>\n            </dxi-item>\n            <dxi-item dataField=\"incomingStartCallField\" editorType=\"dxSelectBox\" [editorOptions]=\"{ dataSource: titleFields }\">\n              <dxo-label text=\"Поле\"></dxo-label>\n            </dxi-item>\n            <dxi-item dataField=\"incomingStartCallValue\">\n              <dxo-label text=\"Значение\"></dxo-label>\n            </dxi-item>\n\n            <dxi-item itemType=\"group\" caption=\"Дополнительное поле\">\n              <dxi-item dataField=\"incomingStartCallField2\" editorType=\"dxSelectBox\" [editorOptions]=\"{ dataSource: titleFields }\">\n                <dxo-label text=\"Поле\"></dxo-label>\n              </dxi-item>\n              <dxi-item dataField=\"incomingStartCallValue2\">\n                <dxo-label text=\"Значение\"></dxo-label>\n              </dxi-item>\n            </dxi-item>\n\n          </dxi-item>\n\n\n          <dxi-item itemType=\"group\" caption=\"Событие отвеченного звонка\">\n            <dxi-item dataField=\"incomingAnswerCallEvent\"  editorType=\"dxSelectBox\" [editorOptions]=\"{ dataSource: titleEvents }\">\n              <dxo-label text=\"Событие\"></dxo-label>\n            </dxi-item>\n            <dxi-item dataField=\"incomingAnswerCallField\" editorType=\"dxSelectBox\" [editorOptions]=\"{ dataSource: titleFields }\">\n              <dxo-label text=\"Поле\"></dxo-label>\n            </dxi-item>\n            <dxi-item dataField=\"incomingAnswerCallValue\">\n              <dxo-label text=\"Значение\"></dxo-label>\n            </dxi-item>\n\n            <dxi-item itemType=\"group\" caption=\"Дополнительное поле\">\n              <dxi-item dataField=\"incomingAnswerCallField2\" editorType=\"dxSelectBox\" [editorOptions]=\"{ dataSource: titleFields }\">\n                <dxo-label text=\"Поле\"></dxo-label>\n              </dxi-item>\n              <dxi-item dataField=\"incomingAnswerCallValue2\">\n                <dxo-label text=\"Значение\"></dxo-label>\n              </dxi-item>\n            </dxi-item>\n\n\n          </dxi-item>\n\n          <dxi-item itemType=\"group\" caption=\"Событие завершения звонка\">\n            <dxi-item dataField=\"incomingEndCallEvent\" editorType=\"dxSelectBox\" [editorOptions]=\"{ dataSource: titleEvents}\">\n              <dxo-label text=\"Событие\"></dxo-label>\n            </dxi-item>\n            <dxi-item dataField=\"incomingEndCallField\" editorType=\"dxSelectBox\" [editorOptions]=\"{ dataSource: titleFields }\">\n              <dxo-label text=\"Поле\"></dxo-label>\n            </dxi-item>\n            <dxi-item dataField=\"incomingEndCallValue\">\n              <dxo-label text=\"Значение\"></dxo-label>\n            </dxi-item>\n\n            <dxi-item itemType=\"group\" caption=\"Дополнительное поле\">\n              <dxi-item dataField=\"incomingEndCallField2\" editorType=\"dxSelectBox\" [editorOptions]=\"{ dataSource: titleFields }\">\n                <dxo-label text=\"Поле\"></dxo-label>\n              </dxi-item>\n              <dxi-item dataField=\"incomingEndCallValue2\">\n                <dxo-label text=\"Значение\"></dxo-label>\n              </dxi-item>\n            </dxi-item>\n\n          </dxi-item>\n\n        </dxi-item>\n\n\n      </dxi-tab>\n    </dxi-item>\n  </dx-form>\n\n  <dx-button\n    text=\"Сохранить\"\n    (onClick)=\"save()\">\n  </dx-button>\n</ng-container>\n\n<h5>Создаваемые переменные по событиям</h5>\n<p>\n  <code>CALL_START</code> - Поступление звонка<br/>\n  <code>CALL_END</code> - Окончание обработки звонка<br/>\n  <code>CALL_LOST</code> - Звонок пропущен<br/>\n  <code>CALL_FINISHED</code> - Завершение разговора<br/>\n</p>\n<p>\n  Данные переменные можно использоватья для привязки действий (HTTP  запросы) и в теле запроса <code>@CALL_STARTED</code>\n</p>\n\n<dx-load-panel [visible]=\"loadingVisible\"\n               shadingColor=\"rgba(0,0,0,0.3)\"></dx-load-panel>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-configuration-layout',\n  templateUrl: './configuration-layout.component.html',\n  styleUrls: ['./configuration-layout.component.scss']\n})\nexport class ConfigurationLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ConfigurationVariable} from '../../../@core/models/configurationVariable.model';\nimport {ConfigurationVariableService} from '../../../@core/services/configurationVariable.service';\n\n@Component({\n  selector: 'app-configuration-variable-form',\n  templateUrl: './configuration-variable-form.component.html',\n  styleUrls: ['./configuration-variable-form.component.scss']\n})\nexport class ConfigurationVariableFormComponent implements OnInit {\n  @Input() configurationVariable: ConfigurationVariable;\n  @Output() apply = new EventEmitter();\n  constructor(private configurationVariableService: ConfigurationVariableService) { }\n\n  ngOnInit() {\n    if (!this.configurationVariable) {\n      this.configurationVariable = new ConfigurationVariable();\n      this.configurationVariable.configurationId = parseInt(localStorage.getItem('organization'));\n    }\n\n  }\n\n  save() {\n      console.log(this.configurationVariable);\n      if (this.configurationVariable.id > 0) {\n        this.configurationVariableService.update(this.configurationVariable).subscribe(res => {\n          this.apply.emit(this.configurationVariable);\n        }, err => {\n          console.error(err);\n        });\n      } else {\n        this.configurationVariableService.add(this.configurationVariable).subscribe(res => {\n          console.log(res);\n          this.apply.emit(this.configurationVariable);\n        }, err => {\n          console.error(err);\n        });\n      }\n  }\n}\n","<nb-card>\n  <nb-card-body>\n    <dx-form [formData]=\"configurationVariable\" colCount=\"1\">\n\n      <dxi-item itemType='group' caption='Общие настройки'>\n\n        <dxi-item dataField=\"title\">\n          <dxo-label text=\"Наименование\"></dxo-label>\n        </dxi-item>\n\n        <dxi-item dataField=\"requestUrl\">\n          <dxo-label text=\"Запрос\"></dxo-label>\n        </dxi-item>\n\n        <dxi-item dataField=\"requestBody\" editorType=\"dxTextArea\" [editorOptions]=\"{ height: '200px' }\">\n          <dxo-label text=\"Тело запроса\"></dxo-label>\n        </dxi-item>\n\n      </dxi-item>\n\n      <dxi-item itemType='group' caption='Источник'>\n\n        <dxi-item dataField=\"sourceFieldName\">\n          <dxo-label text=\"Наименование поле\"></dxo-label>\n        </dxi-item>\n\n        <dxi-item dataField=\"sourceFieldValue\">\n          <dxo-label text=\"Значение\"></dxo-label>\n        </dxi-item>\n\n        <dxi-item dataField=\"sourceFieldName2\">\n          <dxo-label text=\"Наименование поле2\"></dxo-label>\n        </dxi-item>\n\n        <dxi-item dataField=\"sourceFieldValue2\">\n          <dxo-label text=\"Значение2\"></dxo-label>\n        </dxi-item>\n\n        <dxi-item dataField=\"sourceField\">\n          <dxo-label text=\"Поле источник\"></dxo-label>\n        </dxi-item>\n\n      </dxi-item>\n\n\n    </dx-form>\n\n  </nb-card-body>\n  <nb-card-footer>\n    <dx-button stylingMode=\"contained\"\n               type=\"success\"\n               text=\"Сохранить\"\n               (click)=\"save()\">\n    </dx-button>\n  </nb-card-footer>\n</nb-card>\n","import { Component, OnInit } from '@angular/core';\nimport {ConfigurationVariable} from '../../@core/models/configurationVariable.model';\nimport {ConfigurationVariableService} from '../../@core/services/configurationVariable.service';\nimport {isNullOrUndefined} from 'util';\n\n@Component({\n  selector: 'app-configuration-variable',\n  templateUrl: './configuration-variable.component.html',\n  styleUrls: ['./configuration-variable.component.scss']\n})\nexport class ConfigurationVariableComponent implements OnInit {\n  configurationVariables: ConfigurationVariable[];\n  popupVisible = false;\n  configurationVariable: ConfigurationVariable;\n  constructor(private configurationVariableService: ConfigurationVariableService) { }\n\n  ngOnInit() {\n    const id = localStorage.getItem('organization');\n    if (isNullOrUndefined(id)) {\n      throw new Error('Не найдена кнфигурация в хранилище');\n    }\n    this.configurationVariableService.get(parseInt(id)).subscribe(configurationVariables => {\n      if (configurationVariables === null) {\n        return;\n      }\n      console.log(configurationVariables);\n      this.configurationVariables = configurationVariables;\n    });\n  }\n\n  add() {\n    this.popupVisible = true;\n  }\n\n  save($event: ConfigurationVariable) {\n    console.log($event);\n    this.popupVisible = false;\n    location.reload();\n  }\n\n  edit(data: any) {\n    console.log(data);\n    this.configurationVariable = data;\n    this.popupVisible = true;\n  }\n}\n","<nb-card>\n  <nb-card-body>\n    <dx-data-grid\n      id=\"gridContainer\"\n      [dataSource]=\"configurationVariables\"\n      [showBorders]=\"true\">\n      <dxo-paging [pageSize]=\"10\"></dxo-paging>\n      <dxo-search-panel [visible]=\"true\"></dxo-search-panel>\n      <dxo-pager\n        [showPageSizeSelector]=\"true\"\n        [allowedPageSizes]=\"[5, 10, 20]\"\n        [showInfo]=\"true\">\n      </dxo-pager>\n\n      <dxi-column dataField=\"title\"></dxi-column>\n      <dxi-column dataField=\"requestUrl\"></dxi-column>\n      <dxi-column dataField=\"buttonEdit\" caption=\"\" width=\"150\" cellTemplate=\"cellButtonEditTemplate\"></dxi-column>\n\n      <div *dxTemplate=\"let data of 'cellButtonEditTemplate'\">\n        <dx-button class=\"otstup\" icon=\"edit\" (click)=\"edit(data.data)\"></dx-button>\n      </div>\n\n    </dx-data-grid>\n  </nb-card-body>\n  <nb-card-footer>\n    <dx-button stylingMode=\"contained\"\n               type=\"success\"\n               text=\"Добавить\"\n               (click)=\"add()\">\n    </dx-button>\n  </nb-card-footer>\n</nb-card>\n\n\n<dx-popup title=\"Переменная\"\n          [(visible)]=\"popupVisible\">\n  <div *dxTemplate=\"let data of 'content'\">\n    <dx-scroll-view>\n      <app-configuration-variable-form [configurationVariable]=\"configurationVariable\"\n        (apply)=\"save($event)\">\n\n      </app-configuration-variable-form>\n    </dx-scroll-view>\n  </div>\n</dx-popup>\n","<ng-container *ngIf=\"configuration\">\n  <nb-card>\n    <nb-card-body>\n      <dx-form [formData]=\"configuration\">\n        <dxi-item itemType=\"tabbed\" [tabPanelOptions]=\"{ deferRendering: false }\">\n          <dxi-tab title=\"Общие настройки\">\n\n            <dxi-item dataField=\"id\" [editorOptions]=\"{disabled: true }\">\n              <dxo-label text=\"Идентификатор интеграции\"></dxo-label>\n            </dxi-item>\n\n            <dxi-item dataField=\"titleOrganization\">\n              <dxo-label text=\"Наименование интеграции\"></dxo-label>\n            </dxi-item>\n\n            <dxi-item itemType='group' caption='AMI подключение'>\n\n              <dxi-item dataField=\"AMI_server\">\n                <dxo-label text=\"Сервер\"></dxo-label>\n              </dxi-item>\n              <dxi-item dataField=\"AMI_username\">\n                <dxo-label text=\"Имя пользователя\"></dxo-label>\n              </dxi-item>\n              <dxi-item dataField=\"AMI_password\">\n                <dxo-label text=\"Пароль\"></dxo-label>\n              </dxi-item>\n              <dxi-item dataField=\"AMI_port\">\n                <dxo-label text=\"Порт\"></dxo-label>\n              </dxi-item>\n\n              <dxi-item dataField=\"state\" editorType=\"dxTextArea\" [editorOptions]=\"{disabled: true, height: '100' }\">\n                <dxo-label text=\"Состояние\"></dxo-label>\n              </dxi-item>\n\n            </dxi-item>\n\n            <dxi-item itemType='group' caption='Интеграция'>\n\n              <dxi-item dataField=\"authKey\">\n                <dxo-label text=\"Ключ авторизации\"></dxo-label>\n              </dxi-item>\n              <dxi-item dataField=\"baseUrl\">\n                <dxo-label text=\"Базовый адрес\"></dxo-label>\n              </dxi-item>\n              <dxi-item dataField=\"defaultResponsibles\">\n                <dxo-label text=\"Ответственный по умолчанию\"></dxo-label>\n              </dxi-item>\n            </dxi-item>\n\n            <dxi-item itemType='group' caption='Другие'>\n\n              <dxi-item dataField=\"uniqueFieldName\">\n                <dxo-label text=\"Поле уникального идентификатора звонка\"></dxo-label>\n              </dxi-item>\n            </dxi-item>\n\n          </dxi-tab>\n        </dxi-item>\n      </dx-form>\n    </nb-card-body>\n    <nb-card-footer>\n      <div class=\"row justify-content-between\">\n        <div class=\"col-4\">\n          <dx-button\n            text=\"Сохранить\"\n            (onClick)=\"save()\">\n          </dx-button>\n        </div>\n        <div class=\"col-4\">\n          <dx-button\n            text=\"Удалить\"\n            stylingMode=\"contained\"\n            type=\"danger\"\n            (onClick)=\"delete()\">\n          </dx-button>\n        </div>\n      </div>\n    </nb-card-footer>\n  </nb-card>\n\n\n</ng-container>\n\n<dx-load-panel [visible]=\"loadingVisible\"\n               shadingColor=\"rgba(0,0,0,0.3)\"></dx-load-panel>\n","import { Component, OnInit } from '@angular/core';\nimport {ConfigurationService} from '../../@core/services/configuration.service';\nimport {Configuration} from '../../@core/models/configuration.model';\nimport notify from 'devextreme/ui/notify';\nimport {isNullOrUndefined} from 'util';\n\n@Component({\n  selector: 'app-configuration',\n  templateUrl: './configuration.component.html',\n  styleUrls: ['./configuration.component.scss']\n})\nexport class ConfigurationComponent implements OnInit {\n  configuration: Configuration;\n  loadingVisible = false;\n  constructor(protected configurationService: ConfigurationService) { }\n\n  ngOnInit() {\n    const id = localStorage.getItem('organization');\n    if (isNullOrUndefined(id)) {\n      throw new Error('Не указнан идентификатор в хранилище ');\n    }\n    this.configurationService.getById(parseInt(id)).subscribe(configuration => {\n      console.log(configuration);\n      this.configuration = configuration;\n    });\n  }\n\n  save() {\n      this.loadingVisible = true;\n      this.configurationService.save(this.configuration).subscribe(res => {\n        notify('Конфигурация успешно обновлена');\n        this.loadingVisible = false;\n        location.reload();\n      }, error => {\n        this.loadingVisible = false;\n        notify(error.message, 'error');\n        throw new Error(error);\n      });\n  }\n\n  async delete() {\n    try {\n      console.log(this.configuration.id);\n      await this.configurationService.delete(this.configuration.id).toPromise();\n      notify('Конфигурация успешна удалена');\n      localStorage.setItem('organization', null);\n      location.reload();\n    } catch (e) {\n      console.error(e.message);\n    }\n\n  }\n}\n"]}