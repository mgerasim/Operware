{"version":3,"sources":["webpack:///node_modules/devextreme/ui/toast.js","webpack:///node_modules/devextreme/ui/notify.js","webpack:///src/app/configuration-center/configuration-layout/configuration-layout.component.ts","webpack:///src/app/configuration-center/configuration-layout/configuration-layout.component.html","webpack:///src/app/@core/services/configuration.service.ts","webpack:///node_modules/devextreme-angular/__ivy_ngcc__/fesm2015/devextreme-angular-ui-load-panel.js","webpack:///src/app/configuration-center/configuration/configuration.component.html","webpack:///src/app/configuration-center/configuration/configuration.component.ts","webpack:///src/app/@core/services/configurationVariable.service.ts","webpack:///src/app/@core/models/configurationVariable.model.ts","webpack:///src/app/configuration-center/configuration-variable/configuration-variable-form/configuration-variable-form.component.ts","webpack:///src/app/configuration-center/configuration-variable/configuration-variable.component.html","webpack:///src/app/configuration-center/configuration-variable/configuration-variable-form/configuration-variable-form.component.html","webpack:///src/app/configuration-center/configuration-variable/configuration-variable.component.ts","webpack:///src/app/configuration-center/configuration-callback/configuration-callback.component.ts","webpack:///src/app/configuration-center/configuration-callback/configuration-callback.component.html","webpack:///src/app/configuration-center/configuration-event-binding/configuration-event-binding.component.html","webpack:///src/app/configuration-center/configuration-event-binding/configuration-event-binding.component.ts","webpack:///src/app/configuration-center/configuration-center-routing.module.ts","webpack:///src/app/configuration-center/configuration-center.module.ts"],"names":["$","window","getWindow","domAdapter","eventsEngine","ready","add","commonUtils","typeUtils","extend","inArray","pointerEvents","registerComponent","Overlay","themes","toastTypes","TOAST_STACK","visibleToastInstance","POSITION_ALIASES","top","my","at","of","offset","bottom","center","right","left","subscribeGlobal","getDocument","down","e","i","length","_proxiedDocumentDownHandler","Toast","inherit","_getDefaultOptions","this","callBase","message","type","displayTime","position","animation","show","duration","from","to","hide","shading","height","closeOnBackButton","closeOnSwipe","closeOnClick","resizeEnabled","_defaultOptionsRules","concat","device","platform","options","closeOnOutsideClick","width","_device","isPhone","deviceType","isAndroid","isMaterial","minWidth","maxWidth","_init","_posStringToObject","_renderContentImpl","option","_message","addClass","TOAST_CLASS_PREFIX","text","appendTo","$content","setAria","toLowerCase","prepend","_render","$element","_wrapper","_$content","TOAST_CLASS","String","_toggleCloseEvents","_renderScrollTerminator","noop","event","dxEvent","off","on","bind","isString","verticalPosition","split","horizontalPosition","_show","clearTimeout","_hideTimeout","apply","arguments","done","setTimeout","_hide","_overlayStack","_zIndexInitValue","_dispose","_optionChanged","args","name","removeClass","previousValue","value","module","exports","Action","viewPortUtils","isPlainObject","$notify","userHiddenAction","onHidden","element","remove","context","model","execute","ConfigurationLayoutComponent","httpClient","defaultHeaders","observe","reportProgress","headers","get","configuration","put","responseType","elementRef","ngZone","templateHost","_watcherHelper","optionHost","transferState","platformId","super","_createEventEmitters","subscribe","emit","setHost","_destroyWidget","_getOption","_setOption","ɵfac","t","P","ɵcmp","selectors","inputs","container","deferRendering","delay","elementAttr","focusStateEnabled","hint","hoverStateEnabled","indicatorSrc","maxHeight","minHeight","rtlEnabled","shadingColor","showIndicator","showPane","visible","outputs","onContentReady","onDisposing","onHiding","onInitialized","onOptionChanged","onShowing","onShown","animationChange","closeOnOutsideClickChange","containerChange","deferRenderingChange","delayChange","elementAttrChange","focusStateEnabledChange","heightChange","hintChange","hoverStateEnabledChange","indicatorSrcChange","maxHeightChange","maxWidthChange","messageChange","minHeightChange","minWidthChange","positionChange","rtlEnabledChange","shadingChange","shadingColorChange","showIndicatorChange","showPaneChange","visibleChange","widthChange","features","decls","vars","template","rf","ctx","encapsulation","ctorParameters","decorators","Object","prototype","Boolean","Number","O","DxLoadPanelModule","ɵmod","ɵinj","factory","imports","configurationService","titleEvents","titleFields","loadingVisible","configurations","console","log","save","res","error","Error","configurationVariable","post","ConfigurationVariable","id","configurationVariableService","update","err","ConfigurationVariableComponent","popupVisible","configurationVariables","$event","data","messsage","routes","path","component","children","ConfigurationCenterRoutingModule","forChild","ConfigurationCenterModule"],"mappings":"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","file":"x","sourcesContent":["/**\r\n * DevExtreme (ui/toast.js)\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\");\r\nvar window = require(\"../core/utils/window\").getWindow();\r\nvar domAdapter = require(\"../core/dom_adapter\");\r\nvar eventsEngine = require(\"../events/core/events_engine\");\r\nvar ready = require(\"../core/utils/ready_callbacks\").add;\r\nvar commonUtils = require(\"../core/utils/common\");\r\nvar typeUtils = require(\"../core/utils/type\");\r\nvar extend = require(\"../core/utils/extend\").extend;\r\nvar inArray = require(\"../core/utils/array\").inArray;\r\nvar pointerEvents = require(\"../events/pointer\");\r\nvar registerComponent = require(\"../core/component_registrator\");\r\nvar Overlay = require(\"./overlay\");\r\nvar themes = require(\"./themes\");\r\nvar TOAST_CLASS = \"dx-toast\";\r\nvar TOAST_CLASS_PREFIX = TOAST_CLASS + \"-\";\r\nvar TOAST_WRAPPER_CLASS = TOAST_CLASS_PREFIX + \"wrapper\";\r\nvar TOAST_CONTENT_CLASS = TOAST_CLASS_PREFIX + \"content\";\r\nvar TOAST_MESSAGE_CLASS = TOAST_CLASS_PREFIX + \"message\";\r\nvar TOAST_ICON_CLASS = TOAST_CLASS_PREFIX + \"icon\";\r\nvar WIDGET_NAME = \"dxToast\";\r\nvar toastTypes = [\"info\", \"warning\", \"error\", \"success\"];\r\nvar TOAST_STACK = [];\r\nvar FIRST_Z_INDEX_OFFSET = 8e3;\r\nvar visibleToastInstance = null;\r\nvar POSITION_ALIASES = {\r\n    top: {\r\n        my: \"top\",\r\n        at: \"top\",\r\n        of: null,\r\n        offset: \"0 0\"\r\n    },\r\n    bottom: {\r\n        my: \"bottom\",\r\n        at: \"bottom\",\r\n        of: null,\r\n        offset: \"0 -20\"\r\n    },\r\n    center: {\r\n        my: \"center\",\r\n        at: \"center\",\r\n        of: null,\r\n        offset: \"0 0\"\r\n    },\r\n    right: {\r\n        my: \"center right\",\r\n        at: \"center right\",\r\n        of: null,\r\n        offset: \"0 0\"\r\n    },\r\n    left: {\r\n        my: \"center left\",\r\n        at: \"center left\",\r\n        of: null,\r\n        offset: \"0 0\"\r\n    }\r\n};\r\nready(function() {\r\n    eventsEngine.subscribeGlobal(domAdapter.getDocument(), pointerEvents.down, function(e) {\r\n        for (var i = TOAST_STACK.length - 1; i >= 0; i--) {\r\n            if (!TOAST_STACK[i]._proxiedDocumentDownHandler(e)) {\r\n                return\r\n            }\r\n        }\r\n    })\r\n});\r\nvar Toast = Overlay.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            message: \"\",\r\n            type: \"info\",\r\n            displayTime: 2e3,\r\n            position: \"bottom center\",\r\n            animation: {\r\n                show: {\r\n                    type: \"fade\",\r\n                    duration: 400,\r\n                    from: 0,\r\n                    to: 1\r\n                },\r\n                hide: {\r\n                    type: \"fade\",\r\n                    duration: 400,\r\n                    to: 0\r\n                }\r\n            },\r\n            shading: false,\r\n            height: \"auto\",\r\n            closeOnBackButton: false,\r\n            closeOnSwipe: true,\r\n            closeOnClick: false,\r\n            resizeEnabled: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"android\"\r\n            },\r\n            options: {\r\n                closeOnOutsideClick: true,\r\n                width: \"auto\",\r\n                position: {\r\n                    at: \"bottom left\",\r\n                    my: \"bottom left\",\r\n                    offset: \"20 -20\"\r\n                },\r\n                animation: {\r\n                    show: {\r\n                        type: \"slide\",\r\n                        duration: 200,\r\n                        from: {\r\n                            position: {\r\n                                my: \"top\",\r\n                                at: \"bottom\",\r\n                                of: window\r\n                            }\r\n                        }\r\n                    },\r\n                    hide: {\r\n                        type: \"slide\",\r\n                        duration: 200,\r\n                        to: {\r\n                            position: {\r\n                                my: \"top\",\r\n                                at: \"bottom\",\r\n                                of: window\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            device: function(_device) {\r\n                var isPhone = \"phone\" === _device.deviceType;\r\n                var isAndroid = \"android\" === _device.platform;\r\n                return isPhone && isAndroid\r\n            },\r\n            options: {\r\n                width: function() {\r\n                    return $(window).width()\r\n                },\r\n                position: {\r\n                    at: \"bottom center\",\r\n                    my: \"bottom center\",\r\n                    offset: \"0 0\"\r\n                }\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return themes.isMaterial()\r\n            },\r\n            options: {\r\n                minWidth: 344,\r\n                maxWidth: 568,\r\n                displayTime: 4e3\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._posStringToObject()\r\n    },\r\n    _renderContentImpl: function() {\r\n        if (this.option(\"message\")) {\r\n            this._message = $(\"<div>\").addClass(TOAST_MESSAGE_CLASS).text(this.option(\"message\")).appendTo(this.$content())\r\n        }\r\n        this.setAria(\"role\", \"alert\", this._message);\r\n        if (inArray(this.option(\"type\").toLowerCase(), toastTypes) > -1) {\r\n            this.$content().prepend($(\"<div>\").addClass(TOAST_ICON_CLASS))\r\n        }\r\n        this.callBase()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this.$element().addClass(TOAST_CLASS);\r\n        this._wrapper().addClass(TOAST_WRAPPER_CLASS);\r\n        this._$content.addClass(TOAST_CLASS_PREFIX + String(this.option(\"type\")).toLowerCase());\r\n        this.$content().addClass(TOAST_CONTENT_CLASS);\r\n        this._toggleCloseEvents(\"Swipe\");\r\n        this._toggleCloseEvents(\"Click\")\r\n    },\r\n    _renderScrollTerminator: commonUtils.noop,\r\n    _toggleCloseEvents: function(event) {\r\n        var dxEvent = \"dx\" + event.toLowerCase();\r\n        eventsEngine.off(this._$content, dxEvent);\r\n        this.option(\"closeOn\" + event) && eventsEngine.on(this._$content, dxEvent, this.hide.bind(this))\r\n    },\r\n    _posStringToObject: function() {\r\n        if (!typeUtils.isString(this.option(\"position\"))) {\r\n            return\r\n        }\r\n        var verticalPosition = this.option(\"position\").split(\" \")[0];\r\n        var horizontalPosition = this.option(\"position\").split(\" \")[1];\r\n        this.option(\"position\", extend({}, POSITION_ALIASES[verticalPosition]));\r\n        switch (horizontalPosition) {\r\n            case \"center\":\r\n            case \"left\":\r\n            case \"right\":\r\n                this.option(\"position\").at += \" \" + horizontalPosition;\r\n                this.option(\"position\").my += \" \" + horizontalPosition\r\n        }\r\n    },\r\n    _show: function() {\r\n        if (visibleToastInstance && visibleToastInstance !== this) {\r\n            clearTimeout(visibleToastInstance._hideTimeout);\r\n            visibleToastInstance.hide()\r\n        }\r\n        visibleToastInstance = this;\r\n        return this.callBase.apply(this, arguments).done(function() {\r\n            clearTimeout(this._hideTimeout);\r\n            this._hideTimeout = setTimeout(this.hide.bind(this), this.option(\"displayTime\"))\r\n        }.bind(this))\r\n    },\r\n    _hide: function() {\r\n        visibleToastInstance = null;\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _overlayStack: function() {\r\n        return TOAST_STACK\r\n    },\r\n    _zIndexInitValue: function() {\r\n        return this.callBase() + FIRST_Z_INDEX_OFFSET\r\n    },\r\n    _dispose: function() {\r\n        clearTimeout(this._hideTimeout);\r\n        visibleToastInstance = null;\r\n        this.callBase()\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"type\":\r\n                this._$content.removeClass(TOAST_CLASS_PREFIX + args.previousValue);\r\n                this._$content.addClass(TOAST_CLASS_PREFIX + String(args.value).toLowerCase());\r\n                break;\r\n            case \"message\":\r\n                if (this._message) {\r\n                    this._message.text(args.value)\r\n                }\r\n                break;\r\n            case \"closeOnSwipe\":\r\n                this._toggleCloseEvents(\"Swipe\");\r\n                break;\r\n            case \"closeOnClick\":\r\n                this._toggleCloseEvents(\"Click\");\r\n                break;\r\n            case \"displayTime\":\r\n            case \"position\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(WIDGET_NAME, Toast);\r\nmodule.exports = Toast;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/notify.js)\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\");\r\nvar Action = require(\"../core/action\");\r\nvar viewPortUtils = require(\"../core/utils/view_port\");\r\nvar extend = require(\"../core/utils/extend\").extend;\r\nvar isPlainObject = require(\"../core/utils/type\").isPlainObject;\r\nvar Toast = require(\"./toast\");\r\nvar $notify = null;\r\nvar notify = function(message, type, displayTime) {\r\n    var options = isPlainObject(message) ? message : {\r\n        message: message\r\n    };\r\n    var userHiddenAction = options.onHidden;\r\n    extend(options, {\r\n        type: type,\r\n        displayTime: displayTime,\r\n        onHidden: function(args) {\r\n            $(args.element).remove();\r\n            new Action(userHiddenAction, {\r\n                context: args.model\r\n            }).execute(arguments)\r\n        }\r\n    });\r\n    $notify = $(\"<div>\").appendTo(viewPortUtils.value());\r\n    new Toast($notify, options).show()\r\n};\r\nmodule.exports = notify;\r\nmodule.exports.default = module.exports;\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-configuration-layout',\n  templateUrl: './configuration-layout.component.html',\n  styleUrls: ['./configuration-layout.component.scss']\n})\nexport class ConfigurationLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport {Configuration} from '../models/configuration.model';\nimport {Observable} from 'rxjs';\nimport {HttpClient, HttpEvent, HttpHeaders, HttpResponse} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigurationService {\n\n  public defaultHeaders = new HttpHeaders();\n\n  constructor(private httpClient: HttpClient) { }\n\n  public get(observe?: 'body', reportProgress?: boolean): Observable<Configuration>;\n  public get(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Configuration>>;\n  public get(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Configuration>>;\n  public get(observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n    const headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'application/json',\n      'text/json',\n      'application/xml',\n      'text/xml'\n    ];\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<Configuration[]>(`/api/configuration`,\n      {\n        headers: headers,\n        observe: observe,\n        reportProgress: reportProgress\n      }\n    );\n  }\n\n  public save(configuration: Configuration): Observable<Configuration> {\n\n    const headers = this.defaultHeaders;\n\n    return this.httpClient.put<Configuration>(`/api/configuration`, configuration,\n      {\n        observe: 'body',\n        responseType: 'json'\n      }\n    );\n  }\n}\n","import { __decorate, __metadata, __param } from 'tslib';\nimport { TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, EventEmitter, Component, NgModule } from '@angular/core';\nimport DxLoadPanel from 'devextreme/ui/load_panel';\nimport { DxComponent, DxTemplateHost, WatcherHelper, NestedOptionHost, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\nimport { DxoAnimationModule, DxoHideModule, DxoShowModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule } from 'devextreme-angular/ui/nested';\n\n/*!\r\n * devextreme-angular\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\n/**\r\n * The LoadPanel is an overlay widget notifying the viewer that loading is in progress.\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'devextreme-angular/core';\nimport * as ɵngcc2 from '@angular/platform-browser';\nlet DxLoadPanelComponent = class DxLoadPanelComponent extends DxComponent {\r\n    constructor(elementRef, ngZone, templateHost, _watcherHelper, optionHost, transferState, platformId) {\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n        this._createEventEmitters([\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'hidden', emit: 'onHidden' },\r\n            { subscribe: 'hiding', emit: 'onHiding' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'showing', emit: 'onShowing' },\r\n            { subscribe: 'shown', emit: 'onShown' },\r\n            { emit: 'animationChange' },\r\n            { emit: 'closeOnOutsideClickChange' },\r\n            { emit: 'containerChange' },\r\n            { emit: 'deferRenderingChange' },\r\n            { emit: 'delayChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'indicatorSrcChange' },\r\n            { emit: 'maxHeightChange' },\r\n            { emit: 'maxWidthChange' },\r\n            { emit: 'messageChange' },\r\n            { emit: 'minHeightChange' },\r\n            { emit: 'minWidthChange' },\r\n            { emit: 'positionChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'shadingChange' },\r\n            { emit: 'shadingColorChange' },\r\n            { emit: 'showIndicatorChange' },\r\n            { emit: 'showPaneChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' }\r\n        ]);\r\n        optionHost.setHost(this);\r\n    }\r\n    /**\r\n     * Configures widget visibility animations. This object contains two fields: show and hide.\r\n     */\r\n    get animation() {\r\n        return this._getOption('animation');\r\n    }\r\n    set animation(value) {\r\n        this._setOption('animation', value);\r\n    }\r\n    /**\r\n     * Specifies whether to close the widget if a user clicks outside it.\r\n     */\r\n    get closeOnOutsideClick() {\r\n        return this._getOption('closeOnOutsideClick');\r\n    }\r\n    set closeOnOutsideClick(value) {\r\n        this._setOption('closeOnOutsideClick', value);\r\n    }\r\n    /**\r\n     * Specifies the widget's container.\r\n     */\r\n    get container() {\r\n        return this._getOption('container');\r\n    }\r\n    set container(value) {\r\n        this._setOption('container', value);\r\n    }\r\n    /**\r\n     * Specifies whether to render the widget's content when it is displayed. If false, the content is rendered immediately.\r\n     */\r\n    get deferRendering() {\r\n        return this._getOption('deferRendering');\r\n    }\r\n    set deferRendering(value) {\r\n        this._setOption('deferRendering', value);\r\n    }\r\n    /**\r\n     * The delay in milliseconds after which the load panel is displayed.\r\n     */\r\n    get delay() {\r\n        return this._getOption('delay');\r\n    }\r\n    set delay(value) {\r\n        this._setOption('delay', value);\r\n    }\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    get elementAttr() {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n    /**\r\n     * Specifies whether or not the widget can be focused.\r\n     */\r\n    get focusStateEnabled() {\r\n        return this._getOption('focusStateEnabled');\r\n    }\r\n    set focusStateEnabled(value) {\r\n        this._setOption('focusStateEnabled', value);\r\n    }\r\n    /**\r\n     * Specifies the widget's height in pixels.\r\n     */\r\n    get height() {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value) {\r\n        this._setOption('height', value);\r\n    }\r\n    /**\r\n     * Specifies text for a hint that appears when a user pauses on the widget.\r\n     */\r\n    get hint() {\r\n        return this._getOption('hint');\r\n    }\r\n    set hint(value) {\r\n        this._setOption('hint', value);\r\n    }\r\n    /**\r\n     * Specifies whether the widget changes its state when a user pauses on it.\r\n     */\r\n    get hoverStateEnabled() {\r\n        return this._getOption('hoverStateEnabled');\r\n    }\r\n    set hoverStateEnabled(value) {\r\n        this._setOption('hoverStateEnabled', value);\r\n    }\r\n    /**\r\n     * A URL pointing to an image to be used as a load indicator.\r\n     */\r\n    get indicatorSrc() {\r\n        return this._getOption('indicatorSrc');\r\n    }\r\n    set indicatorSrc(value) {\r\n        this._setOption('indicatorSrc', value);\r\n    }\r\n    /**\r\n     * Specifies the maximum height the widget can reach while resizing.\r\n     */\r\n    get maxHeight() {\r\n        return this._getOption('maxHeight');\r\n    }\r\n    set maxHeight(value) {\r\n        this._setOption('maxHeight', value);\r\n    }\r\n    /**\r\n     * Specifies the maximum width the widget can reach while resizing.\r\n     */\r\n    get maxWidth() {\r\n        return this._getOption('maxWidth');\r\n    }\r\n    set maxWidth(value) {\r\n        this._setOption('maxWidth', value);\r\n    }\r\n    /**\r\n     * Specifies the text displayed in the load panel. Ignored in the Material Design theme.\r\n     */\r\n    get message() {\r\n        return this._getOption('message');\r\n    }\r\n    set message(value) {\r\n        this._setOption('message', value);\r\n    }\r\n    /**\r\n     * Specifies the minimum height the widget can reach while resizing.\r\n     */\r\n    get minHeight() {\r\n        return this._getOption('minHeight');\r\n    }\r\n    set minHeight(value) {\r\n        this._setOption('minHeight', value);\r\n    }\r\n    /**\r\n     * Specifies the minimum width the widget can reach while resizing.\r\n     */\r\n    get minWidth() {\r\n        return this._getOption('minWidth');\r\n    }\r\n    set minWidth(value) {\r\n        this._setOption('minWidth', value);\r\n    }\r\n    /**\r\n     * Positions the widget.\r\n     */\r\n    get position() {\r\n        return this._getOption('position');\r\n    }\r\n    set position(value) {\r\n        this._setOption('position', value);\r\n    }\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    get rtlEnabled() {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n    /**\r\n     * Specifies whether to shade the background when the widget is active.\r\n     */\r\n    get shading() {\r\n        return this._getOption('shading');\r\n    }\r\n    set shading(value) {\r\n        this._setOption('shading', value);\r\n    }\r\n    /**\r\n     * Specifies the shading color.\r\n     */\r\n    get shadingColor() {\r\n        return this._getOption('shadingColor');\r\n    }\r\n    set shadingColor(value) {\r\n        this._setOption('shadingColor', value);\r\n    }\r\n    /**\r\n     * A Boolean value specifying whether or not to show a load indicator.\r\n     */\r\n    get showIndicator() {\r\n        return this._getOption('showIndicator');\r\n    }\r\n    set showIndicator(value) {\r\n        this._setOption('showIndicator', value);\r\n    }\r\n    /**\r\n     * A Boolean value specifying whether or not to show the pane behind the load indicator.\r\n     */\r\n    get showPane() {\r\n        return this._getOption('showPane');\r\n    }\r\n    set showPane(value) {\r\n        this._setOption('showPane', value);\r\n    }\r\n    /**\r\n     * A Boolean value specifying whether or not the widget is visible.\r\n     */\r\n    get visible() {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value) {\r\n        this._setOption('visible', value);\r\n    }\r\n    /**\r\n     * Specifies the widget's width in pixels.\r\n     */\r\n    get width() {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value) {\r\n        this._setOption('width', value);\r\n    }\r\n    _createInstance(element, options) {\r\n        return new DxLoadPanel(element, options);\r\n    }\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n};\nDxLoadPanelComponent.ɵfac = function DxLoadPanelComponent_Factory(t) { return new (t || DxLoadPanelComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DxTemplateHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.WatcherHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TransferState), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); };\nDxLoadPanelComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxLoadPanelComponent, selectors: [[\"dx-load-panel\"]], inputs: { animation: \"animation\", closeOnOutsideClick: \"closeOnOutsideClick\", container: \"container\", deferRendering: \"deferRendering\", delay: \"delay\", elementAttr: \"elementAttr\", focusStateEnabled: \"focusStateEnabled\", height: \"height\", hint: \"hint\", hoverStateEnabled: \"hoverStateEnabled\", indicatorSrc: \"indicatorSrc\", maxHeight: \"maxHeight\", maxWidth: \"maxWidth\", message: \"message\", minHeight: \"minHeight\", minWidth: \"minWidth\", position: \"position\", rtlEnabled: \"rtlEnabled\", shading: \"shading\", shadingColor: \"shadingColor\", showIndicator: \"showIndicator\", showPane: \"showPane\", visible: \"visible\", width: \"width\" }, outputs: { onContentReady: \"onContentReady\", onDisposing: \"onDisposing\", onHidden: \"onHidden\", onHiding: \"onHiding\", onInitialized: \"onInitialized\", onOptionChanged: \"onOptionChanged\", onShowing: \"onShowing\", onShown: \"onShown\", animationChange: \"animationChange\", closeOnOutsideClickChange: \"closeOnOutsideClickChange\", containerChange: \"containerChange\", deferRenderingChange: \"deferRenderingChange\", delayChange: \"delayChange\", elementAttrChange: \"elementAttrChange\", focusStateEnabledChange: \"focusStateEnabledChange\", heightChange: \"heightChange\", hintChange: \"hintChange\", hoverStateEnabledChange: \"hoverStateEnabledChange\", indicatorSrcChange: \"indicatorSrcChange\", maxHeightChange: \"maxHeightChange\", maxWidthChange: \"maxWidthChange\", messageChange: \"messageChange\", minHeightChange: \"minHeightChange\", minWidthChange: \"minWidthChange\", positionChange: \"positionChange\", rtlEnabledChange: \"rtlEnabledChange\", shadingChange: \"shadingChange\", shadingColorChange: \"shadingColorChange\", showIndicatorChange: \"showIndicatorChange\", showPaneChange: \"showPaneChange\", visibleChange: \"visibleChange\", widthChange: \"widthChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            DxTemplateHost,\n            WatcherHelper,\n            NestedOptionHost\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxLoadPanelComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\nDxLoadPanelComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: NgZone },\r\n    { type: DxTemplateHost },\r\n    { type: WatcherHelper },\r\n    { type: NestedOptionHost },\r\n    { type: TransferState },\r\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\r\n];\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxLoadPanelComponent.prototype, \"animation\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxLoadPanelComponent.prototype, \"closeOnOutsideClick\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxLoadPanelComponent.prototype, \"container\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [Boolean])\r\n], DxLoadPanelComponent.prototype, \"deferRendering\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number),\r\n    __metadata(\"design:paramtypes\", [Number])\r\n], DxLoadPanelComponent.prototype, \"delay\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxLoadPanelComponent.prototype, \"elementAttr\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [Boolean])\r\n], DxLoadPanelComponent.prototype, \"focusStateEnabled\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxLoadPanelComponent.prototype, \"height\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String),\r\n    __metadata(\"design:paramtypes\", [String])\r\n], DxLoadPanelComponent.prototype, \"hint\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [Boolean])\r\n], DxLoadPanelComponent.prototype, \"hoverStateEnabled\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String),\r\n    __metadata(\"design:paramtypes\", [String])\r\n], DxLoadPanelComponent.prototype, \"indicatorSrc\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxLoadPanelComponent.prototype, \"maxHeight\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxLoadPanelComponent.prototype, \"maxWidth\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String),\r\n    __metadata(\"design:paramtypes\", [String])\r\n], DxLoadPanelComponent.prototype, \"message\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxLoadPanelComponent.prototype, \"minHeight\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxLoadPanelComponent.prototype, \"minWidth\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxLoadPanelComponent.prototype, \"position\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [Boolean])\r\n], DxLoadPanelComponent.prototype, \"rtlEnabled\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [Boolean])\r\n], DxLoadPanelComponent.prototype, \"shading\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String),\r\n    __metadata(\"design:paramtypes\", [String])\r\n], DxLoadPanelComponent.prototype, \"shadingColor\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [Boolean])\r\n], DxLoadPanelComponent.prototype, \"showIndicator\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [Boolean])\r\n], DxLoadPanelComponent.prototype, \"showPane\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [Boolean])\r\n], DxLoadPanelComponent.prototype, \"visible\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxLoadPanelComponent.prototype, \"width\", null);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"onContentReady\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"onDisposing\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"onHidden\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"onHiding\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"onInitialized\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"onOptionChanged\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"onShowing\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"onShown\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"animationChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"closeOnOutsideClickChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"containerChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"deferRenderingChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"delayChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"elementAttrChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"focusStateEnabledChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"heightChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"hintChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"hoverStateEnabledChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"indicatorSrcChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"maxHeightChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"maxWidthChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"messageChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"minHeightChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"minWidthChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"positionChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"rtlEnabledChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"shadingChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"shadingColorChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"showIndicatorChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"showPaneChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"visibleChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"widthChange\", void 0);\r\nDxLoadPanelComponent = __decorate([ __param(6, Inject(PLATFORM_ID)),\r\n    __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost,\r\n        TransferState, Object])\r\n], DxLoadPanelComponent);\r\nlet DxLoadPanelModule = class DxLoadPanelModule {\r\n};\nDxLoadPanelModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxLoadPanelModule });\nDxLoadPanelModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxLoadPanelModule_Factory(t) { return new (t || DxLoadPanelModule)(); }, imports: [[\n            DxoAnimationModule,\n            DxoHideModule,\n            DxoShowModule,\n            DxoPositionModule,\n            DxoAtModule,\n            DxoBoundaryOffsetModule,\n            DxoCollisionModule,\n            DxoMyModule,\n            DxoOffsetModule,\n            DxIntegrationModule,\n            DxTemplateModule,\n            BrowserTransferStateModule\n        ],\n        DxoAnimationModule,\n        DxoHideModule,\n        DxoShowModule,\n        DxoPositionModule,\n        DxoAtModule,\n        DxoBoundaryOffsetModule,\n        DxoCollisionModule,\n        DxoMyModule,\n        DxoOffsetModule,\n        DxTemplateModule] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxLoadPanelComponent, [{\n        type: Component,\n        args: [{\n                selector: 'dx-load-panel',\n                template: '',\n                providers: [\n                    DxTemplateHost,\n                    WatcherHelper,\n                    NestedOptionHost\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.DxTemplateHost }, { type: ɵngcc1.WatcherHelper }, { type: ɵngcc1.NestedOptionHost }, { type: ɵngcc2.TransferState }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, { animation: [{\n            type: Input\n        }], closeOnOutsideClick: [{\n            type: Input\n        }], container: [{\n            type: Input\n        }], deferRendering: [{\n            type: Input\n        }], delay: [{\n            type: Input\n        }], elementAttr: [{\n            type: Input\n        }], focusStateEnabled: [{\n            type: Input\n        }], height: [{\n            type: Input\n        }], hint: [{\n            type: Input\n        }], hoverStateEnabled: [{\n            type: Input\n        }], indicatorSrc: [{\n            type: Input\n        }], maxHeight: [{\n            type: Input\n        }], maxWidth: [{\n            type: Input\n        }], message: [{\n            type: Input\n        }], minHeight: [{\n            type: Input\n        }], minWidth: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], rtlEnabled: [{\n            type: Input\n        }], shading: [{\n            type: Input\n        }], shadingColor: [{\n            type: Input\n        }], showIndicator: [{\n            type: Input\n        }], showPane: [{\n            type: Input\n        }], visible: [{\n            type: Input\n        }], width: [{\n            type: Input\n        }], onContentReady: [{\n            type: Output\n        }], onDisposing: [{\n            type: Output\n        }], onHidden: [{\n            type: Output\n        }], onHiding: [{\n            type: Output\n        }], onInitialized: [{\n            type: Output\n        }], onOptionChanged: [{\n            type: Output\n        }], onShowing: [{\n            type: Output\n        }], onShown: [{\n            type: Output\n        }], animationChange: [{\n            type: Output\n        }], closeOnOutsideClickChange: [{\n            type: Output\n        }], containerChange: [{\n            type: Output\n        }], deferRenderingChange: [{\n            type: Output\n        }], delayChange: [{\n            type: Output\n        }], elementAttrChange: [{\n            type: Output\n        }], focusStateEnabledChange: [{\n            type: Output\n        }], heightChange: [{\n            type: Output\n        }], hintChange: [{\n            type: Output\n        }], hoverStateEnabledChange: [{\n            type: Output\n        }], indicatorSrcChange: [{\n            type: Output\n        }], maxHeightChange: [{\n            type: Output\n        }], maxWidthChange: [{\n            type: Output\n        }], messageChange: [{\n            type: Output\n        }], minHeightChange: [{\n            type: Output\n        }], minWidthChange: [{\n            type: Output\n        }], positionChange: [{\n            type: Output\n        }], rtlEnabledChange: [{\n            type: Output\n        }], shadingChange: [{\n            type: Output\n        }], shadingColorChange: [{\n            type: Output\n        }], showIndicatorChange: [{\n            type: Output\n        }], showPaneChange: [{\n            type: Output\n        }], visibleChange: [{\n            type: Output\n        }], widthChange: [{\n            type: Output\n        }] }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxLoadPanelModule, { declarations: function () { return [DxLoadPanelComponent]; }, imports: function () { return [DxoAnimationModule,\n        DxoHideModule,\n        DxoShowModule,\n        DxoPositionModule,\n        DxoAtModule,\n        DxoBoundaryOffsetModule,\n        DxoCollisionModule,\n        DxoMyModule,\n        DxoOffsetModule,\n        DxIntegrationModule,\n        DxTemplateModule,\n        BrowserTransferStateModule]; }, exports: function () { return [DxLoadPanelComponent,\n        DxoAnimationModule,\n        DxoHideModule,\n        DxoShowModule,\n        DxoPositionModule,\n        DxoAtModule,\n        DxoBoundaryOffsetModule,\n        DxoCollisionModule,\n        DxoMyModule,\n        DxoOffsetModule,\n        DxTemplateModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxLoadPanelModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    DxoAnimationModule,\n                    DxoHideModule,\n                    DxoShowModule,\n                    DxoPositionModule,\n                    DxoAtModule,\n                    DxoBoundaryOffsetModule,\n                    DxoCollisionModule,\n                    DxoMyModule,\n                    DxoOffsetModule,\n                    DxIntegrationModule,\n                    DxTemplateModule,\n                    BrowserTransferStateModule\n                ],\n                declarations: [\n                    DxLoadPanelComponent\n                ],\n                exports: [\n                    DxLoadPanelComponent,\n                    DxoAnimationModule,\n                    DxoHideModule,\n                    DxoShowModule,\n                    DxoPositionModule,\n                    DxoAtModule,\n                    DxoBoundaryOffsetModule,\n                    DxoCollisionModule,\n                    DxoMyModule,\n                    DxoOffsetModule,\n                    DxTemplateModule\n                ]\n            }]\n    }], null, null); })();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DxLoadPanelComponent, DxLoadPanelModule };\n\n//# sourceMappingURL=devextreme-angular-ui-load-panel.js.map","<ng-container *ngIf=\"configuration\">\n  <dx-form [formData]=\"configuration\">\n    <dxi-item itemType=\"tabbed\" [tabPanelOptions]=\"{ deferRendering: false }\">\n      <dxi-tab title=\"Общие настройки\">\n\n        <dxi-item itemType='group' caption='AMI подключение'>\n\n          <dxi-item dataField=\"AMI_server\">\n            <dxo-label text=\"Сервер\"></dxo-label>\n          </dxi-item>\n          <dxi-item dataField=\"AMI_username\">\n            <dxo-label text=\"Имя пользователя\"></dxo-label>\n          </dxi-item>\n          <dxi-item dataField=\"AMI_password\">\n            <dxo-label text=\"Пароль\"></dxo-label>\n          </dxi-item>\n          <dxi-item dataField=\"AMI_port\">\n            <dxo-label text=\"Порт\"></dxo-label>\n          </dxi-item>\n        </dxi-item>\n\n        <dxi-item itemType='group' caption='Интеграция'>\n\n          <dxi-item dataField=\"authKey\">\n            <dxo-label text=\"Ключ авторизации\"></dxo-label>\n          </dxi-item>\n          <dxi-item dataField=\"baseUrl\">\n            <dxo-label text=\"Базовый адрес\"></dxo-label>\n          </dxi-item>\n          <dxi-item dataField=\"defaultResponsibles\">\n            <dxo-label text=\"Ответственный по умолчанию\"></dxo-label>\n          </dxi-item>\n        </dxi-item>\n\n      </dxi-tab>\n    </dxi-item>\n  </dx-form>\n\n  <dx-button\n    text=\"Сохранить\"\n    (onClick)=\"save()\">\n  </dx-button>\n</ng-container>\n\n<dx-load-panel [visible]=\"loadingVisible\"\n               shadingColor=\"rgba(0,0,0,0.3)\"></dx-load-panel>\n","import { Component, OnInit } from '@angular/core';\nimport {ConfigurationService} from '../../@core/services/configuration.service';\nimport {Configuration} from '../../@core/models/configuration.model';\nimport notify from 'devextreme/ui/notify';\n\n@Component({\n  selector: 'app-configuration',\n  templateUrl: './configuration.component.html',\n  styleUrls: ['./configuration.component.scss']\n})\nexport class ConfigurationComponent implements OnInit {\n  titleEvents: string[] = [\n    'Hangup',\n    'Newstate',\n    'Dial',\n    'Newexten',\n    'NewCallerid',\n    'Newchannel'\n  ];\n  titleFields: string[] = [\n    'Event',\n    'Privilege',\n    'Channel',\n    'ChannelState',\n    'ChannelStateDesc',\n    'CallerIDNum',\n    'CallerIDName',\n    'ConnectedLineNum',\n    'ConnectedLineName',\n    'Language',\n    'AccountCode',\n    'Context',\n    'Exten',\n    'Priority',\n    'Uniqueid',\n    'Linkedid',\n    'Cause'\n  ];\n  configuration: Configuration;\n  loadingVisible = false;\n  constructor(protected configurationService: ConfigurationService) { }\n\n  ngOnInit() {\n    this.configurationService.get().subscribe(configurations => {\n      console.log(configurations);\n      this.configuration = configurations[0];\n    });\n  }\n\n  save() {\n      this.loadingVisible = true;\n      this.configurationService.save(this.configuration).subscribe(res => {\n        notify('Конфигурация успешно обновлена');\n        this.loadingVisible = false;\n      }, error => {\n        this.loadingVisible = false;\n        notify(error.message, 'error');\n        throw new Error(error);\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {ConfigurationVariable} from '../models/configurationVariable.model';\nimport {Observable} from 'rxjs';\nimport {HttpClient, HttpEvent, HttpHeaders, HttpResponse} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigurationVariableService {\n\n  public defaultHeaders = new HttpHeaders();\n\n  constructor(private httpClient: HttpClient) { }\n\n  public get(observe?: 'body', reportProgress?: boolean): Observable<ConfigurationVariable[]>;\n  public get(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<ConfigurationVariable[]>>;\n  public get(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<ConfigurationVariable[]>>;\n  public get(observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n    const headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'application/json',\n      'text/json',\n      'application/xml',\n      'text/xml'\n    ];\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<ConfigurationVariable[]>(`/api/configuration/variables`,\n      {\n        headers: headers,\n        observe: observe,\n        reportProgress: reportProgress\n      }\n    );\n  }\n\n  public add(configurationVariable: ConfigurationVariable): Observable<ConfigurationVariable> {\n\n    const headers = this.defaultHeaders;\n\n    return this.httpClient.post<ConfigurationVariable>(`/api/configuration/variables`, configurationVariable,\n      {\n        observe: 'body',\n        responseType: 'json'\n      }\n    );\n  }\n\n  public update(configurationVariable: ConfigurationVariable): Observable<ConfigurationVariable> {\n\n    const headers = this.defaultHeaders;\n\n    return this.httpClient.put<ConfigurationVariable>(`/api/configuration/variables`, configurationVariable,\n      {\n        observe: 'body',\n        responseType: 'json'\n      }\n    );\n  }\n}\n","export class ConfigurationVariable {\n  id: number | undefined\n  createdAt: Date;\n  updatedAt: Date;\n  title: string;\n  requestUrl: string;\n  requestBody: string;\n  response: number;\n  constructor() {\n    this.id = undefined;\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ConfigurationVariable} from '../../../@core/models/configurationVariable.model';\nimport {ConfigurationVariableService} from '../../../@core/services/configurationVariable.service';\n\n@Component({\n  selector: 'app-configuration-variable-form',\n  templateUrl: './configuration-variable-form.component.html',\n  styleUrls: ['./configuration-variable-form.component.scss']\n})\nexport class ConfigurationVariableFormComponent implements OnInit {\n  @Input() configurationVariable: ConfigurationVariable;\n  @Output() apply = new EventEmitter();\n  constructor(private configurationVariableService: ConfigurationVariableService) { }\n\n  ngOnInit() {\n    if (!this.configurationVariable) {\n      this.configurationVariable = new ConfigurationVariable();\n    }\n\n  }\n\n  save() {\n      console.log(this.configurationVariable);\n      if (this.configurationVariable.id > 0) {\n        this.configurationVariableService.update(this.configurationVariable).subscribe(res => {\n          this.apply.emit(this.configurationVariable);\n        }, err => {\n          console.error(err);\n        });\n      } else {\n        this.configurationVariableService.add(this.configurationVariable).subscribe(res => {\n          console.log(res);\n          this.apply.emit(this.configurationVariable);\n        }, err => {\n          console.error(err);\n        });\n      }\n  }\n}\n","<nb-card>\n  <nb-card-body>\n    <dx-data-grid\n      id=\"gridContainer\"\n      [dataSource]=\"configurationVariables\"\n      [showBorders]=\"true\">\n      <dxo-paging [pageSize]=\"10\"></dxo-paging>\n      <dxo-search-panel [visible]=\"true\"></dxo-search-panel>\n      <dxo-pager\n        [showPageSizeSelector]=\"true\"\n        [allowedPageSizes]=\"[5, 10, 20]\"\n        [showInfo]=\"true\">\n      </dxo-pager>\n\n      <dxi-column dataField=\"title\"></dxi-column>\n      <dxi-column dataField=\"requestUrl\"></dxi-column>\n      <dxi-column dataField=\"buttonEdit\" caption=\"\" width=\"150\" cellTemplate=\"cellButtonEditTemplate\"></dxi-column>\n\n      <div *dxTemplate=\"let data of 'cellButtonEditTemplate'\">\n        <dx-button class=\"otstup\" icon=\"edit\" (click)=\"edit(data.data)\"></dx-button>\n      </div>\n\n    </dx-data-grid>\n  </nb-card-body>\n  <nb-card-footer>\n    <dx-button stylingMode=\"contained\"\n               type=\"success\"\n               text=\"Добавить\"\n               (click)=\"add()\">\n    </dx-button>\n  </nb-card-footer>\n</nb-card>\n\n\n<dx-popup title=\"Переменная\"\n          [(visible)]=\"popupVisible\">\n  <div *dxTemplate=\"let data of 'content'\">\n    <app-configuration-variable-form [configurationVariable]=\"configurationVariable\"\n      (apply)=\"save($event)\">\n\n    </app-configuration-variable-form>\n  </div>\n</dx-popup>\n","<nb-card>\n  <nb-card-body>\n    <dx-form [formData]=\"configurationVariable\" colCount=\"1\">\n\n      <dxi-item dataField=\"title\">\n        <dxo-label text=\"Наименование\"></dxo-label>\n      </dxi-item>\n\n      <dxi-item dataField=\"requestUrl\">\n        <dxo-label text=\"Запрос\"></dxo-label>\n      </dxi-item>\n\n      <dxi-item dataField=\"requestBody\" editorType=\"dxTextArea\">\n        <dxo-label text=\"Тело запроса\"></dxo-label>\n      </dxi-item>\n\n\n    </dx-form>\n\n  </nb-card-body>\n  <nb-card-footer>\n    <dx-button stylingMode=\"contained\"\n               type=\"success\"\n               text=\"Сохранить\"\n               (click)=\"save()\">\n    </dx-button>\n  </nb-card-footer>\n</nb-card>\n","import { Component, OnInit } from '@angular/core';\nimport {ConfigurationVariable} from '../../@core/models/configurationVariable.model';\nimport {ConfigurationVariableService} from '../../@core/services/configurationVariable.service';\n\n@Component({\n  selector: 'app-configuration-variable',\n  templateUrl: './configuration-variable.component.html',\n  styleUrls: ['./configuration-variable.component.scss']\n})\nexport class ConfigurationVariableComponent implements OnInit {\n  configurationVariables: ConfigurationVariable[];\n  popupVisible = false;\n  configurationVariable: ConfigurationVariable;\n  constructor(private configurationVariableService: ConfigurationVariableService) { }\n\n  ngOnInit() {\n    this.configurationVariableService.get().subscribe(configurationVariables => {\n      if (configurationVariables === null) {\n        return;\n      }\n      console.log(configurationVariables);\n      this.configurationVariables = configurationVariables;\n    });\n  }\n\n  add() {\n    this.popupVisible = true;\n  }\n\n  save($event: ConfigurationVariable) {\n    console.log($event);\n    this.popupVisible = false;\n  }\n\n  edit(data: any) {\n    console.log(data);\n    this.configurationVariable = data;\n    this.popupVisible = true;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Configuration} from '../../@core/models/configuration.model';\nimport {ConfigurationService} from '../../@core/services/configuration.service';\nimport notify from 'devextreme/ui/notify';\n\n@Component({\n  selector: 'app-configuration-callback',\n  templateUrl: './configuration-callback.component.html',\n  styleUrls: ['./configuration-callback.component.scss']\n})\nexport class ConfigurationCallbackComponent implements OnInit {\n  configuration: Configuration;\n\n  constructor(private configurationService: ConfigurationService) { }\n\n  ngOnInit() {\n    this.configurationService.get().subscribe(configurations => {\n      if (configurations === null) {\n        return;\n      }\n      this.configuration = configurations[0];\n    });\n  }\n\n  save() {\n    this.configurationService.save(this.configuration).subscribe(res => {\n      notify('Конфигурация успешна обновллена');\n    }, error => {\n      console.error(error);\n      notify(error.messsage, 'error');\n    });\n  }\n}\n","<nb-card>\n  <nb-card-body>\n    <dx-form [formData]=\"configuration\" colCount=\"1\">\n\n      <dxi-item dataField=\"callbackTimeout\">\n        <dxo-label text=\"Время ожидания звонка\"></dxo-label>\n      </dxi-item>\n\n      <dxi-item dataField=\"callbackContext\">\n        <dxo-label text=\"Контекст\"></dxo-label>\n      </dxi-item>\n\n    </dx-form>\n\n  </nb-card-body>\n  <nb-card-footer>\n    <dx-button stylingMode=\"contained\"\n               type=\"success\"\n               text=\"Сохранить\"\n               (click)=\"save()\">\n    </dx-button>\n  </nb-card-footer>\n</nb-card>\n","<ng-container *ngIf=\"configuration\">\n  <dx-form [formData]=\"configuration\">\n    <dxi-item itemType=\"tabbed\" [tabPanelOptions]=\"{ deferRendering: false }\">\n      <dxi-tab title=\"Привязка событий\">\n\n        <dxi-item itemType=\"group\">\n          <dxo-col-count-by-screen\n            [xs]=\"1\"\n            [sm]=\"2\"\n            [md]='3'\n            [lg]='3'>\n          </dxo-col-count-by-screen>\n\n\n          <dxi-item itemType=\"group\"  caption=\"Событие поступления звонка\">\n            <dxi-item dataField=\"incomingStartCallEvent\" editorType=\"dxSelectBox\" [editorOptions]=\"{ dataSource: titleEvents }\">\n              <dxo-label text=\"Событие\"></dxo-label>\n            </dxi-item>\n            <dxi-item dataField=\"incomingStartCallField\" editorType=\"dxSelectBox\" [editorOptions]=\"{ dataSource: titleFields }\">\n              <dxo-label text=\"Поле\"></dxo-label>\n            </dxi-item>\n            <dxi-item dataField=\"incomingStartCallValue\">\n              <dxo-label text=\"Значение\"></dxo-label>\n            </dxi-item>\n\n            <dxi-item itemType=\"group\" caption=\"Дополнительное поле\">\n              <dxi-item dataField=\"incomingStartCallField2\" editorType=\"dxSelectBox\" [editorOptions]=\"{ dataSource: titleFields }\">\n                <dxo-label text=\"Поле\"></dxo-label>\n              </dxi-item>\n              <dxi-item dataField=\"incomingStartCallValue2\">\n                <dxo-label text=\"Значение\"></dxo-label>\n              </dxi-item>\n            </dxi-item>\n\n          </dxi-item>\n\n\n          <dxi-item itemType=\"group\" caption=\"Событие отвеченного звонка\">\n            <dxi-item dataField=\"incomingAnswerCallEvent\"  editorType=\"dxSelectBox\" [editorOptions]=\"{ dataSource: titleEvents }\">\n              <dxo-label text=\"Событие\"></dxo-label>\n            </dxi-item>\n            <dxi-item dataField=\"incomingAnswerCallField\" editorType=\"dxSelectBox\" [editorOptions]=\"{ dataSource: titleFields }\">\n              <dxo-label text=\"Поле\"></dxo-label>\n            </dxi-item>\n            <dxi-item dataField=\"incomingAnswerCallValue\">\n              <dxo-label text=\"Значение\"></dxo-label>\n            </dxi-item>\n\n            <dxi-item itemType=\"group\" caption=\"Дополнительное поле\">\n              <dxi-item dataField=\"incomingAnswerCallField2\" editorType=\"dxSelectBox\" [editorOptions]=\"{ dataSource: titleFields }\">\n                <dxo-label text=\"Поле\"></dxo-label>\n              </dxi-item>\n              <dxi-item dataField=\"incomingAnswerCallValue2\">\n                <dxo-label text=\"Значение\"></dxo-label>\n              </dxi-item>\n            </dxi-item>\n\n\n          </dxi-item>\n\n          <dxi-item itemType=\"group\" caption=\"Событие завершения звонка\">\n            <dxi-item dataField=\"incomingEndCallEvent\" editorType=\"dxSelectBox\" [editorOptions]=\"{ dataSource: titleEvents}\">\n              <dxo-label text=\"Событие\"></dxo-label>\n            </dxi-item>\n            <dxi-item dataField=\"incomingEndCallField\" editorType=\"dxSelectBox\" [editorOptions]=\"{ dataSource: titleFields }\">\n              <dxo-label text=\"Поле\"></dxo-label>\n            </dxi-item>\n            <dxi-item dataField=\"incomingEndCallValue\">\n              <dxo-label text=\"Значение\"></dxo-label>\n            </dxi-item>\n\n            <dxi-item itemType=\"group\" caption=\"Дополнительное поле\">\n              <dxi-item dataField=\"incomingEndCallField2\" editorType=\"dxSelectBox\" [editorOptions]=\"{ dataSource: titleFields }\">\n                <dxo-label text=\"Поле\"></dxo-label>\n              </dxi-item>\n              <dxi-item dataField=\"incomingEndCallValue2\">\n                <dxo-label text=\"Значение\"></dxo-label>\n              </dxi-item>\n            </dxi-item>\n\n          </dxi-item>\n\n        </dxi-item>\n\n\n      </dxi-tab>\n    </dxi-item>\n  </dx-form>\n\n  <dx-button\n    text=\"Сохранить\"\n    (onClick)=\"save()\">\n  </dx-button>\n</ng-container>\n\n<h5>Создаваемые переменные по событиям</h5>\n<p>\n  <code>CALL_STARTED</code> - Поступление звонка<br/>\n  <code>CALL_END</code> - Окончание обработки звонка<br/>\n  <code>CALL_LOST</code> - Звонок пропущен<br/>\n  <code>CALL_FINISHED</code> - Завершение разговора<br/>\n</p>\n<p>\n  Данные переменные можно использоватья для привязки действий (HTTP  запросы) и в теле запроса <code>@CALL_STARTED</code>\n</p>\n\n<dx-load-panel [visible]=\"loadingVisible\"\n               shadingColor=\"rgba(0,0,0,0.3)\"></dx-load-panel>\n","import { Component, OnInit } from '@angular/core';\nimport {Configuration} from '../../@core/models/configuration.model';\nimport {ConfigurationService} from '../../@core/services/configuration.service';\nimport notify from 'devextreme/ui/notify';\n\n@Component({\n  selector: 'app-configuration-event-binding',\n  templateUrl: './configuration-event-binding.component.html',\n  styleUrls: ['./configuration-event-binding.component.scss']\n})\nexport class ConfigurationEventBindingComponent implements OnInit {\n  titleEvents: string[] = [\n    'Hangup',\n    'Newstate',\n    'Dial',\n    'Newexten',\n    'NewCallerid',\n    'Newchannel'\n  ];\n  titleFields: string[] = [\n    'Event',\n    'Privilege',\n    'Channel',\n    'ChannelState',\n    'ChannelStateDesc',\n    'CallerIDNum',\n    'CallerIDName',\n    'ConnectedLineNum',\n    'ConnectedLineName',\n    'Language',\n    'AccountCode',\n    'Context',\n    'Exten',\n    'Priority',\n    'Uniqueid',\n    'Linkedid',\n    'Cause'\n  ];\n  configuration: Configuration;\n  loadingVisible = false;\n  constructor(private configurationService: ConfigurationService) { }\n\n  ngOnInit() {\n    this.configurationService.get().subscribe(configurations => {\n      if (configurations === null) {\n        return;\n      }\n      this.configuration = configurations[0];\n    });\n  }\n\n  save() {\n    this.loadingVisible = true;\n    this.configurationService.save(this.configuration).subscribe(res => {\n      notify('Конфигурация успешно обновлена');\n      this.loadingVisible = false;\n    }, error => {\n      this.loadingVisible = false;\n      notify(error.message, 'error');\n      throw new Error(error);\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ConfigurationLayoutComponent} from './configuration-layout/configuration-layout.component';\nimport {ConfigurationComponent} from './configuration/configuration.component';\nimport {ConfigurationVariableComponent} from './configuration-variable/configuration-variable.component';\nimport {ConfigurationCallbackComponent} from './configuration-callback/configuration-callback.component';\nimport {ConfigurationEventBindingComponent} from './configuration-event-binding/configuration-event-binding.component';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: ConfigurationLayoutComponent, children: [\n      {\n        path: '', component: ConfigurationComponent\n      },\n      {\n        path: 'variables', component: ConfigurationVariableComponent\n      },\n      {\n        path: 'callback', component: ConfigurationCallbackComponent\n      },\n      {\n        path: 'event-binding', component: ConfigurationEventBindingComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConfigurationCenterRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ConfigurationCenterRoutingModule } from './configuration-center-routing.module';\nimport { ConfigurationComponent } from './configuration/configuration.component';\nimport { ConfigurationLayoutComponent } from './configuration-layout/configuration-layout.component';\nimport {DxButtonModule, DxDataGridModule, DxFormModule, DxLoadPanelModule, DxPopupModule} from 'devextreme-angular';\nimport { ConfigurationVariableComponent } from './configuration-variable/configuration-variable.component';\nimport {NbCardModule} from '@nebular/theme';\nimport { ConfigurationVariableFormComponent } from './configuration-variable/configuration-variable-form/configuration-variable-form.component';\nimport { ConfigurationCallbackComponent } from './configuration-callback/configuration-callback.component';\nimport { ConfigurationEventBindingComponent } from './configuration-event-binding/configuration-event-binding.component';\n\n\n@NgModule({\n  declarations: [ConfigurationComponent, ConfigurationLayoutComponent, ConfigurationVariableComponent, ConfigurationVariableFormComponent, ConfigurationCallbackComponent, ConfigurationEventBindingComponent],\n  imports: [\n    CommonModule,\n    ConfigurationCenterRoutingModule,\n    DxFormModule,\n    DxButtonModule,\n    DxLoadPanelModule,\n    DxDataGridModule,\n    NbCardModule,\n    DxPopupModule\n  ]\n})\nexport class ConfigurationCenterModule { }\n"]}