{"version":3,"sources":["webpack:///src/app/operators-center/operators-layout/operators-layout.component.ts","webpack:///src/app/operators-center/operators-layout/operators-layout.component.html","webpack:///src/app/@core/services/call.service.ts"],"names":["OperatorsLayoutComponent","CallService","httpClient","defaultHeaders","observe","reportProgress","headers","this","get","delete","subscribe"],"mappings":"yJAOO,MAAMA,EAEX,eAEA,a,sCAJWA,I,uBAAAA,EAAwB,gFCPrC,yB,kECCA,8DAOO,MAAMC,EAIX,YAAoBC,GAAA,KAAAA,aAFb,KAAAC,eAAiB,IAAI,IAOrB,IAAIC,EAAe,OAAQC,GAA0B,GAE1D,MAAMC,EAAUC,KAAKJ,eAarB,OAAOI,KAAKL,WAAWM,IAAY,aACjC,CACEF,QAASA,EACTF,QAASA,EACTC,eAAgBA,IAKf,YAEH,MAAMC,EAAUC,KAAKJ,eAavBI,KAAKL,WAAWO,OAAO,aACrB,CACEH,QAASA,IAEXI,a,sCApDOT,GAAW,Y,yBAAXA,EAAW,QAAXA,EAAW,qBAFV","file":"x","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-operators-layout',\n  templateUrl: './operators-layout.component.html',\n  styleUrls: ['./operators-layout.component.scss']\n})\nexport class OperatorsLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpEvent, HttpHeaders, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Call} from '../models/call.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CallService {\n\n  public defaultHeaders = new HttpHeaders();\n\n  constructor(private httpClient: HttpClient) { }\n\n  public get(observe?: 'body', reportProgress?: boolean): Observable<Call[]>;\n  public get(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Call[]>>;\n  public get(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Call[]>>;\n  public get(observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n    const headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'application/json',\n      'text/json',\n      'application/xml',\n      'text/xml'\n    ];\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<Call[]>(`/api/calls`,\n      {\n        headers: headers,\n        observe: observe,\n        reportProgress: reportProgress\n      }\n    );\n  }\n\n  public deleteAll() {\n\n      const headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'application/json',\n      'text/json',\n      'application/xml',\n      'text/xml'\n    ];\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    this.httpClient.delete(`/api/calls`,\n      {\n        headers: headers\n      }\n    ).subscribe();\n\n  }\n}\n"]}