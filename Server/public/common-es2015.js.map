{"version":3,"sources":["./src/app/@core/services/call.service.ts","./src/app/operators-center/operators-layout/operators-layout.component.ts","./src/app/operators-center/operators-layout/operators-layout.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA2C;AAC2C;;;AAO/E,MAAM,WAAW;IAItB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAFnC,mBAAc,GAAG,IAAI,gEAAW,EAAE,CAAC;IAEI,CAAC;IAKxC,GAAG,CAAC,UAAe,MAAM,EAAE,iBAA0B,KAAK;QAE/D,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAEpC,iCAAiC;QACjC,MAAM,iBAAiB,GAAa;YAClC,kBAAkB;YAClB,WAAW;YACX,iBAAiB;YACjB,UAAU;SACX,CAAC;QAEF,uCAAuC;QACvC,MAAM,QAAQ,GAAa,EAAE,CAAC;QAE9B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,YAAY,EAC7C;YACE,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SAC/B,CACF,CAAC;IACJ,CAAC;IAEM,SAAS,CAAC,eAAuB;QAEpC,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAEtC,iCAAiC;QACjC,MAAM,iBAAiB,GAAa;YAClC,kBAAkB;YAClB,WAAW;YACX,iBAAiB;YACjB,UAAU;SACX,CAAC;QAEF,uCAAuC;QACvC,MAAM,QAAQ,GAAa,EAAE,CAAC;QAE9B,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,cAAc,eAAe,EAAE,EAC3D;YACE,OAAO,EAAE,OAAO;SACjB,CACF,CAAC;IAEJ,CAAC;;sEAtDU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,wBAAwB;IAEnC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gGALU,wBAAwB;wGAAxB,wBAAwB;QCPrC,2EAA+B;;6FDOlB,wBAAwB;cALpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACjD","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpEvent, HttpHeaders, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Call} from '../models/call.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CallService {\n\n  public defaultHeaders = new HttpHeaders();\n\n  constructor(private httpClient: HttpClient) { }\n\n  public get(observe?: 'body', reportProgress?: boolean): Observable<Call[]>;\n  public get(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Call[]>>;\n  public get(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Call[]>>;\n  public get(observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n    const headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'application/json',\n      'text/json',\n      'application/xml',\n      'text/xml'\n    ];\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<Call[]>(`/api/calls`,\n      {\n        headers: headers,\n        observe: observe,\n        reportProgress: reportProgress\n      }\n    );\n  }\n\n  public deleteAll(configurationId: number) {\n\n      const headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'application/json',\n      'text/json',\n      'application/xml',\n      'text/xml'\n    ];\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.delete(`/api/calls/${configurationId}`,\n      {\n        headers: headers\n      }\n    );\n\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-operators-layout',\n  templateUrl: './operators-layout.component.html',\n  styleUrls: ['./operators-layout.component.scss']\n})\nexport class OperatorsLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet></router-outlet>\n"],"sourceRoot":"webpack:///"}