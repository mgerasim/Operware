{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/@core/models/configuration.model.ts","webpack:///src/app/@core/services/configuration.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/menu/menu-organization/menu-organization.component.html","webpack:///src/app/menu/menu-organization/menu-organization.component.ts","webpack:///src/app/menu/menu.component.ts","webpack:///src/app/menu/menu.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","Configuration","ConfigurationService","httpClient","defaultHeaders","headers","httpHeaderAccepts","consumes","observe","reportProgress","get","configuration","post","responseType","put","providedIn","routes","path","loadChildren","m","ConfigurationCenterModule","OperatorsCenterModule","ServiceCenterModule","AppRoutingModule","forRoot","preloadingStrategy","enableTracing","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","MenuOrganizationComponent","configurationService","popupVisible","organization","console","log","add","toPromise","res","localStorage","setItem","toString","location","reload","error","message","item","getItem","isEmptyOrganization","titleOrganization","MenuComponent","items","link","expanded","children","subscribe","configurations","find","x","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export class Configuration {\n  id: number;\n\n  createdAt: Date;\n  updatedAt: Date;\n  AMI_username: string;\n  AMI_password: string;\n  AMI_server: string;\n  AMI_port: number;\n  authKey: string;\n  baseUrl: string;\n  defaultResponsibles: string;\n\n  state: string;\n\n  incomingStartCallEvent: string;\n  incomingStartCallField: string;\n  incomingEndCallEvent: string;\n  incomingEndCallField: string;\n  incomingAnswerCallEvent: string;\n  incomingAnswerCallField: string;\n  incomingStartCallValue: string;\n  incomingEndCallValue: string;\n  incomingAnswerCallValue: string;\n  incomingStartCallEvent2: string;\n  incomingStartCallField2: string;\n  incomingEndCallEvent2: string;\n  incomingEndCallField2: string;\n  incomingAnswerCallEvent2: string;\n  incomingAnswerCallField2: string;\n  incomingStartCallValue2: string;\n  incomingEndCallValue2: string;\n  incomingAnswerCallValue2: string;\n\n  callbackTimeout: string;\n  callbackContext: string;\n\n  uniqueFieldName: string;\n  titleOrganization: string;\n}\n","import { Injectable } from '@angular/core';\nimport {Configuration} from '../models/configuration.model';\nimport {Observable} from 'rxjs';\nimport {HttpClient, HttpEvent, HttpHeaders, HttpResponse} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigurationService {\n\n  public defaultHeaders = new HttpHeaders();\n\n  constructor(private httpClient: HttpClient) { }\n\n  public delete(id: number): Observable<any> {\n\n    const headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'application/json',\n      'text/json',\n      'application/xml',\n      'text/xml'\n    ];\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.delete(`/api/configuration/${id}`,\n      {\n        headers: headers\n      }\n    );\n  }\n\n  public getById(id: number, observe?: 'body', reportProgress?: boolean): Observable<Configuration>;\n  public getById(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Configuration>>;\n  public getById(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Configuration>>;\n  public getById(id: number, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n    const headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'application/json',\n      'text/json',\n      'application/xml',\n      'text/xml'\n    ];\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<Configuration>(`/api/configuration/${id}`,\n      {\n        headers: headers,\n        observe: observe,\n        reportProgress: reportProgress\n      }\n    );\n  }\n\n  public get(observe?: 'body', reportProgress?: boolean): Observable<Configuration[]>;\n  public get(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Configuration[]>>;\n  public get(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Configuration[]>>;\n  public get(observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n    const headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'application/json',\n      'text/json',\n      'application/xml',\n      'text/xml'\n    ];\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<Configuration[]>(`/api/configuration`,\n      {\n        headers: headers,\n        observe: observe,\n        reportProgress: reportProgress\n      }\n    );\n  }\n\n  public add(configuration: Configuration): Observable<Configuration> {\n\n    const headers = this.defaultHeaders;\n\n    return this.httpClient.post<Configuration>(`/api/configuration`, configuration,\n      {\n        observe: 'body',\n        responseType: 'json'\n      }\n    );\n  }\n\n  public save(configuration: Configuration): Observable<Configuration> {\n\n    const headers = this.defaultHeaders;\n\n    return this.httpClient.put<Configuration>(`/api/configuration`, configuration,\n      {\n        observe: 'body',\n        responseType: 'json'\n      }\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {Routes, RouterModule, PreloadAllModules} from '@angular/router';\nimport {CallbacksComponent} from './operators-center/callbacks/callbacks.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'configuration',\n    loadChildren: () => import('./configuration-center/configuration-center.module').then(m => m.ConfigurationCenterModule)\n  },\n  {\n    path: 'calls',\n    loadChildren: () => import('./operators-center/operators-center.module').then(m => m.OperatorsCenterModule)\n  },\n  {\n    path: 'service',\n    loadChildren: () => import('./service-center/service-center.module').then(m => m.ServiceCenterModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    preloadingStrategy: PreloadAllModules,\n    enableTracing: true\n  })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Operware';\n}\n","<nb-layout>\n  <nb-sidebar>\n    <app-menu></app-menu>\n  </nb-sidebar>\n\n  <nb-layout-column>\n    <router-outlet></router-outlet>\n  </nb-layout-column>\n</nb-layout>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {NbCardModule, NbLayoutModule, NbMenuModule, NbSidebarModule, NbSidebarService, NbThemeModule} from '@nebular/theme';\nimport { MenuComponent } from './menu/menu.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { MenuOrganizationComponent } from './menu/menu-organization/menu-organization.component';\nimport {DxButtonModule, DxFormModule, DxPopupModule} from 'devextreme-angular';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent,\n    MenuOrganizationComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    NbThemeModule.forRoot(),\n    AppRoutingModule,\n    NbLayoutModule,\n    NbSidebarModule,\n    NgbModule,\n    NbMenuModule.forRoot(),\n    DxPopupModule,\n    NbCardModule,\n    DxFormModule,\n    DxButtonModule,\n  ],\n  providers: [\n    NbSidebarService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div ngbDropdown class=\"d-inline-block\">\n  <button class=\"btn btn-outline-primary\" id=\"dropdownBasic1\" ngbDropdownToggle>{{title}}</button>\n  <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n    <button ngbDropdownItem (click)=\"add()\">Добавить организацию</button>\n    <div class=\"dropdown-divider\"></div>\n    <button ngbDropdownItem *ngFor=\"let item of organizations\" (click)=\"change(item)\">{{ item.titleOrganization === null ? 'Не указано' : item.titleOrganization }}\n    </button>\n  </div>\n</div>\n\n<dx-popup [title]=\"'Добавление'\"\n          [(visible)]=\"popupVisible\">\n  <div *dxTemplate=\"let data of 'content'\">\n    <nb-card>\n      <nb-card-body>\n        <dx-form [formData]=\"organization\" colCount=\"1\">\n\n            <dxi-item dataField=\"titleOrganization\">\n              <dxo-label text=\"Наименование организации\"></dxo-label>\n            </dxi-item>\n        </dx-form>\n      </nb-card-body>\n      <nb-card-footer>\n        <dx-button stylingMode=\"contained\"\n                   type=\"success\"\n                   text=\"Сохранить\"\n                   (click)=\"save()\">\n        </dx-button>\n      </nb-card-footer>\n    </nb-card>\n\n  </div>\n</dx-popup>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {isNullOrUndefined} from 'util';\nimport {Configuration} from '../../@core/models/configuration.model';\nimport {ConfigurationService} from '../../@core/services/configuration.service';\nimport notify from 'devextreme/ui/notify';\n\n@Component({\n  selector: 'app-menu-organization',\n  templateUrl: './menu-organization.component.html',\n  styleUrls: ['./menu-organization.component.scss']\n})\nexport class MenuOrganizationComponent implements OnInit {\n  @Input() organization: Configuration;\n  @Input() organizations: Configuration[];\n  get isEmptyOrganization(): boolean {\n    return isNullOrUndefined(localStorage.getItem('organization')) || localStorage.getItem('organization') === 'null';\n  }\n  get title(): string {\n    return this.isEmptyOrganization ? 'Выберите организацию' : this.organization.titleOrganization;\n  }\n  popupVisible = false;\n\n  constructor(private configurationService: ConfigurationService) { }\n\n\n  ngOnInit() {\n\n  }\n\n  add() {\n    this.popupVisible = true;\n    this.organization = new Configuration();\n  }\n\n  async save() {\n    try {\n      console.log(this.organization);\n      const res = await this.configurationService.add(this.organization).toPromise();\n      console.log(res);\n      localStorage.setItem('organization', res.id.toString());\n      this.popupVisible = false;\n      location.reload();\n\n    } catch (e) {\n      console.error(e);\n      notify(e.message, 'error');\n    }\n  }\n\n  change(item: Configuration) {\n    console.log(item);\n    localStorage.setItem('organization', item.id.toString());\n    location.reload();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {NbMenuItem} from '@nebular/theme';\nimport {ConfigurationService} from '../@core/services/configuration.service';\nimport {Configuration} from '../@core/models/configuration.model';\nimport {isNullOrUndefined} from \"util\";\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n  items: NbMenuItem[] = [\n    {\n      title: 'Звонки',\n      link: '/calls',\n    },\n    {\n      title: 'События',\n      link: '/calls/events',\n    },\n    {\n      title: 'Конфигурация',\n      expanded: true,\n      children: [\n        {\n          title: 'AMI подключение',\n          link: '/configuration',\n        },\n        {\n          title: 'Привязка событий',\n          link: '/configuration/event-binding',\n        },\n        {\n          title: 'Переменные',\n          link: '/configuration/variables',\n        },\n        {\n          title: 'Обратный звонок',\n          link: '/configuration/callback',\n        }\n      ],\n    },\n    {\n      title: 'Обслуживание',\n      link: '/service',\n    },\n    {\n      title: 'Обратные звонки',\n      link: '/calls/callbacks',\n    }\n  ];\n\n  configurations: Configuration[];\n  configuration: Configuration;\n  constructor(private configurationService: ConfigurationService) { }\n\n  get isEmptyOrganization(): boolean {\n    return isNullOrUndefined(localStorage.getItem('organization')) || localStorage.getItem('organization') === 'null';\n  }\n\n  ngOnInit() {\n    this.configurationService.get().subscribe(configurations => {\n      this.configurations = configurations;\n      if (!this.isEmptyOrganization) {\n        this.configuration = this.configurations.find(x => x.id.toString() === localStorage.getItem('organization'));\n        if (!this.configuration) {\n          localStorage.setItem('organization', null);\n        }\n      }\n    });\n  }\n\n}\n","<app-menu-organization [organization]=\"configuration\" [organizations]=\"configurations\">\n\n</app-menu-organization>\n<nb-menu *ngIf=\"configuration\" [items]=\"items\">\n</nb-menu>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}