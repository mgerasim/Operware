{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/@core/models/configuration.model.ts","./src/app/@core/services/configuration.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/menu/menu-organization/menu-organization.component.ts","./src/app/menu/menu-organization/menu-organization.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export class Configuration {\n  id: number;\n\n  createdAt: Date;\n  updatedAt: Date;\n  AMI_username: string;\n  AMI_password: string;\n  AMI_server: string;\n  AMI_port: number;\n  authKey: string;\n  baseUrl: string;\n  defaultResponsibles: string;\n\n  state: string;\n\n  incomingStartCallEvent: string;\n  incomingStartCallField: string;\n  incomingEndCallEvent: string;\n  incomingEndCallField: string;\n  incomingAnswerCallEvent: string;\n  incomingAnswerCallField: string;\n  incomingStartCallValue: string;\n  incomingEndCallValue: string;\n  incomingAnswerCallValue: string;\n  incomingStartCallEvent2: string;\n  incomingStartCallField2: string;\n  incomingEndCallEvent2: string;\n  incomingEndCallField2: string;\n  incomingAnswerCallEvent2: string;\n  incomingAnswerCallField2: string;\n  incomingStartCallValue2: string;\n  incomingEndCallValue2: string;\n  incomingAnswerCallValue2: string;\n\n  callbackTimeout: string;\n  callbackContext: string;\n\n  uniqueFieldName: string;\n  titleOrganization: string;\n}\n","import { Injectable } from '@angular/core';\nimport {Configuration} from '../models/configuration.model';\nimport {Observable} from 'rxjs';\nimport {HttpClient, HttpEvent, HttpHeaders, HttpResponse} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigurationService {\n\n  public defaultHeaders = new HttpHeaders();\n\n  constructor(private httpClient: HttpClient) { }\n\n  public delete(id: number): Observable<any> {\n\n    const headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'application/json',\n      'text/json',\n      'application/xml',\n      'text/xml'\n    ];\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.delete(`/api/configuration/${id}`,\n      {\n        headers: headers\n      }\n    );\n  }\n\n  public getById(id: number, observe?: 'body', reportProgress?: boolean): Observable<Configuration>;\n  public getById(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Configuration>>;\n  public getById(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Configuration>>;\n  public getById(id: number, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n    const headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'application/json',\n      'text/json',\n      'application/xml',\n      'text/xml'\n    ];\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<Configuration>(`/api/configuration/${id}`,\n      {\n        headers: headers,\n        observe: observe,\n        reportProgress: reportProgress\n      }\n    );\n  }\n\n  public get(observe?: 'body', reportProgress?: boolean): Observable<Configuration[]>;\n  public get(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Configuration[]>>;\n  public get(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Configuration[]>>;\n  public get(observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n    const headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'application/json',\n      'text/json',\n      'application/xml',\n      'text/xml'\n    ];\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<Configuration[]>(`/api/configuration`,\n      {\n        headers: headers,\n        observe: observe,\n        reportProgress: reportProgress\n      }\n    );\n  }\n\n  public add(configuration: Configuration): Observable<Configuration> {\n\n    const headers = this.defaultHeaders;\n\n    return this.httpClient.post<Configuration>(`/api/configuration`, configuration,\n      {\n        observe: 'body',\n        responseType: 'json'\n      }\n    );\n  }\n\n  public save(configuration: Configuration): Observable<Configuration> {\n\n    const headers = this.defaultHeaders;\n\n    return this.httpClient.put<Configuration>(`/api/configuration`, configuration,\n      {\n        observe: 'body',\n        responseType: 'json'\n      }\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {Routes, RouterModule, PreloadAllModules} from '@angular/router';\nimport {CallbacksComponent} from './operators-center/callbacks/callbacks.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'configuration',\n    loadChildren: () => import('./configuration-center/configuration-center.module').then(m => m.ConfigurationCenterModule)\n  },\n  {\n    path: 'calls',\n    loadChildren: () => import('./operators-center/operators-center.module').then(m => m.OperatorsCenterModule)\n  },\n  {\n    path: 'service',\n    loadChildren: () => import('./service-center/service-center.module').then(m => m.ServiceCenterModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    preloadingStrategy: PreloadAllModules,\n    enableTracing: true\n  })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Operware';\n}\n","<nb-layout>\n  <nb-sidebar>\n    <app-menu></app-menu>\n  </nb-sidebar>\n\n  <nb-layout-column>\n    <router-outlet></router-outlet>\n  </nb-layout-column>\n</nb-layout>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {NbCardModule, NbLayoutModule, NbMenuModule, NbSidebarModule, NbSidebarService, NbThemeModule} from '@nebular/theme';\nimport { MenuComponent } from './menu/menu.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { MenuOrganizationComponent } from './menu/menu-organization/menu-organization.component';\nimport {DxButtonModule, DxFormModule, DxPopupModule} from 'devextreme-angular';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent,\n    MenuOrganizationComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    NbThemeModule.forRoot(),\n    AppRoutingModule,\n    NbLayoutModule,\n    NbSidebarModule,\n    NgbModule,\n    NbMenuModule.forRoot(),\n    DxPopupModule,\n    NbCardModule,\n    DxFormModule,\n    DxButtonModule,\n  ],\n  providers: [\n    NbSidebarService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, Input, OnInit} from '@angular/core';\nimport {isNullOrUndefined} from 'util';\nimport {Configuration} from '../../@core/models/configuration.model';\nimport {ConfigurationService} from '../../@core/services/configuration.service';\nimport notify from 'devextreme/ui/notify';\n\n@Component({\n  selector: 'app-menu-organization',\n  templateUrl: './menu-organization.component.html',\n  styleUrls: ['./menu-organization.component.scss']\n})\nexport class MenuOrganizationComponent implements OnInit {\n  @Input() organization: Configuration;\n  @Input() organizations: Configuration[];\n  get isEmptyOrganization(): boolean {\n    return isNullOrUndefined(localStorage.getItem('organization')) || localStorage.getItem('organization') === 'null';\n  }\n  get title(): string {\n    return this.isEmptyOrganization ? 'Выберите организацию' : this.organization.titleOrganization;\n  }\n  popupVisible = false;\n\n  constructor(private configurationService: ConfigurationService) { }\n\n\n  ngOnInit() {\n\n  }\n\n  add() {\n    this.popupVisible = true;\n    this.organization = new Configuration();\n  }\n\n  async save() {\n    try {\n      console.log(this.organization);\n      const res = await this.configurationService.add(this.organization).toPromise();\n      console.log(res);\n      localStorage.setItem('organization', res.id.toString());\n      this.popupVisible = false;\n      location.reload();\n\n    } catch (e) {\n      console.error(e);\n      notify(e.message, 'error');\n    }\n  }\n\n  change(item: Configuration) {\n    console.log(item);\n    localStorage.setItem('organization', item.id.toString());\n    location.reload();\n  }\n}\n","<div ngbDropdown class=\"d-inline-block\">\n  <button class=\"btn btn-outline-primary\" id=\"dropdownBasic1\" ngbDropdownToggle>{{title}}</button>\n  <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n    <button ngbDropdownItem (click)=\"add()\">Добавить организацию</button>\n    <div class=\"dropdown-divider\"></div>\n    <button ngbDropdownItem *ngFor=\"let item of organizations\" (click)=\"change(item)\">{{ item.titleOrganization === null ? 'Не указано' : item.titleOrganization }}\n    </button>\n  </div>\n</div>\n\n<dx-popup [title]=\"'Добавление'\"\n          [(visible)]=\"popupVisible\">\n  <div *dxTemplate=\"let data of 'content'\">\n    <nb-card>\n      <nb-card-body>\n        <dx-form [formData]=\"organization\" colCount=\"1\">\n\n            <dxi-item dataField=\"titleOrganization\">\n              <dxo-label text=\"Наименование организации\"></dxo-label>\n            </dxi-item>\n        </dx-form>\n      </nb-card-body>\n      <nb-card-footer>\n        <dx-button stylingMode=\"contained\"\n                   type=\"success\"\n                   text=\"Сохранить\"\n                   (click)=\"save()\">\n        </dx-button>\n      </nb-card-footer>\n    </nb-card>\n\n  </div>\n</dx-popup>\n","import { Component, OnInit } from '@angular/core';\nimport {NbMenuItem} from '@nebular/theme';\nimport {ConfigurationService} from '../@core/services/configuration.service';\nimport {Configuration} from '../@core/models/configuration.model';\nimport {isNullOrUndefined} from \"util\";\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n  items: NbMenuItem[] = [\n    {\n      title: 'Звонки',\n      link: '/calls',\n    },\n    {\n      title: 'События',\n      link: '/calls/events',\n    },\n    {\n      title: 'Конфигурация',\n      expanded: true,\n      children: [\n        {\n          title: 'AMI подключение',\n          link: '/configuration',\n        },\n        {\n          title: 'Привязка событий',\n          link: '/configuration/event-binding',\n        },\n        {\n          title: 'Переменные',\n          link: '/configuration/variables',\n        },\n        {\n          title: 'Обратный звонок',\n          link: '/configuration/callback',\n        }\n      ],\n    },\n    {\n      title: 'Обслуживание',\n      link: '/service',\n    },\n    {\n      title: 'Обратные звонки',\n      link: '/calls/callbacks',\n    }\n  ];\n\n  configurations: Configuration[];\n  configuration: Configuration;\n  constructor(private configurationService: ConfigurationService) { }\n\n  get isEmptyOrganization(): boolean {\n    return isNullOrUndefined(localStorage.getItem('organization')) || localStorage.getItem('organization') === 'null';\n  }\n\n  ngOnInit() {\n    this.configurationService.get().subscribe(configurations => {\n      this.configurations = configurations;\n      if (!this.isEmptyOrganization) {\n        this.configuration = this.configurations.find(x => x.id.toString() === localStorage.getItem('organization'));\n        if (!this.configuration) {\n          localStorage.setItem('organization', null);\n        }\n      }\n    });\n  }\n\n}\n","<app-menu-organization [organization]=\"configuration\" [organizations]=\"configurations\">\n\n</app-menu-organization>\n<nb-menu *ngIf=\"configuration\" [items]=\"items\">\n</nb-menu>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}