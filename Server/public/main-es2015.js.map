{"version":3,"sources":["webpack:///src/app/app-routing.module.ts","webpack:///src/app/menu/menu.component.ts","webpack:///src/app/menu/menu.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["routes","path","loadChildren","then","m","ConfigurationCenterModule","OperatorsCenterModule","AppRoutingModule","forRoot","preloadingStrategy","enableTracing","MenuComponent","items","title","link","expanded","children","AppComponent","AppModule","bootstrapModule","catch","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module","exports","id"],"mappings":"qLAKA,MAAMA,EAAiB,CACrB,CACEC,KAAM,gBACNC,aAAc,IAAM,uDAA6DC,KAAKC,GAAKA,EAAEC,4BAE/F,CACEJ,KAAM,QACNC,aAAc,IAAM,uDAAqDC,KAAKC,GAAKA,EAAEE,yBAWlF,MAAMC,G,uBAAAA,I,oDAAAA,IAAgB,SANlB,CAAC,IAAaC,QAAQR,EAAQ,CACrCS,mBAAoB,IACpBC,eAAe,KAEP,O,gBCbL,MAAMC,EAiCX,cAhCA,KAAAC,MAAsB,CACpB,CACEC,MAAO,uCACPC,KAAM,UAER,CACED,MAAO,2EACPE,UAAU,EACVC,SAAU,CACR,CACEH,MAAO,yEACPC,KAAM,kBAER,CACED,MAAO,8FACPC,KAAM,gCAER,CACED,MAAO,+DACPC,KAAM,4BAER,CACED,MAAO,wFACPC,KAAM,6BAIZ,CACED,MAAO,wFACPC,KAAM,qBAKV,a,sCAnCWH,I,uBAAAA,EAAa,yFCR1B,oB,KAAS,uB,+BCOF,MAAMM,EALb,cAME,KAAAJ,MAAQ,Y,sCADGI,I,uBAAAA,EAAY,qECPzB,oBACE,qBACE,mBACF,OAEA,2BACE,wBACF,OACF,S,yECsBO,MAAMC,G,uBAAAA,EAAS,WAFRD,K,oDAEDC,IAAS,UALT,CACT,KACD,SAZQ,CACP,IACA,IACA,IACA,IAAcV,UACdD,EACA,IACA,IACA,IAAaC,cCbjB,MAAyBW,gBAAgBD,GACtCE,MAAMC,GAAOC,QAAQC,MAAMF,K,mBCX9B,SAASG,EAAyBC,GAGjC,OAAOC,QAAQC,UAAUxB,MAAKA,WAC7B,IAAIyB,EAAI,IAAIC,MAAM,uBAAyBJ,EAAM,KAEjD,MADAG,EAAEE,KAAO,mBACHF,KAGRJ,EAAyBO,KAAO,WAAa,MAAO,IACpDP,EAAyBG,QAAUH,EACnCQ,EAAOC,QAAUT,EACjBA,EAAyBU,GAAK,S","file":"x","sourcesContent":["import { NgModule } from '@angular/core';\nimport {Routes, RouterModule, PreloadAllModules} from '@angular/router';\nimport {CallbacksComponent} from './operators-center/callbacks/callbacks.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'configuration',\n    loadChildren: () => import('./configuration-center/configuration-center.module').then(m => m.ConfigurationCenterModule)\n  },\n  {\n    path: 'calls',\n    loadChildren: () => import('./operators-center/operators-center.module').then(m => m.OperatorsCenterModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    preloadingStrategy: PreloadAllModules,\n    enableTracing: true\n  })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {NbMenuItem} from '@nebular/theme';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n  items: NbMenuItem[] = [\n    {\n      title: 'Звонки',\n      link: '/calls',\n    },\n    {\n      title: 'Конфигурация',\n      expanded: true,\n      children: [\n        {\n          title: 'AMI подключение',\n          link: '/configuration',\n        },\n        {\n          title: 'Привязка событий',\n          link: '/configuration/event-binding',\n        },\n        {\n          title: 'Переменные',\n          link: '/configuration/variables',\n        },\n        {\n          title: 'Обратный звонок',\n          link: '/configuration/callback',\n        }\n      ],\n    },\n    {\n      title: 'Обратные звонки',\n      link: '/calls/callbacks',\n    }\n  ];\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<nb-menu [items]=\"items\">\n</nb-menu>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Operware';\n}\n","<nb-layout>\n  <nb-sidebar>\n    <app-menu></app-menu>\n  </nb-sidebar>\n\n  <nb-layout-column>\n    <router-outlet></router-outlet>\n  </nb-layout-column>\n</nb-layout>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {NbLayoutModule, NbMenuModule, NbSidebarModule, NbSidebarService, NbThemeModule} from '@nebular/theme';\nimport { MenuComponent } from './menu/menu.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    NbThemeModule.forRoot(),\n    AppRoutingModule,\n    NbLayoutModule,\n    NbSidebarModule,\n    NbMenuModule.forRoot(),\n  ],\n  providers: [\n    NbSidebarService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}