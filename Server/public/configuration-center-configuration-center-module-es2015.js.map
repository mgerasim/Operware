{"version":3,"sources":["webpack:///src/app/configuration-center/configuration-layout/configuration-layout.component.ts","webpack:///src/app/configuration-center/configuration-layout/configuration-layout.component.html","webpack:///src/app/@core/services/configuration.service.ts","webpack:///node_modules/devextreme-angular/__ivy_ngcc__/fesm2015/devextreme-angular-ui-load-panel.js","webpack:///src/app/configuration-center/configuration/configuration.component.html","webpack:///src/app/configuration-center/configuration/configuration.component.ts","webpack:///src/app/@core/services/configurationVariable.service.ts","webpack:///node_modules/devextreme-angular/__ivy_ngcc__/fesm2015/devextreme-angular-ui-scroll-view.js","webpack:///src/app/@core/models/configurationVariable.model.ts","webpack:///src/app/configuration-center/configuration-variable/configuration-variable-form/configuration-variable-form.component.ts","webpack:///src/app/configuration-center/configuration-variable/configuration-variable.component.html","webpack:///src/app/configuration-center/configuration-variable/configuration-variable-form/configuration-variable-form.component.html","webpack:///src/app/configuration-center/configuration-variable/configuration-variable.component.ts","webpack:///src/app/configuration-center/configuration-callback/configuration-callback.component.ts","webpack:///src/app/configuration-center/configuration-callback/configuration-callback.component.html","webpack:///src/app/configuration-center/configuration-event-binding/configuration-event-binding.component.html","webpack:///src/app/configuration-center/configuration-event-binding/configuration-event-binding.component.ts","webpack:///src/app/configuration-center/configuration-center-routing.module.ts","webpack:///src/app/configuration-center/configuration-center.module.ts"],"names":["ConfigurationLayoutComponent","httpClient","defaultHeaders","observe","reportProgress","headers","this","get","configuration","put","responseType","elementRef","ngZone","templateHost","_watcherHelper","optionHost","transferState","platformId","super","_createEventEmitters","subscribe","emit","setHost","_getOption","value","_setOption","element","options","_destroyWidget","ɵfac","t","P","ɵcmp","type","selectors","inputs","animation","closeOnOutsideClick","container","deferRendering","delay","elementAttr","focusStateEnabled","height","hint","hoverStateEnabled","indicatorSrc","maxHeight","maxWidth","message","minHeight","minWidth","position","rtlEnabled","shading","shadingColor","showIndicator","showPane","visible","width","outputs","onContentReady","onDisposing","onHidden","onHiding","onInitialized","onOptionChanged","onShowing","onShown","animationChange","closeOnOutsideClickChange","containerChange","deferRenderingChange","delayChange","elementAttrChange","focusStateEnabledChange","heightChange","hintChange","hoverStateEnabledChange","indicatorSrcChange","maxHeightChange","maxWidthChange","messageChange","minHeightChange","minWidthChange","positionChange","rtlEnabledChange","shadingChange","shadingColorChange","showIndicatorChange","showPaneChange","visibleChange","widthChange","features","decls","vars","template","rf","ctx","encapsulation","ctorParameters","undefined","decorators","args","Object","prototype","Boolean","Number","String","O","DxLoadPanelModule","ɵmod","ɵinj","factory","imports","configurationService","titleEvents","titleFields","loadingVisible","configurations","console","log","save","res","error","Error","configurationVariable","post","bounceEnabled","direction","disabled","pulledDownText","pullingDownText","reachBottomText","refreshingText","scrollByContent","scrollByThumb","showScrollbar","useNative","onPullDown","onReachBottom","onScroll","onUpdated","bounceEnabledChange","directionChange","disabledChange","pulledDownTextChange","pullingDownTextChange","reachBottomTextChange","refreshingTextChange","scrollByContentChange","scrollByThumbChange","showScrollbarChange","useNativeChange","ngContentSelectors","DxScrollViewModule","ConfigurationVariable","id","configurationVariableService","apply","update","err","add","ConfigurationVariableComponent","popupVisible","configurationVariables","$event","data","messsage","routes","path","component","children","ConfigurationCenterRoutingModule","forChild","ConfigurationCenterModule"],"mappings":"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","file":"x","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-configuration-layout',\n  templateUrl: './configuration-layout.component.html',\n  styleUrls: ['./configuration-layout.component.scss']\n})\nexport class ConfigurationLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport {Configuration} from '../models/configuration.model';\nimport {Observable} from 'rxjs';\nimport {HttpClient, HttpEvent, HttpHeaders, HttpResponse} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigurationService {\n\n  public defaultHeaders = new HttpHeaders();\n\n  constructor(private httpClient: HttpClient) { }\n\n  public get(observe?: 'body', reportProgress?: boolean): Observable<Configuration>;\n  public get(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Configuration>>;\n  public get(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Configuration>>;\n  public get(observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n    const headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'application/json',\n      'text/json',\n      'application/xml',\n      'text/xml'\n    ];\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<Configuration[]>(`/api/configuration`,\n      {\n        headers: headers,\n        observe: observe,\n        reportProgress: reportProgress\n      }\n    );\n  }\n\n  public save(configuration: Configuration): Observable<Configuration> {\n\n    const headers = this.defaultHeaders;\n\n    return this.httpClient.put<Configuration>(`/api/configuration`, configuration,\n      {\n        observe: 'body',\n        responseType: 'json'\n      }\n    );\n  }\n}\n","import { __decorate, __metadata, __param } from 'tslib';\nimport { TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, EventEmitter, Component, NgModule } from '@angular/core';\nimport DxLoadPanel from 'devextreme/ui/load_panel';\nimport { DxComponent, DxTemplateHost, WatcherHelper, NestedOptionHost, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\nimport { DxoAnimationModule, DxoHideModule, DxoShowModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule } from 'devextreme-angular/ui/nested';\n\n/*!\r\n * devextreme-angular\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\n/**\r\n * The LoadPanel is an overlay widget notifying the viewer that loading is in progress.\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'devextreme-angular/core';\nimport * as ɵngcc2 from '@angular/platform-browser';\nlet DxLoadPanelComponent = class DxLoadPanelComponent extends DxComponent {\r\n    constructor(elementRef, ngZone, templateHost, _watcherHelper, optionHost, transferState, platformId) {\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n        this._createEventEmitters([\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'hidden', emit: 'onHidden' },\r\n            { subscribe: 'hiding', emit: 'onHiding' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'showing', emit: 'onShowing' },\r\n            { subscribe: 'shown', emit: 'onShown' },\r\n            { emit: 'animationChange' },\r\n            { emit: 'closeOnOutsideClickChange' },\r\n            { emit: 'containerChange' },\r\n            { emit: 'deferRenderingChange' },\r\n            { emit: 'delayChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'indicatorSrcChange' },\r\n            { emit: 'maxHeightChange' },\r\n            { emit: 'maxWidthChange' },\r\n            { emit: 'messageChange' },\r\n            { emit: 'minHeightChange' },\r\n            { emit: 'minWidthChange' },\r\n            { emit: 'positionChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'shadingChange' },\r\n            { emit: 'shadingColorChange' },\r\n            { emit: 'showIndicatorChange' },\r\n            { emit: 'showPaneChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' }\r\n        ]);\r\n        optionHost.setHost(this);\r\n    }\r\n    /**\r\n     * Configures widget visibility animations. This object contains two fields: show and hide.\r\n     */\r\n    get animation() {\r\n        return this._getOption('animation');\r\n    }\r\n    set animation(value) {\r\n        this._setOption('animation', value);\r\n    }\r\n    /**\r\n     * Specifies whether to close the widget if a user clicks outside it.\r\n     */\r\n    get closeOnOutsideClick() {\r\n        return this._getOption('closeOnOutsideClick');\r\n    }\r\n    set closeOnOutsideClick(value) {\r\n        this._setOption('closeOnOutsideClick', value);\r\n    }\r\n    /**\r\n     * Specifies the widget's container.\r\n     */\r\n    get container() {\r\n        return this._getOption('container');\r\n    }\r\n    set container(value) {\r\n        this._setOption('container', value);\r\n    }\r\n    /**\r\n     * Specifies whether to render the widget's content when it is displayed. If false, the content is rendered immediately.\r\n     */\r\n    get deferRendering() {\r\n        return this._getOption('deferRendering');\r\n    }\r\n    set deferRendering(value) {\r\n        this._setOption('deferRendering', value);\r\n    }\r\n    /**\r\n     * The delay in milliseconds after which the load panel is displayed.\r\n     */\r\n    get delay() {\r\n        return this._getOption('delay');\r\n    }\r\n    set delay(value) {\r\n        this._setOption('delay', value);\r\n    }\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    get elementAttr() {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n    /**\r\n     * Specifies whether or not the widget can be focused.\r\n     */\r\n    get focusStateEnabled() {\r\n        return this._getOption('focusStateEnabled');\r\n    }\r\n    set focusStateEnabled(value) {\r\n        this._setOption('focusStateEnabled', value);\r\n    }\r\n    /**\r\n     * Specifies the widget's height in pixels.\r\n     */\r\n    get height() {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value) {\r\n        this._setOption('height', value);\r\n    }\r\n    /**\r\n     * Specifies text for a hint that appears when a user pauses on the widget.\r\n     */\r\n    get hint() {\r\n        return this._getOption('hint');\r\n    }\r\n    set hint(value) {\r\n        this._setOption('hint', value);\r\n    }\r\n    /**\r\n     * Specifies whether the widget changes its state when a user pauses on it.\r\n     */\r\n    get hoverStateEnabled() {\r\n        return this._getOption('hoverStateEnabled');\r\n    }\r\n    set hoverStateEnabled(value) {\r\n        this._setOption('hoverStateEnabled', value);\r\n    }\r\n    /**\r\n     * A URL pointing to an image to be used as a load indicator.\r\n     */\r\n    get indicatorSrc() {\r\n        return this._getOption('indicatorSrc');\r\n    }\r\n    set indicatorSrc(value) {\r\n        this._setOption('indicatorSrc', value);\r\n    }\r\n    /**\r\n     * Specifies the maximum height the widget can reach while resizing.\r\n     */\r\n    get maxHeight() {\r\n        return this._getOption('maxHeight');\r\n    }\r\n    set maxHeight(value) {\r\n        this._setOption('maxHeight', value);\r\n    }\r\n    /**\r\n     * Specifies the maximum width the widget can reach while resizing.\r\n     */\r\n    get maxWidth() {\r\n        return this._getOption('maxWidth');\r\n    }\r\n    set maxWidth(value) {\r\n        this._setOption('maxWidth', value);\r\n    }\r\n    /**\r\n     * Specifies the text displayed in the load panel. Ignored in the Material Design theme.\r\n     */\r\n    get message() {\r\n        return this._getOption('message');\r\n    }\r\n    set message(value) {\r\n        this._setOption('message', value);\r\n    }\r\n    /**\r\n     * Specifies the minimum height the widget can reach while resizing.\r\n     */\r\n    get minHeight() {\r\n        return this._getOption('minHeight');\r\n    }\r\n    set minHeight(value) {\r\n        this._setOption('minHeight', value);\r\n    }\r\n    /**\r\n     * Specifies the minimum width the widget can reach while resizing.\r\n     */\r\n    get minWidth() {\r\n        return this._getOption('minWidth');\r\n    }\r\n    set minWidth(value) {\r\n        this._setOption('minWidth', value);\r\n    }\r\n    /**\r\n     * Positions the widget.\r\n     */\r\n    get position() {\r\n        return this._getOption('position');\r\n    }\r\n    set position(value) {\r\n        this._setOption('position', value);\r\n    }\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    get rtlEnabled() {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n    /**\r\n     * Specifies whether to shade the background when the widget is active.\r\n     */\r\n    get shading() {\r\n        return this._getOption('shading');\r\n    }\r\n    set shading(value) {\r\n        this._setOption('shading', value);\r\n    }\r\n    /**\r\n     * Specifies the shading color.\r\n     */\r\n    get shadingColor() {\r\n        return this._getOption('shadingColor');\r\n    }\r\n    set shadingColor(value) {\r\n        this._setOption('shadingColor', value);\r\n    }\r\n    /**\r\n     * A Boolean value specifying whether or not to show a load indicator.\r\n     */\r\n    get showIndicator() {\r\n        return this._getOption('showIndicator');\r\n    }\r\n    set showIndicator(value) {\r\n        this._setOption('showIndicator', value);\r\n    }\r\n    /**\r\n     * A Boolean value specifying whether or not to show the pane behind the load indicator.\r\n     */\r\n    get showPane() {\r\n        return this._getOption('showPane');\r\n    }\r\n    set showPane(value) {\r\n        this._setOption('showPane', value);\r\n    }\r\n    /**\r\n     * A Boolean value specifying whether or not the widget is visible.\r\n     */\r\n    get visible() {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value) {\r\n        this._setOption('visible', value);\r\n    }\r\n    /**\r\n     * Specifies the widget's width in pixels.\r\n     */\r\n    get width() {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value) {\r\n        this._setOption('width', value);\r\n    }\r\n    _createInstance(element, options) {\r\n        return new DxLoadPanel(element, options);\r\n    }\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n};\nDxLoadPanelComponent.ɵfac = function DxLoadPanelComponent_Factory(t) { return new (t || DxLoadPanelComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DxTemplateHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.WatcherHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TransferState), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); };\nDxLoadPanelComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxLoadPanelComponent, selectors: [[\"dx-load-panel\"]], inputs: { animation: \"animation\", closeOnOutsideClick: \"closeOnOutsideClick\", container: \"container\", deferRendering: \"deferRendering\", delay: \"delay\", elementAttr: \"elementAttr\", focusStateEnabled: \"focusStateEnabled\", height: \"height\", hint: \"hint\", hoverStateEnabled: \"hoverStateEnabled\", indicatorSrc: \"indicatorSrc\", maxHeight: \"maxHeight\", maxWidth: \"maxWidth\", message: \"message\", minHeight: \"minHeight\", minWidth: \"minWidth\", position: \"position\", rtlEnabled: \"rtlEnabled\", shading: \"shading\", shadingColor: \"shadingColor\", showIndicator: \"showIndicator\", showPane: \"showPane\", visible: \"visible\", width: \"width\" }, outputs: { onContentReady: \"onContentReady\", onDisposing: \"onDisposing\", onHidden: \"onHidden\", onHiding: \"onHiding\", onInitialized: \"onInitialized\", onOptionChanged: \"onOptionChanged\", onShowing: \"onShowing\", onShown: \"onShown\", animationChange: \"animationChange\", closeOnOutsideClickChange: \"closeOnOutsideClickChange\", containerChange: \"containerChange\", deferRenderingChange: \"deferRenderingChange\", delayChange: \"delayChange\", elementAttrChange: \"elementAttrChange\", focusStateEnabledChange: \"focusStateEnabledChange\", heightChange: \"heightChange\", hintChange: \"hintChange\", hoverStateEnabledChange: \"hoverStateEnabledChange\", indicatorSrcChange: \"indicatorSrcChange\", maxHeightChange: \"maxHeightChange\", maxWidthChange: \"maxWidthChange\", messageChange: \"messageChange\", minHeightChange: \"minHeightChange\", minWidthChange: \"minWidthChange\", positionChange: \"positionChange\", rtlEnabledChange: \"rtlEnabledChange\", shadingChange: \"shadingChange\", shadingColorChange: \"shadingColorChange\", showIndicatorChange: \"showIndicatorChange\", showPaneChange: \"showPaneChange\", visibleChange: \"visibleChange\", widthChange: \"widthChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            DxTemplateHost,\n            WatcherHelper,\n            NestedOptionHost\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxLoadPanelComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\nDxLoadPanelComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: NgZone },\r\n    { type: DxTemplateHost },\r\n    { type: WatcherHelper },\r\n    { type: NestedOptionHost },\r\n    { type: TransferState },\r\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\r\n];\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxLoadPanelComponent.prototype, \"animation\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxLoadPanelComponent.prototype, \"closeOnOutsideClick\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxLoadPanelComponent.prototype, \"container\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [Boolean])\r\n], DxLoadPanelComponent.prototype, \"deferRendering\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number),\r\n    __metadata(\"design:paramtypes\", [Number])\r\n], DxLoadPanelComponent.prototype, \"delay\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxLoadPanelComponent.prototype, \"elementAttr\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [Boolean])\r\n], DxLoadPanelComponent.prototype, \"focusStateEnabled\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxLoadPanelComponent.prototype, \"height\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String),\r\n    __metadata(\"design:paramtypes\", [String])\r\n], DxLoadPanelComponent.prototype, \"hint\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [Boolean])\r\n], DxLoadPanelComponent.prototype, \"hoverStateEnabled\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String),\r\n    __metadata(\"design:paramtypes\", [String])\r\n], DxLoadPanelComponent.prototype, \"indicatorSrc\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxLoadPanelComponent.prototype, \"maxHeight\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxLoadPanelComponent.prototype, \"maxWidth\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String),\r\n    __metadata(\"design:paramtypes\", [String])\r\n], DxLoadPanelComponent.prototype, \"message\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxLoadPanelComponent.prototype, \"minHeight\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxLoadPanelComponent.prototype, \"minWidth\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxLoadPanelComponent.prototype, \"position\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [Boolean])\r\n], DxLoadPanelComponent.prototype, \"rtlEnabled\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [Boolean])\r\n], DxLoadPanelComponent.prototype, \"shading\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String),\r\n    __metadata(\"design:paramtypes\", [String])\r\n], DxLoadPanelComponent.prototype, \"shadingColor\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [Boolean])\r\n], DxLoadPanelComponent.prototype, \"showIndicator\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [Boolean])\r\n], DxLoadPanelComponent.prototype, \"showPane\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [Boolean])\r\n], DxLoadPanelComponent.prototype, \"visible\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxLoadPanelComponent.prototype, \"width\", null);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"onContentReady\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"onDisposing\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"onHidden\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"onHiding\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"onInitialized\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"onOptionChanged\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"onShowing\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"onShown\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"animationChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"closeOnOutsideClickChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"containerChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"deferRenderingChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"delayChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"elementAttrChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"focusStateEnabledChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"heightChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"hintChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"hoverStateEnabledChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"indicatorSrcChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"maxHeightChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"maxWidthChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"messageChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"minHeightChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"minWidthChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"positionChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"rtlEnabledChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"shadingChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"shadingColorChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"showIndicatorChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"showPaneChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"visibleChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxLoadPanelComponent.prototype, \"widthChange\", void 0);\r\nDxLoadPanelComponent = __decorate([ __param(6, Inject(PLATFORM_ID)),\r\n    __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost,\r\n        TransferState, Object])\r\n], DxLoadPanelComponent);\r\nlet DxLoadPanelModule = class DxLoadPanelModule {\r\n};\nDxLoadPanelModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxLoadPanelModule });\nDxLoadPanelModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxLoadPanelModule_Factory(t) { return new (t || DxLoadPanelModule)(); }, imports: [[\n            DxoAnimationModule,\n            DxoHideModule,\n            DxoShowModule,\n            DxoPositionModule,\n            DxoAtModule,\n            DxoBoundaryOffsetModule,\n            DxoCollisionModule,\n            DxoMyModule,\n            DxoOffsetModule,\n            DxIntegrationModule,\n            DxTemplateModule,\n            BrowserTransferStateModule\n        ],\n        DxoAnimationModule,\n        DxoHideModule,\n        DxoShowModule,\n        DxoPositionModule,\n        DxoAtModule,\n        DxoBoundaryOffsetModule,\n        DxoCollisionModule,\n        DxoMyModule,\n        DxoOffsetModule,\n        DxTemplateModule] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxLoadPanelComponent, [{\n        type: Component,\n        args: [{\n                selector: 'dx-load-panel',\n                template: '',\n                providers: [\n                    DxTemplateHost,\n                    WatcherHelper,\n                    NestedOptionHost\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.DxTemplateHost }, { type: ɵngcc1.WatcherHelper }, { type: ɵngcc1.NestedOptionHost }, { type: ɵngcc2.TransferState }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, { animation: [{\n            type: Input\n        }], closeOnOutsideClick: [{\n            type: Input\n        }], container: [{\n            type: Input\n        }], deferRendering: [{\n            type: Input\n        }], delay: [{\n            type: Input\n        }], elementAttr: [{\n            type: Input\n        }], focusStateEnabled: [{\n            type: Input\n        }], height: [{\n            type: Input\n        }], hint: [{\n            type: Input\n        }], hoverStateEnabled: [{\n            type: Input\n        }], indicatorSrc: [{\n            type: Input\n        }], maxHeight: [{\n            type: Input\n        }], maxWidth: [{\n            type: Input\n        }], message: [{\n            type: Input\n        }], minHeight: [{\n            type: Input\n        }], minWidth: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], rtlEnabled: [{\n            type: Input\n        }], shading: [{\n            type: Input\n        }], shadingColor: [{\n            type: Input\n        }], showIndicator: [{\n            type: Input\n        }], showPane: [{\n            type: Input\n        }], visible: [{\n            type: Input\n        }], width: [{\n            type: Input\n        }], onContentReady: [{\n            type: Output\n        }], onDisposing: [{\n            type: Output\n        }], onHidden: [{\n            type: Output\n        }], onHiding: [{\n            type: Output\n        }], onInitialized: [{\n            type: Output\n        }], onOptionChanged: [{\n            type: Output\n        }], onShowing: [{\n            type: Output\n        }], onShown: [{\n            type: Output\n        }], animationChange: [{\n            type: Output\n        }], closeOnOutsideClickChange: [{\n            type: Output\n        }], containerChange: [{\n            type: Output\n        }], deferRenderingChange: [{\n            type: Output\n        }], delayChange: [{\n            type: Output\n        }], elementAttrChange: [{\n            type: Output\n        }], focusStateEnabledChange: [{\n            type: Output\n        }], heightChange: [{\n            type: Output\n        }], hintChange: [{\n            type: Output\n        }], hoverStateEnabledChange: [{\n            type: Output\n        }], indicatorSrcChange: [{\n            type: Output\n        }], maxHeightChange: [{\n            type: Output\n        }], maxWidthChange: [{\n            type: Output\n        }], messageChange: [{\n            type: Output\n        }], minHeightChange: [{\n            type: Output\n        }], minWidthChange: [{\n            type: Output\n        }], positionChange: [{\n            type: Output\n        }], rtlEnabledChange: [{\n            type: Output\n        }], shadingChange: [{\n            type: Output\n        }], shadingColorChange: [{\n            type: Output\n        }], showIndicatorChange: [{\n            type: Output\n        }], showPaneChange: [{\n            type: Output\n        }], visibleChange: [{\n            type: Output\n        }], widthChange: [{\n            type: Output\n        }] }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxLoadPanelModule, { declarations: function () { return [DxLoadPanelComponent]; }, imports: function () { return [DxoAnimationModule,\n        DxoHideModule,\n        DxoShowModule,\n        DxoPositionModule,\n        DxoAtModule,\n        DxoBoundaryOffsetModule,\n        DxoCollisionModule,\n        DxoMyModule,\n        DxoOffsetModule,\n        DxIntegrationModule,\n        DxTemplateModule,\n        BrowserTransferStateModule]; }, exports: function () { return [DxLoadPanelComponent,\n        DxoAnimationModule,\n        DxoHideModule,\n        DxoShowModule,\n        DxoPositionModule,\n        DxoAtModule,\n        DxoBoundaryOffsetModule,\n        DxoCollisionModule,\n        DxoMyModule,\n        DxoOffsetModule,\n        DxTemplateModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxLoadPanelModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    DxoAnimationModule,\n                    DxoHideModule,\n                    DxoShowModule,\n                    DxoPositionModule,\n                    DxoAtModule,\n                    DxoBoundaryOffsetModule,\n                    DxoCollisionModule,\n                    DxoMyModule,\n                    DxoOffsetModule,\n                    DxIntegrationModule,\n                    DxTemplateModule,\n                    BrowserTransferStateModule\n                ],\n                declarations: [\n                    DxLoadPanelComponent\n                ],\n                exports: [\n                    DxLoadPanelComponent,\n                    DxoAnimationModule,\n                    DxoHideModule,\n                    DxoShowModule,\n                    DxoPositionModule,\n                    DxoAtModule,\n                    DxoBoundaryOffsetModule,\n                    DxoCollisionModule,\n                    DxoMyModule,\n                    DxoOffsetModule,\n                    DxTemplateModule\n                ]\n            }]\n    }], null, null); })();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DxLoadPanelComponent, DxLoadPanelModule };\n\n//# sourceMappingURL=devextreme-angular-ui-load-panel.js.map","<ng-container *ngIf=\"configuration\">\n  <dx-form [formData]=\"configuration\">\n    <dxi-item itemType=\"tabbed\" [tabPanelOptions]=\"{ deferRendering: false }\">\n      <dxi-tab title=\"Общие настройки\">\n\n        <dxi-item itemType='group' caption='AMI подключение'>\n\n          <dxi-item dataField=\"AMI_server\">\n            <dxo-label text=\"Сервер\"></dxo-label>\n          </dxi-item>\n          <dxi-item dataField=\"AMI_username\">\n            <dxo-label text=\"Имя пользователя\"></dxo-label>\n          </dxi-item>\n          <dxi-item dataField=\"AMI_password\">\n            <dxo-label text=\"Пароль\"></dxo-label>\n          </dxi-item>\n          <dxi-item dataField=\"AMI_port\">\n            <dxo-label text=\"Порт\"></dxo-label>\n          </dxi-item>\n        </dxi-item>\n\n        <dxi-item itemType='group' caption='Интеграция'>\n\n          <dxi-item dataField=\"authKey\">\n            <dxo-label text=\"Ключ авторизации\"></dxo-label>\n          </dxi-item>\n          <dxi-item dataField=\"baseUrl\">\n            <dxo-label text=\"Базовый адрес\"></dxo-label>\n          </dxi-item>\n          <dxi-item dataField=\"defaultResponsibles\">\n            <dxo-label text=\"Ответственный по умолчанию\"></dxo-label>\n          </dxi-item>\n        </dxi-item>\n\n        <dxi-item itemType='group' caption='Другие'>\n\n          <dxi-item dataField=\"uniqueFieldName\">\n            <dxo-label text=\"Поле уникального идентификатора звонка\"></dxo-label>\n          </dxi-item>\n        </dxi-item>\n\n      </dxi-tab>\n    </dxi-item>\n  </dx-form>\n\n  <dx-button\n    text=\"Сохранить\"\n    (onClick)=\"save()\">\n  </dx-button>\n</ng-container>\n\n<dx-load-panel [visible]=\"loadingVisible\"\n               shadingColor=\"rgba(0,0,0,0.3)\"></dx-load-panel>\n","import { Component, OnInit } from '@angular/core';\nimport {ConfigurationService} from '../../@core/services/configuration.service';\nimport {Configuration} from '../../@core/models/configuration.model';\nimport notify from 'devextreme/ui/notify';\n\n@Component({\n  selector: 'app-configuration',\n  templateUrl: './configuration.component.html',\n  styleUrls: ['./configuration.component.scss']\n})\nexport class ConfigurationComponent implements OnInit {\n  titleEvents: string[] = [\n    'Hangup',\n    'Newstate',\n    'Dial',\n    'Newexten',\n    'NewCallerid',\n    'Newchannel'\n  ];\n  titleFields: string[] = [\n    'Event',\n    'Privilege',\n    'Channel',\n    'ChannelState',\n    'ChannelStateDesc',\n    'CallerIDNum',\n    'CallerIDName',\n    'ConnectedLineNum',\n    'ConnectedLineName',\n    'Language',\n    'AccountCode',\n    'Context',\n    'Exten',\n    'Priority',\n    'Uniqueid',\n    'Linkedid',\n    'Cause'\n  ];\n  configuration: Configuration;\n  loadingVisible = false;\n  constructor(protected configurationService: ConfigurationService) { }\n\n  ngOnInit() {\n    this.configurationService.get().subscribe(configurations => {\n      console.log(configurations);\n      this.configuration = configurations[0];\n    });\n  }\n\n  save() {\n      this.loadingVisible = true;\n      this.configurationService.save(this.configuration).subscribe(res => {\n        notify('Конфигурация успешно обновлена');\n        this.loadingVisible = false;\n      }, error => {\n        this.loadingVisible = false;\n        notify(error.message, 'error');\n        throw new Error(error);\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {ConfigurationVariable} from '../models/configurationVariable.model';\nimport {Observable} from 'rxjs';\nimport {HttpClient, HttpEvent, HttpHeaders, HttpResponse} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigurationVariableService {\n\n  public defaultHeaders = new HttpHeaders();\n\n  constructor(private httpClient: HttpClient) { }\n\n  public get(observe?: 'body', reportProgress?: boolean): Observable<ConfigurationVariable[]>;\n  public get(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<ConfigurationVariable[]>>;\n  public get(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<ConfigurationVariable[]>>;\n  public get(observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n    const headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'application/json',\n      'text/json',\n      'application/xml',\n      'text/xml'\n    ];\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<ConfigurationVariable[]>(`/api/configuration/variables`,\n      {\n        headers: headers,\n        observe: observe,\n        reportProgress: reportProgress\n      }\n    );\n  }\n\n  public add(configurationVariable: ConfigurationVariable): Observable<ConfigurationVariable> {\n\n    const headers = this.defaultHeaders;\n\n    return this.httpClient.post<ConfigurationVariable>(`/api/configuration/variables`, configurationVariable,\n      {\n        observe: 'body',\n        responseType: 'json'\n      }\n    );\n  }\n\n  public update(configurationVariable: ConfigurationVariable): Observable<ConfigurationVariable> {\n\n    const headers = this.defaultHeaders;\n\n    return this.httpClient.put<ConfigurationVariable>(`/api/configuration/variables`, configurationVariable,\n      {\n        observe: 'body',\n        responseType: 'json'\n      }\n    );\n  }\n}\n","import { __decorate, __metadata, __param } from 'tslib';\nimport { TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, EventEmitter, Component, NgModule } from '@angular/core';\nimport DxScrollView from 'devextreme/ui/scroll_view';\nimport { DxComponent, DxTemplateHost, WatcherHelper, NestedOptionHost, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\n\n/*!\r\n * devextreme-angular\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\n/**\r\n * The ScrollView is a widget that enables a user to scroll its content.\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'devextreme-angular/core';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nconst _c0 = [\"*\"];\nlet DxScrollViewComponent = class DxScrollViewComponent extends DxComponent {\r\n    constructor(elementRef, ngZone, templateHost, _watcherHelper, optionHost, transferState, platformId) {\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n        this._createEventEmitters([\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'pullDown', emit: 'onPullDown' },\r\n            { subscribe: 'reachBottom', emit: 'onReachBottom' },\r\n            { subscribe: 'scroll', emit: 'onScroll' },\r\n            { subscribe: 'updated', emit: 'onUpdated' },\r\n            { emit: 'bounceEnabledChange' },\r\n            { emit: 'directionChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'pulledDownTextChange' },\r\n            { emit: 'pullingDownTextChange' },\r\n            { emit: 'reachBottomTextChange' },\r\n            { emit: 'refreshingTextChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'scrollByContentChange' },\r\n            { emit: 'scrollByThumbChange' },\r\n            { emit: 'showScrollbarChange' },\r\n            { emit: 'useNativeChange' },\r\n            { emit: 'widthChange' }\r\n        ]);\r\n        optionHost.setHost(this);\r\n    }\r\n    /**\r\n     * A Boolean value specifying whether to enable or disable the bounce-back effect.\r\n     */\r\n    get bounceEnabled() {\r\n        return this._getOption('bounceEnabled');\r\n    }\r\n    set bounceEnabled(value) {\r\n        this._setOption('bounceEnabled', value);\r\n    }\r\n    /**\r\n     * A string value specifying the available scrolling directions.\r\n     */\r\n    get direction() {\r\n        return this._getOption('direction');\r\n    }\r\n    set direction(value) {\r\n        this._setOption('direction', value);\r\n    }\r\n    /**\r\n     * A Boolean value specifying whether or not the widget can respond to user interaction.\r\n     */\r\n    get disabled() {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value) {\r\n        this._setOption('disabled', value);\r\n    }\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    get elementAttr() {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n    /**\r\n     * Specifies the widget's height.\r\n     */\r\n    get height() {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value) {\r\n        this._setOption('height', value);\r\n    }\r\n    /**\r\n     * Specifies the text shown in the pullDown panel when pulling the content down lowers the refresh threshold.\r\n     */\r\n    get pulledDownText() {\r\n        return this._getOption('pulledDownText');\r\n    }\r\n    set pulledDownText(value) {\r\n        this._setOption('pulledDownText', value);\r\n    }\r\n    /**\r\n     * Specifies the text shown in the pullDown panel while pulling the content down to the refresh threshold.\r\n     */\r\n    get pullingDownText() {\r\n        return this._getOption('pullingDownText');\r\n    }\r\n    set pullingDownText(value) {\r\n        this._setOption('pullingDownText', value);\r\n    }\r\n    /**\r\n     * Specifies the text shown in the pullDown panel displayed when content is scrolled to the bottom.\r\n     */\r\n    get reachBottomText() {\r\n        return this._getOption('reachBottomText');\r\n    }\r\n    set reachBottomText(value) {\r\n        this._setOption('reachBottomText', value);\r\n    }\r\n    /**\r\n     * Specifies the text shown in the pullDown panel displayed when the content is being refreshed.\r\n     */\r\n    get refreshingText() {\r\n        return this._getOption('refreshingText');\r\n    }\r\n    set refreshingText(value) {\r\n        this._setOption('refreshingText', value);\r\n    }\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    get rtlEnabled() {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n    /**\r\n     * A Boolean value specifying whether or not an end-user can scroll the widget content swiping it up or down. Applies only if useNative is false\r\n     */\r\n    get scrollByContent() {\r\n        return this._getOption('scrollByContent');\r\n    }\r\n    set scrollByContent(value) {\r\n        this._setOption('scrollByContent', value);\r\n    }\r\n    /**\r\n     * A Boolean value specifying whether or not an end-user can scroll the widget content using the scrollbar.\r\n     */\r\n    get scrollByThumb() {\r\n        return this._getOption('scrollByThumb');\r\n    }\r\n    set scrollByThumb(value) {\r\n        this._setOption('scrollByThumb', value);\r\n    }\r\n    /**\r\n     * Specifies when the widget shows the scrollbar.\r\n     */\r\n    get showScrollbar() {\r\n        return this._getOption('showScrollbar');\r\n    }\r\n    set showScrollbar(value) {\r\n        this._setOption('showScrollbar', value);\r\n    }\r\n    /**\r\n     * Indicates whether to use native or simulated scrolling.\r\n     */\r\n    get useNative() {\r\n        return this._getOption('useNative');\r\n    }\r\n    set useNative(value) {\r\n        this._setOption('useNative', value);\r\n    }\r\n    /**\r\n     * Specifies the widget's width.\r\n     */\r\n    get width() {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value) {\r\n        this._setOption('width', value);\r\n    }\r\n    _createInstance(element, options) {\r\n        return new DxScrollView(element, options);\r\n    }\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n};\nDxScrollViewComponent.ɵfac = function DxScrollViewComponent_Factory(t) { return new (t || DxScrollViewComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DxTemplateHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.WatcherHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TransferState), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); };\nDxScrollViewComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxScrollViewComponent, selectors: [[\"dx-scroll-view\"]], inputs: { bounceEnabled: \"bounceEnabled\", direction: \"direction\", disabled: \"disabled\", elementAttr: \"elementAttr\", height: \"height\", pulledDownText: \"pulledDownText\", pullingDownText: \"pullingDownText\", reachBottomText: \"reachBottomText\", refreshingText: \"refreshingText\", rtlEnabled: \"rtlEnabled\", scrollByContent: \"scrollByContent\", scrollByThumb: \"scrollByThumb\", showScrollbar: \"showScrollbar\", useNative: \"useNative\", width: \"width\" }, outputs: { onDisposing: \"onDisposing\", onInitialized: \"onInitialized\", onOptionChanged: \"onOptionChanged\", onPullDown: \"onPullDown\", onReachBottom: \"onReachBottom\", onScroll: \"onScroll\", onUpdated: \"onUpdated\", bounceEnabledChange: \"bounceEnabledChange\", directionChange: \"directionChange\", disabledChange: \"disabledChange\", elementAttrChange: \"elementAttrChange\", heightChange: \"heightChange\", pulledDownTextChange: \"pulledDownTextChange\", pullingDownTextChange: \"pullingDownTextChange\", reachBottomTextChange: \"reachBottomTextChange\", refreshingTextChange: \"refreshingTextChange\", rtlEnabledChange: \"rtlEnabledChange\", scrollByContentChange: \"scrollByContentChange\", scrollByThumbChange: \"scrollByThumbChange\", showScrollbarChange: \"showScrollbarChange\", useNativeChange: \"useNativeChange\", widthChange: \"widthChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            DxTemplateHost,\n            WatcherHelper,\n            NestedOptionHost\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function DxScrollViewComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2 });\r\nDxScrollViewComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: NgZone },\r\n    { type: DxTemplateHost },\r\n    { type: WatcherHelper },\r\n    { type: NestedOptionHost },\r\n    { type: TransferState },\r\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\r\n];\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [Boolean])\r\n], DxScrollViewComponent.prototype, \"bounceEnabled\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String),\r\n    __metadata(\"design:paramtypes\", [String])\r\n], DxScrollViewComponent.prototype, \"direction\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [Boolean])\r\n], DxScrollViewComponent.prototype, \"disabled\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxScrollViewComponent.prototype, \"elementAttr\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxScrollViewComponent.prototype, \"height\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String),\r\n    __metadata(\"design:paramtypes\", [String])\r\n], DxScrollViewComponent.prototype, \"pulledDownText\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String),\r\n    __metadata(\"design:paramtypes\", [String])\r\n], DxScrollViewComponent.prototype, \"pullingDownText\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String),\r\n    __metadata(\"design:paramtypes\", [String])\r\n], DxScrollViewComponent.prototype, \"reachBottomText\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String),\r\n    __metadata(\"design:paramtypes\", [String])\r\n], DxScrollViewComponent.prototype, \"refreshingText\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [Boolean])\r\n], DxScrollViewComponent.prototype, \"rtlEnabled\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [Boolean])\r\n], DxScrollViewComponent.prototype, \"scrollByContent\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [Boolean])\r\n], DxScrollViewComponent.prototype, \"scrollByThumb\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String),\r\n    __metadata(\"design:paramtypes\", [String])\r\n], DxScrollViewComponent.prototype, \"showScrollbar\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [Boolean])\r\n], DxScrollViewComponent.prototype, \"useNative\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxScrollViewComponent.prototype, \"width\", null);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxScrollViewComponent.prototype, \"onDisposing\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxScrollViewComponent.prototype, \"onInitialized\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxScrollViewComponent.prototype, \"onOptionChanged\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxScrollViewComponent.prototype, \"onPullDown\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxScrollViewComponent.prototype, \"onReachBottom\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxScrollViewComponent.prototype, \"onScroll\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxScrollViewComponent.prototype, \"onUpdated\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxScrollViewComponent.prototype, \"bounceEnabledChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxScrollViewComponent.prototype, \"directionChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxScrollViewComponent.prototype, \"disabledChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxScrollViewComponent.prototype, \"elementAttrChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxScrollViewComponent.prototype, \"heightChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxScrollViewComponent.prototype, \"pulledDownTextChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxScrollViewComponent.prototype, \"pullingDownTextChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxScrollViewComponent.prototype, \"reachBottomTextChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxScrollViewComponent.prototype, \"refreshingTextChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxScrollViewComponent.prototype, \"rtlEnabledChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxScrollViewComponent.prototype, \"scrollByContentChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxScrollViewComponent.prototype, \"scrollByThumbChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxScrollViewComponent.prototype, \"showScrollbarChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxScrollViewComponent.prototype, \"useNativeChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxScrollViewComponent.prototype, \"widthChange\", void 0);\r\nDxScrollViewComponent = __decorate([ __param(6, Inject(PLATFORM_ID)),\r\n    __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost,\r\n        TransferState, Object])\r\n], DxScrollViewComponent);\r\nlet DxScrollViewModule = class DxScrollViewModule {\r\n};\nDxScrollViewModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxScrollViewModule });\nDxScrollViewModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxScrollViewModule_Factory(t) { return new (t || DxScrollViewModule)(); }, imports: [[\n            DxIntegrationModule,\n            DxTemplateModule,\n            BrowserTransferStateModule\n        ],\n        DxTemplateModule] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxScrollViewComponent, [{\n        type: Component,\n        args: [{\n                selector: 'dx-scroll-view',\n                template: '<ng-content></ng-content>',\n                providers: [\n                    DxTemplateHost,\n                    WatcherHelper,\n                    NestedOptionHost\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.DxTemplateHost }, { type: ɵngcc1.WatcherHelper }, { type: ɵngcc1.NestedOptionHost }, { type: ɵngcc2.TransferState }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, { bounceEnabled: [{\n            type: Input\n        }], direction: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], elementAttr: [{\n            type: Input\n        }], height: [{\n            type: Input\n        }], pulledDownText: [{\n            type: Input\n        }], pullingDownText: [{\n            type: Input\n        }], reachBottomText: [{\n            type: Input\n        }], refreshingText: [{\n            type: Input\n        }], rtlEnabled: [{\n            type: Input\n        }], scrollByContent: [{\n            type: Input\n        }], scrollByThumb: [{\n            type: Input\n        }], showScrollbar: [{\n            type: Input\n        }], useNative: [{\n            type: Input\n        }], width: [{\n            type: Input\n        }], onDisposing: [{\n            type: Output\n        }], onInitialized: [{\n            type: Output\n        }], onOptionChanged: [{\n            type: Output\n        }], onPullDown: [{\n            type: Output\n        }], onReachBottom: [{\n            type: Output\n        }], onScroll: [{\n            type: Output\n        }], onUpdated: [{\n            type: Output\n        }], bounceEnabledChange: [{\n            type: Output\n        }], directionChange: [{\n            type: Output\n        }], disabledChange: [{\n            type: Output\n        }], elementAttrChange: [{\n            type: Output\n        }], heightChange: [{\n            type: Output\n        }], pulledDownTextChange: [{\n            type: Output\n        }], pullingDownTextChange: [{\n            type: Output\n        }], reachBottomTextChange: [{\n            type: Output\n        }], refreshingTextChange: [{\n            type: Output\n        }], rtlEnabledChange: [{\n            type: Output\n        }], scrollByContentChange: [{\n            type: Output\n        }], scrollByThumbChange: [{\n            type: Output\n        }], showScrollbarChange: [{\n            type: Output\n        }], useNativeChange: [{\n            type: Output\n        }], widthChange: [{\n            type: Output\n        }] }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxScrollViewModule, { declarations: function () { return [DxScrollViewComponent]; }, imports: function () { return [DxIntegrationModule,\n        DxTemplateModule,\n        BrowserTransferStateModule]; }, exports: function () { return [DxScrollViewComponent,\n        DxTemplateModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxScrollViewModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    DxIntegrationModule,\n                    DxTemplateModule,\n                    BrowserTransferStateModule\n                ],\n                declarations: [\n                    DxScrollViewComponent\n                ],\n                exports: [\n                    DxScrollViewComponent,\n                    DxTemplateModule\n                ]\n            }]\n    }], null, null); })();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DxScrollViewComponent, DxScrollViewModule };\n\n//# sourceMappingURL=devextreme-angular-ui-scroll-view.js.map","export class ConfigurationVariable {\n  id: number | undefined\n  createdAt: Date;\n  updatedAt: Date;\n  title: string;\n  requestUrl: string;\n  requestBody: string;\n  response: number;\n  sourceFieldName: string;\n  sourceFieldValue: string;\n  sourceFieldName2: string;\n  sourceFieldValue2: string;\n  sourceField: string;\n  constructor() {\n    this.id = undefined;\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ConfigurationVariable} from '../../../@core/models/configurationVariable.model';\nimport {ConfigurationVariableService} from '../../../@core/services/configurationVariable.service';\n\n@Component({\n  selector: 'app-configuration-variable-form',\n  templateUrl: './configuration-variable-form.component.html',\n  styleUrls: ['./configuration-variable-form.component.scss']\n})\nexport class ConfigurationVariableFormComponent implements OnInit {\n  @Input() configurationVariable: ConfigurationVariable;\n  @Output() apply = new EventEmitter();\n  constructor(private configurationVariableService: ConfigurationVariableService) { }\n\n  ngOnInit() {\n    if (!this.configurationVariable) {\n      this.configurationVariable = new ConfigurationVariable();\n    }\n\n  }\n\n  save() {\n      console.log(this.configurationVariable);\n      if (this.configurationVariable.id > 0) {\n        this.configurationVariableService.update(this.configurationVariable).subscribe(res => {\n          this.apply.emit(this.configurationVariable);\n        }, err => {\n          console.error(err);\n        });\n      } else {\n        this.configurationVariableService.add(this.configurationVariable).subscribe(res => {\n          console.log(res);\n          this.apply.emit(this.configurationVariable);\n        }, err => {\n          console.error(err);\n        });\n      }\n  }\n}\n","<nb-card>\n  <nb-card-body>\n    <dx-data-grid\n      id=\"gridContainer\"\n      [dataSource]=\"configurationVariables\"\n      [showBorders]=\"true\">\n      <dxo-paging [pageSize]=\"10\"></dxo-paging>\n      <dxo-search-panel [visible]=\"true\"></dxo-search-panel>\n      <dxo-pager\n        [showPageSizeSelector]=\"true\"\n        [allowedPageSizes]=\"[5, 10, 20]\"\n        [showInfo]=\"true\">\n      </dxo-pager>\n\n      <dxi-column dataField=\"title\"></dxi-column>\n      <dxi-column dataField=\"requestUrl\"></dxi-column>\n      <dxi-column dataField=\"buttonEdit\" caption=\"\" width=\"150\" cellTemplate=\"cellButtonEditTemplate\"></dxi-column>\n\n      <div *dxTemplate=\"let data of 'cellButtonEditTemplate'\">\n        <dx-button class=\"otstup\" icon=\"edit\" (click)=\"edit(data.data)\"></dx-button>\n      </div>\n\n    </dx-data-grid>\n  </nb-card-body>\n  <nb-card-footer>\n    <dx-button stylingMode=\"contained\"\n               type=\"success\"\n               text=\"Добавить\"\n               (click)=\"add()\">\n    </dx-button>\n  </nb-card-footer>\n</nb-card>\n\n\n<dx-popup title=\"Переменная\"\n          [(visible)]=\"popupVisible\">\n  <div *dxTemplate=\"let data of 'content'\">\n    <dx-scroll-view>\n      <app-configuration-variable-form [configurationVariable]=\"configurationVariable\"\n        (apply)=\"save($event)\">\n\n      </app-configuration-variable-form>\n    </dx-scroll-view>\n  </div>\n</dx-popup>\n","<nb-card>\n  <nb-card-body>\n    <dx-form [formData]=\"configurationVariable\" colCount=\"1\">\n\n      <dxi-item itemType='group' caption='Общие настройки'>\n\n        <dxi-item dataField=\"title\">\n          <dxo-label text=\"Наименование\"></dxo-label>\n        </dxi-item>\n\n        <dxi-item dataField=\"requestUrl\">\n          <dxo-label text=\"Запрос\"></dxo-label>\n        </dxi-item>\n\n        <dxi-item dataField=\"requestBody\" editorType=\"dxTextArea\">\n          <dxo-label text=\"Тело запроса\"></dxo-label>\n        </dxi-item>\n\n      </dxi-item>\n\n      <dxi-item itemType='group' caption='Источник'>\n\n        <dxi-item dataField=\"sourceFieldName\">\n          <dxo-label text=\"Наименование поле\"></dxo-label>\n        </dxi-item>\n\n        <dxi-item dataField=\"sourceFieldValue\">\n          <dxo-label text=\"Значение\"></dxo-label>\n        </dxi-item>\n\n        <dxi-item dataField=\"sourceFieldName2\">\n          <dxo-label text=\"Наименование поле2\"></dxo-label>\n        </dxi-item>\n\n        <dxi-item dataField=\"sourceFieldValue2\">\n          <dxo-label text=\"Значение2\"></dxo-label>\n        </dxi-item>\n\n        <dxi-item dataField=\"sourceField\">\n          <dxo-label text=\"Поле источник\"></dxo-label>\n        </dxi-item>\n\n      </dxi-item>\n\n\n    </dx-form>\n\n  </nb-card-body>\n  <nb-card-footer>\n    <dx-button stylingMode=\"contained\"\n               type=\"success\"\n               text=\"Сохранить\"\n               (click)=\"save()\">\n    </dx-button>\n  </nb-card-footer>\n</nb-card>\n","import { Component, OnInit } from '@angular/core';\nimport {ConfigurationVariable} from '../../@core/models/configurationVariable.model';\nimport {ConfigurationVariableService} from '../../@core/services/configurationVariable.service';\n\n@Component({\n  selector: 'app-configuration-variable',\n  templateUrl: './configuration-variable.component.html',\n  styleUrls: ['./configuration-variable.component.scss']\n})\nexport class ConfigurationVariableComponent implements OnInit {\n  configurationVariables: ConfigurationVariable[];\n  popupVisible = false;\n  configurationVariable: ConfigurationVariable;\n  constructor(private configurationVariableService: ConfigurationVariableService) { }\n\n  ngOnInit() {\n    this.configurationVariableService.get().subscribe(configurationVariables => {\n      if (configurationVariables === null) {\n        return;\n      }\n      console.log(configurationVariables);\n      this.configurationVariables = configurationVariables;\n    });\n  }\n\n  add() {\n    this.popupVisible = true;\n  }\n\n  save($event: ConfigurationVariable) {\n    console.log($event);\n    this.popupVisible = false;\n  }\n\n  edit(data: any) {\n    console.log(data);\n    this.configurationVariable = data;\n    this.popupVisible = true;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Configuration} from '../../@core/models/configuration.model';\nimport {ConfigurationService} from '../../@core/services/configuration.service';\nimport notify from 'devextreme/ui/notify';\n\n@Component({\n  selector: 'app-configuration-callback',\n  templateUrl: './configuration-callback.component.html',\n  styleUrls: ['./configuration-callback.component.scss']\n})\nexport class ConfigurationCallbackComponent implements OnInit {\n  configuration: Configuration;\n\n  constructor(private configurationService: ConfigurationService) { }\n\n  ngOnInit() {\n    this.configurationService.get().subscribe(configurations => {\n      if (configurations === null) {\n        return;\n      }\n      this.configuration = configurations[0];\n    });\n  }\n\n  save() {\n    this.configurationService.save(this.configuration).subscribe(res => {\n      notify('Конфигурация успешна обновллена');\n    }, error => {\n      console.error(error);\n      notify(error.messsage, 'error');\n    });\n  }\n}\n","<nb-card>\n  <nb-card-body>\n    <dx-form [formData]=\"configuration\" colCount=\"1\">\n\n      <dxi-item dataField=\"callbackTimeout\">\n        <dxo-label text=\"Время ожидания звонка\"></dxo-label>\n      </dxi-item>\n\n      <dxi-item dataField=\"callbackContext\">\n        <dxo-label text=\"Контекст\"></dxo-label>\n      </dxi-item>\n\n    </dx-form>\n\n  </nb-card-body>\n  <nb-card-footer>\n    <dx-button stylingMode=\"contained\"\n               type=\"success\"\n               text=\"Сохранить\"\n               (click)=\"save()\">\n    </dx-button>\n  </nb-card-footer>\n</nb-card>\n","<ng-container *ngIf=\"configuration\">\n  <dx-form [formData]=\"configuration\">\n    <dxi-item itemType=\"tabbed\" [tabPanelOptions]=\"{ deferRendering: false }\">\n      <dxi-tab title=\"Привязка событий\">\n\n        <dxi-item itemType=\"group\">\n          <dxo-col-count-by-screen\n            [xs]=\"1\"\n            [sm]=\"2\"\n            [md]='3'\n            [lg]='3'>\n          </dxo-col-count-by-screen>\n\n\n          <dxi-item itemType=\"group\"  caption=\"Событие поступления звонка\">\n            <dxi-item dataField=\"incomingStartCallEvent\" editorType=\"dxSelectBox\" [editorOptions]=\"{ dataSource: titleEvents }\">\n              <dxo-label text=\"Событие\"></dxo-label>\n            </dxi-item>\n            <dxi-item dataField=\"incomingStartCallField\" editorType=\"dxSelectBox\" [editorOptions]=\"{ dataSource: titleFields }\">\n              <dxo-label text=\"Поле\"></dxo-label>\n            </dxi-item>\n            <dxi-item dataField=\"incomingStartCallValue\">\n              <dxo-label text=\"Значение\"></dxo-label>\n            </dxi-item>\n\n            <dxi-item itemType=\"group\" caption=\"Дополнительное поле\">\n              <dxi-item dataField=\"incomingStartCallField2\" editorType=\"dxSelectBox\" [editorOptions]=\"{ dataSource: titleFields }\">\n                <dxo-label text=\"Поле\"></dxo-label>\n              </dxi-item>\n              <dxi-item dataField=\"incomingStartCallValue2\">\n                <dxo-label text=\"Значение\"></dxo-label>\n              </dxi-item>\n            </dxi-item>\n\n          </dxi-item>\n\n\n          <dxi-item itemType=\"group\" caption=\"Событие отвеченного звонка\">\n            <dxi-item dataField=\"incomingAnswerCallEvent\"  editorType=\"dxSelectBox\" [editorOptions]=\"{ dataSource: titleEvents }\">\n              <dxo-label text=\"Событие\"></dxo-label>\n            </dxi-item>\n            <dxi-item dataField=\"incomingAnswerCallField\" editorType=\"dxSelectBox\" [editorOptions]=\"{ dataSource: titleFields }\">\n              <dxo-label text=\"Поле\"></dxo-label>\n            </dxi-item>\n            <dxi-item dataField=\"incomingAnswerCallValue\">\n              <dxo-label text=\"Значение\"></dxo-label>\n            </dxi-item>\n\n            <dxi-item itemType=\"group\" caption=\"Дополнительное поле\">\n              <dxi-item dataField=\"incomingAnswerCallField2\" editorType=\"dxSelectBox\" [editorOptions]=\"{ dataSource: titleFields }\">\n                <dxo-label text=\"Поле\"></dxo-label>\n              </dxi-item>\n              <dxi-item dataField=\"incomingAnswerCallValue2\">\n                <dxo-label text=\"Значение\"></dxo-label>\n              </dxi-item>\n            </dxi-item>\n\n\n          </dxi-item>\n\n          <dxi-item itemType=\"group\" caption=\"Событие завершения звонка\">\n            <dxi-item dataField=\"incomingEndCallEvent\" editorType=\"dxSelectBox\" [editorOptions]=\"{ dataSource: titleEvents}\">\n              <dxo-label text=\"Событие\"></dxo-label>\n            </dxi-item>\n            <dxi-item dataField=\"incomingEndCallField\" editorType=\"dxSelectBox\" [editorOptions]=\"{ dataSource: titleFields }\">\n              <dxo-label text=\"Поле\"></dxo-label>\n            </dxi-item>\n            <dxi-item dataField=\"incomingEndCallValue\">\n              <dxo-label text=\"Значение\"></dxo-label>\n            </dxi-item>\n\n            <dxi-item itemType=\"group\" caption=\"Дополнительное поле\">\n              <dxi-item dataField=\"incomingEndCallField2\" editorType=\"dxSelectBox\" [editorOptions]=\"{ dataSource: titleFields }\">\n                <dxo-label text=\"Поле\"></dxo-label>\n              </dxi-item>\n              <dxi-item dataField=\"incomingEndCallValue2\">\n                <dxo-label text=\"Значение\"></dxo-label>\n              </dxi-item>\n            </dxi-item>\n\n          </dxi-item>\n\n        </dxi-item>\n\n\n      </dxi-tab>\n    </dxi-item>\n  </dx-form>\n\n  <dx-button\n    text=\"Сохранить\"\n    (onClick)=\"save()\">\n  </dx-button>\n</ng-container>\n\n<h5>Создаваемые переменные по событиям</h5>\n<p>\n  <code>CALL_STARTED</code> - Поступление звонка<br/>\n  <code>CALL_END</code> - Окончание обработки звонка<br/>\n  <code>CALL_LOST</code> - Звонок пропущен<br/>\n  <code>CALL_FINISHED</code> - Завершение разговора<br/>\n</p>\n<p>\n  Данные переменные можно использоватья для привязки действий (HTTP  запросы) и в теле запроса <code>@CALL_STARTED</code>\n</p>\n\n<dx-load-panel [visible]=\"loadingVisible\"\n               shadingColor=\"rgba(0,0,0,0.3)\"></dx-load-panel>\n","import { Component, OnInit } from '@angular/core';\nimport {Configuration} from '../../@core/models/configuration.model';\nimport {ConfigurationService} from '../../@core/services/configuration.service';\nimport notify from 'devextreme/ui/notify';\n\n@Component({\n  selector: 'app-configuration-event-binding',\n  templateUrl: './configuration-event-binding.component.html',\n  styleUrls: ['./configuration-event-binding.component.scss']\n})\nexport class ConfigurationEventBindingComponent implements OnInit {\n  titleEvents: string[] = [\n    'Hangup',\n    'Newstate',\n    'Dial',\n    'Newexten',\n    'NewCallerid',\n    'Newchannel'\n  ];\n  titleFields: string[] = [\n    'Event',\n    'Privilege',\n    'Channel',\n    'ChannelState',\n    'ChannelStateDesc',\n    'CallerIDNum',\n    'CallerIDName',\n    'ConnectedLineNum',\n    'ConnectedLineName',\n    'Language',\n    'AccountCode',\n    'Context',\n    'Exten',\n    'Priority',\n    'Uniqueid',\n    'Linkedid',\n    'Cause'\n  ];\n  configuration: Configuration;\n  loadingVisible = false;\n  constructor(private configurationService: ConfigurationService) { }\n\n  ngOnInit() {\n    this.configurationService.get().subscribe(configurations => {\n      if (configurations === null) {\n        return;\n      }\n      this.configuration = configurations[0];\n    });\n  }\n\n  save() {\n    this.loadingVisible = true;\n    this.configurationService.save(this.configuration).subscribe(res => {\n      notify('Конфигурация успешно обновлена');\n      this.loadingVisible = false;\n    }, error => {\n      this.loadingVisible = false;\n      notify(error.message, 'error');\n      throw new Error(error);\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ConfigurationLayoutComponent} from './configuration-layout/configuration-layout.component';\nimport {ConfigurationComponent} from './configuration/configuration.component';\nimport {ConfigurationVariableComponent} from './configuration-variable/configuration-variable.component';\nimport {ConfigurationCallbackComponent} from './configuration-callback/configuration-callback.component';\nimport {ConfigurationEventBindingComponent} from './configuration-event-binding/configuration-event-binding.component';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: ConfigurationLayoutComponent, children: [\n      {\n        path: '', component: ConfigurationComponent\n      },\n      {\n        path: 'variables', component: ConfigurationVariableComponent\n      },\n      {\n        path: 'callback', component: ConfigurationCallbackComponent\n      },\n      {\n        path: 'event-binding', component: ConfigurationEventBindingComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConfigurationCenterRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ConfigurationCenterRoutingModule } from './configuration-center-routing.module';\nimport { ConfigurationComponent } from './configuration/configuration.component';\nimport { ConfigurationLayoutComponent } from './configuration-layout/configuration-layout.component';\nimport {DxButtonModule, DxDataGridModule, DxFormModule, DxLoadPanelModule, DxPopupModule, DxScrollViewModule} from 'devextreme-angular';\nimport { ConfigurationVariableComponent } from './configuration-variable/configuration-variable.component';\nimport {NbCardModule} from '@nebular/theme';\nimport { ConfigurationVariableFormComponent } from './configuration-variable/configuration-variable-form/configuration-variable-form.component';\nimport { ConfigurationCallbackComponent } from './configuration-callback/configuration-callback.component';\nimport { ConfigurationEventBindingComponent } from './configuration-event-binding/configuration-event-binding.component';\n\n\n@NgModule({\n  declarations: [ConfigurationComponent, ConfigurationLayoutComponent, ConfigurationVariableComponent, ConfigurationVariableFormComponent, ConfigurationCallbackComponent, ConfigurationEventBindingComponent],\n  imports: [\n    CommonModule,\n    ConfigurationCenterRoutingModule,\n    DxFormModule,\n    DxButtonModule,\n    DxLoadPanelModule,\n    DxDataGridModule,\n    NbCardModule,\n    DxPopupModule,\n    DxScrollViewModule\n  ]\n})\nexport class ConfigurationCenterModule { }\n"]}