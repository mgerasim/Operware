{"version":3,"sources":["webpack:///src/app/@core/models/callback.model.ts","webpack:///src/app/@core/services/callback.service.ts","webpack:///src/app/@core/services/event.service.ts","webpack:///src/app/@core/services/variable.service.ts","webpack:///src/app/operators-center/callbacks/callback-form/callback-form.component.ts","webpack:///src/app/operators-center/callbacks/callback-form/callback-form.component.html","webpack:///src/app/operators-center/callbacks/callbacks.component.ts","webpack:///src/app/operators-center/callbacks/callbacks.component.html","webpack:///src/app/operators-center/calls/calls.component.html","webpack:///src/app/operators-center/calls/calls.component.ts","webpack:///src/app/operators-center/calls/events/events.component.ts","webpack:///src/app/operators-center/calls/events/events.component.html","webpack:///src/app/operators-center/calls/variables/variables.component.ts","webpack:///src/app/operators-center/calls/variables/variables.component.html","webpack:///src/app/operators-center/operators-center-routing.module.ts","webpack:///src/app/operators-center/operators-center.module.ts","webpack:///src/app/operators-center/operators-layout/operators-layout.component.ts","webpack:///src/app/operators-center/operators-layout/operators-layout.component.html"],"names":["Callback","CallbackService","httpClient","defaultHeaders","observe","reportProgress","headers","httpHeaderAccepts","consumes","get","callback","providedIn","EventService","pbxCallId","VariableService","callId","CallbackFormComponent","save","emit","save_Click","selector","templateUrl","styleUrls","CallbacksComponent","callbackService","popupVisible","subscribe","callbacks","console","log","$event","res","err","error","CallsComponent","callService","calls","data","audio","Audio","src","call_filename","load","play","EventsComponent","route","eventService","sub","params","events","getAll","VariablesComponent","variableService","popupShow","call","id","variables","variable","routes","path","component","children","OperatorsCenterRoutingModule","forChild","imports","exports","OperatorsCenterModule","declarations","OperatorsLayoutComponent"],"mappings":"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","file":"operators-center-operators-center-module-es5.js","sourcesContent":["export class Callback {\n  createdAt: Date;\n  updatedAt: Date;\n  to: string;\n  from: string;\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpEvent, HttpHeaders, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Call} from '../models/call.model';\nimport {Callback} from '../models/callback.model';\nimport {Configuration} from '../models/configuration.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CallbackService {\n\n  public defaultHeaders = new HttpHeaders();\n\n  constructor(private httpClient: HttpClient) { }\n\n  public get(observe?: 'body', reportProgress?: boolean): Observable<Callback[]>;\n  public get(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Callback[]>>;\n  public get(observe?: 'callbacks', reportProgress?: boolean): Observable<HttpEvent<Callback[]>>;\n  public get(observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n    const headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'application/json',\n      'text/json',\n      'application/xml',\n      'text/xml'\n    ];\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<Callback[]>(`/api/callbacks`,\n      {\n        headers: headers,\n        observe: observe,\n        reportProgress: reportProgress\n      }\n    );\n  }\n\n  public save(callback: Callback): Observable<Callback> {\n    const headers = this.defaultHeaders;\n    return this.httpClient.get<Callback>(`/callback`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpEvent, HttpHeaders, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Call} from '../models/call.model';\nimport {Event} from '../models/event.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n\n  public defaultHeaders = new HttpHeaders();\n\n  constructor(private httpClient: HttpClient) { }\n\n  public get(pbxCallId: string, observe?: 'body', reportProgress?: boolean): Observable<Event[]>;\n  public get(pbxCallId: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Event[]>>;\n  public get(pbxCallId: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Event[]>>;\n  public get(pbxCallId: string, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n    const headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'application/json',\n      'text/json',\n      'application/xml',\n      'text/xml'\n    ];\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<Event[]>(`/api/calls/${pbxCallId}/events`,\n      {\n        headers: headers,\n        observe: observe,\n        reportProgress: reportProgress\n      }\n    );\n  }\n\n\n  public getAll(observe?: 'body', reportProgress?: boolean): Observable<Event[]>;\n  public getAll(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Event[]>>;\n  public getAll(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Event[]>>;\n  public getAll(observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n    const headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'application/json',\n      'text/json',\n      'application/xml',\n      'text/xml'\n    ];\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<Event[]>(`/api/events`,\n      {\n        headers: headers,\n        observe: observe,\n        reportProgress: reportProgress\n      }\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpEvent, HttpHeaders, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Call} from '../models/call.model';\nimport {Variable} from '../models/variable.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VariableService {\n\n  public defaultHeaders = new HttpHeaders();\n\n  constructor(private httpClient: HttpClient) { }\n\n  public get(callId: number, observe?: 'body', reportProgress?: boolean): Observable<Variable[]>;\n  public get(callId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Variable[]>>;\n  public get(callId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Variable[]>>;\n  public get(callId: number, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n    const headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'application/json',\n      'text/json',\n      'application/xml',\n      'text/xml'\n    ];\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<Variable[]>(`/api/calls/${callId}/variables`,\n      {\n        headers: headers,\n        observe: observe,\n        reportProgress: reportProgress\n      }\n    );\n  }\n}\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Callback} from '../../../@core/models/callback.model';\n\n@Component({\n  selector: 'app-callback-form',\n  templateUrl: './callback-form.component.html',\n  styleUrls: ['./callback-form.component.scss']\n})\nexport class CallbackFormComponent implements OnInit {\n  callback: Callback;\n  @Output() save = new EventEmitter();\n  constructor() {\n    this.callback = new Callback();\n  }\n\n  ngOnInit() {\n  }\n\n  save_Click() {\n    this.save.emit(this.callback);\n  }\n}\n","<nb-card>\n  <nb-card-body>\n    <dx-form [formData]=\"callback\" colCount=\"1\">\n\n      <dxi-item dataField=\"from\">\n        <dxo-label text=\"От кого\"></dxo-label>\n      </dxi-item>\n\n      <dxi-item dataField=\"to\">\n        <dxo-label text=\"Кому\"></dxo-label>\n      </dxi-item>\n\n    </dx-form>\n\n  </nb-card-body>\n  <nb-card-footer>\n    <dx-button stylingMode=\"contained\"\n               type=\"success\"\n               text=\"Сохранить\"\n               (click)=\"save_Click()\">\n    </dx-button>\n  </nb-card-footer>\n</nb-card>\n","import { Component, OnInit } from '@angular/core';\nimport {Callback} from '../../@core/models/callback.model';\nimport {CallbackService} from '../../@core/services/callback.service';\n\n@Component({\n  selector: 'app-callbacks',\n  templateUrl: './callbacks.component.html',\n  styleUrls: ['./callbacks.component.scss']\n})\nexport class CallbacksComponent implements OnInit {\n  callbacks: Callback[];\n  popupVisible = false;\n\n  constructor(private callbackService: CallbackService) { }\n\n  ngOnInit() {\n    this.callbackService.get().subscribe(callbacks => {\n      if (callbacks === null) {\n        return;\n      }\n      console.log(callbacks);\n      this.callbacks = callbacks;\n    });\n  }\n\n  add() {\n    this.popupVisible = true;\n  }\n\n  save($event: any) {\n    console.log($event);\n    this.callbackService.save($event).subscribe(res => {\n      console.log(res);\n      this.popupVisible = false;\n    }, err => {\n      console.error(err);\n    })\n  }\n}\n","<nb-card>\n  <nb-card-body>\n    <dx-data-grid\n      id=\"gridContainer\"\n      [dataSource]=\"callbacks\"\n      [showBorders]=\"true\">\n      <dxo-paging [pageSize]=\"10\"></dxo-paging>\n      <dxo-search-panel [visible]=\"true\"></dxo-search-panel>\n      <dxo-pager\n        [showPageSizeSelector]=\"true\"\n        [allowedPageSizes]=\"[5, 10, 20]\"\n        [showInfo]=\"true\">\n      </dxo-pager>\n\n      <dxi-column dataField=\"to\"></dxi-column>\n      <dxi-column dataField=\"from\"></dxi-column>\n    </dx-data-grid>\n  </nb-card-body>\n</nb-card>\n\n<dx-popup title=\"Обратный звонок\"\n          [(visible)]=\"popupVisible\">\n  <div *dxTemplate=\"let data of 'content'\">\n    <app-callback-form (save)=\"save($event)\">\n\n    </app-callback-form>\n  </div>\n</dx-popup>\n","<dx-data-grid *ngIf=\"calls\"\n              id=\"gridContainer\"\n              [dataSource]=\"calls\"\n              [showBorders]=\"true\"\n              [masterDetail]=\"{ enabled: true, template: 'detail' }\"\n              [allowColumnResizing]=\"true\"\n              [allowColumnReordering]=\"true\">\n  <dxo-paging [pageSize]=\"20\"></dxo-paging>\n  <dxo-search-panel [visible]=\"true\"></dxo-search-panel>\n  <dxo-header-filter [visible]=\"true\"></dxo-header-filter>\n  <dxo-column-chooser\n    [enabled]=\"true\"\n    mode=\"dragAndDrop\"> <!-- or \"select\" -->\n  </dxo-column-chooser>\n  <dxo-pager\n    [showPageSizeSelector]=\"true\"\n    [allowedPageSizes]=\"[20, 30, 40]\"\n    [showInfo]=\"true\">\n  </dxo-pager>\n  <dxi-column dataField=\"id\" caption=\"#\"></dxi-column>\n  <dxi-column dataField=\"call_start\"></dxi-column>\n  <dxi-column dataField=\"call_answer\"></dxi-column>\n  <dxi-column dataField=\"call_end\"></dxi-column>\n  <dxi-column dataField=\"pbx_call_id\" cellTemplate=\"pbxCallIdCellTemplate\"></dxi-column>\n  <dxi-column dataField=\"caller_id\"></dxi-column>\n  <dxi-column dataField=\"internal\"></dxi-column>\n  <dxi-column dataField=\"responsibles\"></dxi-column>\n  <dxi-column dataField=\"called_phone_number\"></dxi-column>\n  <dxi-column dataField=\"duration\"></dxi-column>\n  <dxi-column dataField=\"call_filename\" cellTemplate=\"pbxCallFileNameCellTemplate\"></dxi-column>\n\n  <div *dxTemplate=\"let d of 'pbxCallIdCellTemplate'\">\n    <a [routerLink]=\"['/calls/' + d.data.pbx_call_id] + '/events'\">\n      {{ d.data.pbx_call_id }}\n    </a>\n  </div>\n\n  <div *dxTemplate=\"let d of 'pbxCallFileNameCellTemplate'\">\n    <dx-button *ngIf=\"d.data.call_filename\" icon=\"video\" (click)=\"play(d.data)\"></dx-button>\n  </div>\n\n  <div *dxTemplate=\"let data of 'detail'\">\n    <app-variables [call]=\"data.data\">\n\n    </app-variables>\n  </div>\n\n</dx-data-grid>\n","import { Component, OnInit } from '@angular/core';\nimport {CallService} from '../../@core/services/call.service';\nimport {Call} from '../../@core/models/call.model';\n\n@Component({\n  selector: 'app-calls',\n  templateUrl: './calls.component.html',\n  styleUrls: ['./calls.component.scss']\n})\nexport class CallsComponent implements OnInit {\n\n  calls: Call[];\n  constructor(private callService: CallService) { }\n\n  ngOnInit() {\n    this.callService.get().subscribe(calls => {\n      this.calls = calls;\n    });\n}\n\n  async play(data: Call) {\n    const audio = new Audio();\n    audio.src = data.call_filename;\n    audio.load();\n    await audio.play();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {EventService} from '../../../@core/services/event.service';\nimport {Event} from '../../../@core/models/event.model';\n\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html',\n  styleUrls: ['./events.component.scss']\n})\nexport class EventsComponent implements OnInit {\n  events: Event[];\n  pbxCallId: string | undefined;\n  private sub: any;\n  constructor(private route: ActivatedRoute,\n              private eventService: EventService) { }\n\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n      console.log(params);\n      this.pbxCallId = params['pbxCallId'];\n      if (this.pbxCallId) {\n        this.eventService.get(this.pbxCallId).subscribe(events => {\n          this.events = events;\n        });\n      } else {\n        this.eventService.getAll().subscribe(events => {\n          this.events = events;\n        });\n      }\n    });\n  }\n\n}\n","\n<dx-data-grid *ngIf=\"events\"\n              id=\"gridContainer\"\n              [dataSource]=\"events\"\n              [showBorders]=\"true\"\n              [allowColumnResizing]=\"true\"\n              [allowColumnReordering]=\"true\">\n  <dxo-paging [pageSize]=\"20\"></dxo-paging>\n  <dxo-search-panel [visible]=\"true\"></dxo-search-panel>\n  <dxo-header-filter [visible]=\"true\"></dxo-header-filter>\n  <dxo-column-chooser\n    [enabled]=\"true\"\n    mode=\"dragAndDrop\"> <!-- or \"select\" -->\n  </dxo-column-chooser>\n  <dxo-pager\n    [showPageSizeSelector]=\"true\"\n    [allowedPageSizes]=\"[5, 10, 20]\"\n    [showInfo]=\"true\">\n  </dxo-pager>\n\n  <dxi-column dataField=\"createdAt\"></dxi-column>\n  <dxi-column dataField=\"Event\"></dxi-column>\n  <dxi-column dataField=\"Privilege\"></dxi-column>\n  <dxi-column dataField=\"Channel\"></dxi-column>\n  <dxi-column dataField=\"ChannelState\"></dxi-column>\n  <dxi-column dataField=\"ChannelStateDesc\"></dxi-column>\n  <dxi-column dataField=\"CallerIDNum\"></dxi-column>\n  <dxi-column dataField=\"CallerIDName\"></dxi-column>\n  <dxi-column dataField=\"ConnectedLineNum\"></dxi-column>\n  <dxi-column dataField=\"ConnectedLineName\"></dxi-column>\n  <dxi-column dataField=\"Language\"></dxi-column>\n  <dxi-column dataField=\"AccountCode\"></dxi-column>\n  <dxi-column dataField=\"Context\"></dxi-column>\n  <dxi-column dataField=\"Exten\"></dxi-column>\n  <dxi-column dataField=\"Priority\"></dxi-column>\n  <dxi-column dataField=\"Variable\"></dxi-column>\n  <dxi-column dataField=\"Value\"></dxi-column>\n  <dxi-column dataField=\"Uniqueid\"></dxi-column>\n  <dxi-column dataField=\"Linkedid\"></dxi-column>\n</dx-data-grid>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Call} from '../../../@core/models/call.model';\nimport {VariableService} from '../../../@core/services/variable.service';\nimport {Variable} from '../../../@core/models/variable.model';\n\n@Component({\n  selector: 'app-variables',\n  templateUrl: './variables.component.html',\n  styleUrls: ['./variables.component.scss']\n})\nexport class VariablesComponent implements OnInit {\n  @Input() call: Call;\n  variables: Variable[];\n  popupShow = false;\n  variable: Variable;\n  constructor(private variableService: VariableService) { }\n\n  ngOnInit() {\n    this.variableService.get(this.call.id).subscribe(variables => {\n      if (variables === null) {\n        return;\n      }\n      console.log(variables);\n      this.variables = variables;\n    });\n  }\n\n  show(data: any) {\n    console.log(data);\n    this.popupShow = true;\n    this.variable = data.data;\n  }\n}\n","<dx-data-grid\n  id=\"gridContainer\"\n  [dataSource]=\"variables\"\n  [showBorders]=\"true\">\n  <dxo-paging [pageSize]=\"10\"></dxo-paging>\n  <dxo-search-panel [visible]=\"true\"></dxo-search-panel>\n  <dxo-pager\n    [showPageSizeSelector]=\"true\"\n    [allowedPageSizes]=\"[5, 10, 20]\"\n    [showInfo]=\"true\">\n  </dxo-pager>\n\n  <dxi-column dataField=\"title\"></dxi-column>\n  <dxi-column dataField=\"value\"></dxi-column>\n  <dxi-column dataField=\"buttonShow\" caption=\"\" width=\"110\" cellTemplate=\"cellButtonShowTemplate\"></dxi-column>\n\n  <div *dxTemplate=\"let data of 'cellButtonShowTemplate'\">\n    <dx-button icon=\"file\" (click)=\"show(data)\"></dx-button>\n  </div>\n\n</dx-data-grid>\n\n<dx-popup title=\"Подробности\"\n          [(visible)]=\"popupShow\">\n  <div *dxTemplate=\"let data of 'content'\">\n    <pre> {{  variable.response }}</pre>\n  </div>\n</dx-popup>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {OperatorsLayoutComponent} from './operators-layout/operators-layout.component';\nimport {CallsComponent} from './calls/calls.component';\nimport {EventsComponent} from './calls/events/events.component';\nimport {CallbacksComponent} from './callbacks/callbacks.component';\nimport {MainLayoutComponent} from '../@core/layouts/main-layout/main-layout.component';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: MainLayoutComponent, children: [\n      {\n        path: '', component: CallsComponent\n      },\n      {\n        path: ':pbxCallId/events',  component: EventsComponent\n      },\n      {\n        path: 'events', component: EventsComponent\n      },\n      {\n        path: 'callbacks', component: CallbacksComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OperatorsCenterRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OperatorsCenterRoutingModule } from './operators-center-routing.module';\nimport { CallsComponent } from './calls/calls.component';\nimport { OperatorsLayoutComponent } from './operators-layout/operators-layout.component';\nimport {DxButtonModule, DxDataGridModule, DxFormModule, DxPopupModule, DxTextBoxModule} from 'devextreme-angular';\nimport { EventsComponent } from './calls/events/events.component';\nimport { VariablesComponent } from './calls/variables/variables.component';\nimport { CallbacksComponent } from './callbacks/callbacks.component';\nimport {NbCardModule} from '@nebular/theme';\nimport { CallbackFormComponent } from './callbacks/callback-form/callback-form.component';\n\n\n@NgModule({\n  declarations: [CallsComponent, OperatorsLayoutComponent, EventsComponent, VariablesComponent, CallbacksComponent, CallbackFormComponent],\n  imports: [\n    CommonModule,\n    OperatorsCenterRoutingModule,\n    DxDataGridModule,\n    DxTextBoxModule,\n    NbCardModule,\n    DxButtonModule,\n    DxPopupModule,\n    DxFormModule\n  ]\n})\nexport class OperatorsCenterModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-operators-layout',\n  templateUrl: './operators-layout.component.html',\n  styleUrls: ['./operators-layout.component.scss']\n})\nexport class OperatorsLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet></router-outlet>\n"]}